{
    "sourceFile": "App.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 26,
            "patches": [
                {
                    "date": 1752699058569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752699792043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,15 +3,15 @@\n import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n import { StripeProvider } from \"@stripe/stripe-react-native\";\r\n import { Session } from \"@supabase/supabase-js\";\r\n import { useEffect, useState } from \"react\";\r\n-import FloatingCartButton from \"./components/cart/FloatingCartButton\";\r\n import { supabase } from \"./integrations/supabase/client\";\r\n+import FloatingCartButton from \"./src/components/cart/FloatingCartButton\";\r\n \r\n // Import screens (anciennement pages)\r\n import Domiciliation from \"./screens/Domiciliation\";\r\n-import Index from \"./screens/Index\";\r\n-import ServicesAdmin from \"./screens/ServicesAdmin\";\r\n+// import Index from \"./screens/Index\";\r\n+// import ServicesAdmin from \"./screens/ServicesAdmin\";\r\n // ... (importe les autres comme tu faisais)\r\n \r\n const Stack = createNativeStackNavigator();\r\n \r\n"
                },
                {
                    "date": 1752735580777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,12 +4,12 @@\n import { StripeProvider } from \"@stripe/stripe-react-native\";\r\n import { Session } from \"@supabase/supabase-js\";\r\n import { useEffect, useState } from \"react\";\r\n import { supabase } from \"./integrations/supabase/client\";\r\n-import FloatingCartButton from \"./src/components/cart/FloatingCartButton\";\r\n+// import FloatingCartButton from \"./src/components/cart/FloatingCartButton\";\r\n \r\n // Import screens (anciennement pages)\r\n-import Domiciliation from \"./screens/Domiciliation\";\r\n+import Domiciliation from \"./src/screens/Domiciliation\";\r\n // import Index from \"./screens/Index\";\r\n // import ServicesAdmin from \"./screens/ServicesAdmin\";\r\n // ... (importe les autres comme tu faisais)\r\n \r\n"
                },
                {
                    "date": 1752735732032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,10 @@\n       <NavigationContainer>\r\n         <Stack.Navigator>\r\n           <Stack.Screen name=\"Home\" component={Index} />\r\n           <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n-          <Stack.Screen name=\"ServicesAdmin\" component={ServicesAdmin} />\r\n-          {/* ➤ Ajoute ici tous les autres écrans, exemple :\r\n+          {/*//<Stack.Screen name=\"ServicesAdmin\" component={ServicesAdmin} />\r\n+           ➤ Ajoute ici tous les autres écrans, exemple :\r\n           <Stack.Screen name=\"Checkout\" component={Checkout} />\r\n           <Stack.Screen name=\"Contact\" component={Contact} />\r\n           */}\r\n         </Stack.Navigator>\r\n"
                },
                {
                    "date": 1752735739781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,8 @@\n           <Stack.Screen name=\"Contact\" component={Contact} />\r\n           */}\r\n         </Stack.Navigator>\r\n       </NavigationContainer>\r\n-      {session && <FloatingCartButton />}\r\n+      {/* {session && <FloatingCartButton />} */}\r\n     </StripeProvider>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752735903869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n // import FloatingCartButton from \"./src/components/cart/FloatingCartButton\";\r\n \r\n // Import screens (anciennement pages)\r\n import Domiciliation from \"./src/screens/Domiciliation\";\r\n-// import Index from \"./screens/Index\";\r\n+import Index from \"./src/screens/index\";\r\n // import ServicesAdmin from \"./screens/ServicesAdmin\";\r\n // ... (importe les autres comme tu faisais)\r\n \r\n const Stack = createNativeStackNavigator();\r\n"
                },
                {
                    "date": 1752735949109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n // import FloatingCartButton from \"./src/components/cart/FloatingCartButton\";\r\n \r\n // Import screens (anciennement pages)\r\n import Domiciliation from \"./src/screens/Domiciliation\";\r\n-import Index from \"./src/screens/index\";\r\n+import Index from \"./src/screens/Index\";\r\n // import ServicesAdmin from \"./screens/ServicesAdmin\";\r\n // ... (importe les autres comme tu faisais)\r\n \r\n const Stack = createNativeStackNavigator();\r\n"
                },
                {
                    "date": 1752736046390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   }, []);\r\n \r\n   return (\r\n     <StripeProvider\r\n-      publishableKey={process.env.EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY}\r\n+      publishableKey={process.env.EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY || \"\"}\r\n     >\r\n       <NavigationContainer>\r\n         <Stack.Navigator>\r\n           <Stack.Screen name=\"Home\" component={Index} />\r\n"
                },
                {
                    "date": 1752736235454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,15 @@\n-// App.tsx (React Native)\r\n import { NavigationContainer } from \"@react-navigation/native\";\r\n import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n import { StripeProvider } from \"@stripe/stripe-react-native\";\r\n import { Session } from \"@supabase/supabase-js\";\r\n import { useEffect, useState } from \"react\";\r\n+import { CartProvider } from \"./components/cart/CartContext\";\r\n import { supabase } from \"./integrations/supabase/client\";\r\n-// import FloatingCartButton from \"./src/components/cart/FloatingCartButton\";\r\n \r\n-// Import screens (anciennement pages)\r\n+// Import screens\r\n import Domiciliation from \"./src/screens/Domiciliation\";\r\n import Index from \"./src/screens/Index\";\r\n-// import ServicesAdmin from \"./screens/ServicesAdmin\";\r\n-// ... (importe les autres comme tu faisais)\r\n \r\n const Stack = createNativeStackNavigator();\r\n \r\n export default function App() {\r\n@@ -35,19 +32,15 @@\n   return (\r\n     <StripeProvider\r\n       publishableKey={process.env.EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY || \"\"}\r\n     >\r\n-      <NavigationContainer>\r\n-        <Stack.Navigator>\r\n-          <Stack.Screen name=\"Home\" component={Index} />\r\n-          <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n-          {/*//<Stack.Screen name=\"ServicesAdmin\" component={ServicesAdmin} />\r\n-           ➤ Ajoute ici tous les autres écrans, exemple :\r\n-          <Stack.Screen name=\"Checkout\" component={Checkout} />\r\n-          <Stack.Screen name=\"Contact\" component={Contact} />\r\n-          */}\r\n-        </Stack.Navigator>\r\n-      </NavigationContainer>\r\n-      {/* {session && <FloatingCartButton />} */}\r\n+      <CartProvider>\r\n+        <NavigationContainer>\r\n+          <Stack.Navigator>\r\n+            <Stack.Screen name=\"Home\" component={Index} />\r\n+            <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n+          </Stack.Navigator>\r\n+        </NavigationContainer>\r\n+      </CartProvider>\r\n     </StripeProvider>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1752736343302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,10 @@\n import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n import { StripeProvider } from \"@stripe/stripe-react-native\";\r\n import { Session } from \"@supabase/supabase-js\";\r\n import { useEffect, useState } from \"react\";\r\n-import { CartProvider } from \"./components/cart/CartContext\";\r\n import { supabase } from \"./integrations/supabase/client\";\r\n+import { CartProvider } from \"./src/components/cart/CartContext\";\r\n \r\n // Import screens\r\n import Domiciliation from \"./src/screens/Domiciliation\";\r\n import Index from \"./src/screens/Index\";\r\n"
                },
                {
                    "date": 1752736710416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,12 @@\n import { supabase } from \"./integrations/supabase/client\";\r\n import { CartProvider } from \"./src/components/cart/CartContext\";\r\n \r\n // Import screens\r\n+import Dashboard from \"./src/screens/Dashboard\";\r\n import Domiciliation from \"./src/screens/Domiciliation\";\r\n import Index from \"./src/screens/Index\";\r\n+import Register from \"./src/screens/Register\";\r\n \r\n const Stack = createNativeStackNavigator();\r\n \r\n export default function App() {\r\n@@ -37,8 +39,10 @@\n         <NavigationContainer>\r\n           <Stack.Navigator>\r\n             <Stack.Screen name=\"Home\" component={Index} />\r\n             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n+            <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n+            <Stack.Screen name=\"Register\" component={Register} />\r\n           </Stack.Navigator>\r\n         </NavigationContainer>\r\n       </CartProvider>\r\n     </StripeProvider>\r\n"
                },
                {
                    "date": 1752739039807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n // Import screens\r\n import Dashboard from \"./src/screens/Dashboard\";\r\n import Domiciliation from \"./src/screens/Domiciliation\";\r\n import Index from \"./src/screens/Index\";\r\n+import Login from \"./src/screens/Login\";\r\n import Register from \"./src/screens/Register\";\r\n \r\n const Stack = createNativeStackNavigator();\r\n \r\n@@ -41,8 +42,10 @@\n             <Stack.Screen name=\"Home\" component={Index} />\r\n             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n             <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n             <Stack.Screen name=\"Register\" component={Register} />\r\n+            <Stack.Screen name=\"Login\" component={Login} />\r\n+            // Placeholder for Login screen\r\n           </Stack.Navigator>\r\n         </NavigationContainer>\r\n       </CartProvider>\r\n     </StripeProvider>\r\n"
                },
                {
                    "date": 1752745126459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,19 @@\n import { NavigationContainer } from \"@react-navigation/native\";\r\n import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n import { StripeProvider } from \"@stripe/stripe-react-native\";\r\n-import { Session } from \"@supabase/supabase-js\";\r\n+import { createClient } from \"@supabase/supabase-js\";\r\n import { useEffect, useState } from \"react\";\r\n-import { supabase } from \"./integrations/supabase/client\";\r\n-import { CartProvider } from \"./src/components/cart/CartContext\";\r\n+import { supabase } from \"./integrations/supabase/client.js\";\r\n+import { CartProvider } from \"./src/components/cart/CartContext.js\";\r\n+type Session = ReturnType<typeof createClient>[\"auth\"][\"getSession\"];\r\n \r\n // Import screens\r\n-import Dashboard from \"./src/screens/Dashboard\";\r\n-import Domiciliation from \"./src/screens/Domiciliation\";\r\n-import Index from \"./src/screens/Index\";\r\n-import Login from \"./src/screens/Login\";\r\n-import Register from \"./src/screens/Register\";\r\n+import Dashboard from \"./src/screens/Dashboard.js\";\r\n+import Domiciliation from \"./src/screens/Domiciliation.js\";\r\n+import Index from \"./src/screens/Index.js\";\r\n+import Login from \"./src/screens/Login.js\";\r\n+import Register from \"./src/screens/Register.js\";\r\n \r\n const Stack = createNativeStackNavigator();\r\n \r\n export default function App() {\r\n"
                },
                {
                    "date": 1752745308660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,17 @@\n import { NavigationContainer } from \"@react-navigation/native\";\r\n import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n import { StripeProvider } from \"@stripe/stripe-react-native\";\r\n-import { createClient } from \"@supabase/supabase-js\";\r\n import { useEffect, useState } from \"react\";\r\n import { supabase } from \"./integrations/supabase/client.js\";\r\n import { CartProvider } from \"./src/components/cart/CartContext.js\";\r\n-type Session = ReturnType<typeof createClient>[\"auth\"][\"getSession\"];\r\n \r\n+// Import Supabase types\r\n+import type {\r\n+  AuthChangeEvent,\r\n+  Session as SupabaseSession,\r\n+} from \"@supabase/supabase-js\";\r\n+\r\n // Import screens\r\n import Dashboard from \"./src/screens/Dashboard.js\";\r\n import Domiciliation from \"./src/screens/Domiciliation.js\";\r\n import Index from \"./src/screens/Index.js\";\r\n@@ -16,22 +20,26 @@\n \r\n const Stack = createNativeStackNavigator();\r\n \r\n export default function App() {\r\n-  const [session, setSession] = useState<Session | null>(null);\r\n+  const [session, setSession] = useState<SupabaseSession | null>(null);\r\n \r\n   useEffect(() => {\r\n     const {\r\n       data: { subscription },\r\n-    } = supabase.auth.onAuthStateChange((_event, session) =>\r\n-      setSession(session)\r\n+    } = supabase.auth.onAuthStateChange(\r\n+      (_event: AuthChangeEvent, session: SupabaseSession | null) => {\r\n+        setSession(session);\r\n+      }\r\n     );\r\n \r\n     supabase.auth.getSession().then(({ data: { session } }) => {\r\n       setSession(session);\r\n     });\r\n \r\n-    return () => subscription.unsubscribe();\r\n+    return () => {\r\n+      subscription.unsubscribe();\r\n+    };\r\n   }, []);\r\n \r\n   return (\r\n     <StripeProvider\r\n@@ -44,9 +52,8 @@\n             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n             <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n             <Stack.Screen name=\"Register\" component={Register} />\r\n             <Stack.Screen name=\"Login\" component={Login} />\r\n-            // Placeholder for Login screen\r\n           </Stack.Navigator>\r\n         </NavigationContainer>\r\n       </CartProvider>\r\n     </StripeProvider>\r\n"
                },
                {
                    "date": 1752745384877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,14 +4,8 @@\n import { useEffect, useState } from \"react\";\r\n import { supabase } from \"./integrations/supabase/client.js\";\r\n import { CartProvider } from \"./src/components/cart/CartContext.js\";\r\n \r\n-// Import Supabase types\r\n-import type {\r\n-  AuthChangeEvent,\r\n-  Session as SupabaseSession,\r\n-} from \"@supabase/supabase-js\";\r\n-\r\n // Import screens\r\n import Dashboard from \"./src/screens/Dashboard.js\";\r\n import Domiciliation from \"./src/screens/Domiciliation.js\";\r\n import Index from \"./src/screens/Index.js\";\r\n@@ -19,19 +13,21 @@\n import Register from \"./src/screens/Register.js\";\r\n \r\n const Stack = createNativeStackNavigator();\r\n \r\n+type SessionType = Awaited<\r\n+  ReturnType<typeof supabase.auth.getSession>\r\n+>[\"data\"][\"session\"];\r\n+\r\n export default function App() {\r\n-  const [session, setSession] = useState<SupabaseSession | null>(null);\r\n+  const [session, setSession] = useState<SessionType | null>(null);\r\n \r\n   useEffect(() => {\r\n     const {\r\n       data: { subscription },\r\n-    } = supabase.auth.onAuthStateChange(\r\n-      (_event: AuthChangeEvent, session: SupabaseSession | null) => {\r\n-        setSession(session);\r\n-      }\r\n-    );\r\n+    } = supabase.auth.onAuthStateChange((_event, session) => {\r\n+      setSession(session);\r\n+    });\r\n \r\n     supabase.auth.getSession().then(({ data: { session } }) => {\r\n       setSession(session);\r\n     });\r\n"
                },
                {
                    "date": 1752745464492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,25 +13,34 @@\n import Register from \"./src/screens/Register.js\";\r\n \r\n const Stack = createNativeStackNavigator();\r\n \r\n+// Get proper session type dynamically from supabase client\r\n type SessionType = Awaited<\r\n   ReturnType<typeof supabase.auth.getSession>\r\n >[\"data\"][\"session\"];\r\n \r\n+type AuthChangeEventType = Parameters<\r\n+  Parameters<typeof supabase.auth.onAuthStateChange>[0]\r\n+>[0];\r\n+\r\n export default function App() {\r\n   const [session, setSession] = useState<SessionType | null>(null);\r\n \r\n   useEffect(() => {\r\n     const {\r\n       data: { subscription },\r\n-    } = supabase.auth.onAuthStateChange((_event, session) => {\r\n-      setSession(session);\r\n-    });\r\n+    } = supabase.auth.onAuthStateChange(\r\n+      (event: AuthChangeEventType, sessionData: SessionType | null) => {\r\n+        setSession(sessionData);\r\n+      }\r\n+    );\r\n \r\n-    supabase.auth.getSession().then(({ data: { session } }) => {\r\n-      setSession(session);\r\n-    });\r\n+    supabase.auth\r\n+      .getSession()\r\n+      .then(({ data }: { data: { session: SessionType | null } }) => {\r\n+        setSession(data.session);\r\n+      });\r\n \r\n     return () => {\r\n       subscription.unsubscribe();\r\n     };\r\n"
                },
                {
                    "date": 1752754425404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import { supabase } from \"./integrations/supabase/client.js\";\r\n import { CartProvider } from \"./src/components/cart/CartContext.js\";\r\n \r\n // Import screens\r\n+import Footer from \"./src/components/Footer.js\";\r\n import Dashboard from \"./src/screens/Dashboard.js\";\r\n import Domiciliation from \"./src/screens/Domiciliation.js\";\r\n import Index from \"./src/screens/Index.js\";\r\n import Login from \"./src/screens/Login.js\";\r\n@@ -57,8 +58,9 @@\n             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n             <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n             <Stack.Screen name=\"Register\" component={Register} />\r\n             <Stack.Screen name=\"Login\" component={Login} />\r\n+            <Stack.Screen name=\"Footer\" component={Footer} />\r\n           </Stack.Navigator>\r\n         </NavigationContainer>\r\n       </CartProvider>\r\n     </StripeProvider>\r\n"
                },
                {
                    "date": 1752754599901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,8 @@\n import { supabase } from \"./integrations/supabase/client.js\";\r\n import { CartProvider } from \"./src/components/cart/CartContext.js\";\r\n \r\n // Import screens\r\n-import Footer from \"./src/components/Footer.js\";\r\n import Dashboard from \"./src/screens/Dashboard.js\";\r\n import Domiciliation from \"./src/screens/Domiciliation.js\";\r\n import Index from \"./src/screens/Index.js\";\r\n import Login from \"./src/screens/Login.js\";\r\n@@ -58,9 +57,9 @@\n             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n             <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n             <Stack.Screen name=\"Register\" component={Register} />\r\n             <Stack.Screen name=\"Login\" component={Login} />\r\n-            <Stack.Screen name=\"Footer\" component={Footer} />\r\n+            {/* <Stack.Screen name=\"Footer\" component={Footer} /> */}\r\n           </Stack.Navigator>\r\n         </NavigationContainer>\r\n       </CartProvider>\r\n     </StripeProvider>\r\n"
                },
                {
                    "date": 1752755669542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import { supabase } from \"./integrations/supabase/client.js\";\r\n import { CartProvider } from \"./src/components/cart/CartContext.js\";\r\n \r\n // Import screens\r\n+import Contact from \"./src/screens/Contact.js\";\r\n import Dashboard from \"./src/screens/Dashboard.js\";\r\n import Domiciliation from \"./src/screens/Domiciliation.js\";\r\n import Index from \"./src/screens/Index.js\";\r\n import Login from \"./src/screens/Login.js\";\r\n@@ -57,8 +58,10 @@\n             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n             <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n             <Stack.Screen name=\"Register\" component={Register} />\r\n             <Stack.Screen name=\"Login\" component={Login} />\r\n+            <Stack.Screen name=\"Contact\" component={Contact} /> // Placeholder\r\n+            for Contact screen\r\n             {/* <Stack.Screen name=\"Footer\" component={Footer} /> */}\r\n           </Stack.Navigator>\r\n         </NavigationContainer>\r\n       </CartProvider>\r\n"
                },
                {
                    "date": 1752755955843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n     >\r\n       <CartProvider>\r\n         <NavigationContainer>\r\n           <Stack.Navigator>\r\n+            console.log(\"Session at App level:\", session);\r\n             <Stack.Screen name=\"Home\" component={Index} />\r\n             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n             <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n             <Stack.Screen name=\"Register\" component={Register} />\r\n"
                },
                {
                    "date": 1752755984244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,9 @@\n         <NavigationContainer>\r\n           <Stack.Navigator>\r\n             console.log(\"Session at App level:\", session);\r\n             <Stack.Screen name=\"Home\" component={Index} />\r\n+            console.log(\"Loading screen: Home\");\r\n             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n             <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n             <Stack.Screen name=\"Register\" component={Register} />\r\n             <Stack.Screen name=\"Login\" component={Login} />\r\n"
                },
                {
                    "date": 1752755996759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,9 @@\n             console.log(\"Loading screen: Home\");\r\n             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n             <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n             <Stack.Screen name=\"Register\" component={Register} />\r\n+            console.log(\"Loading screen: Register\");\r\n             <Stack.Screen name=\"Login\" component={Login} />\r\n             <Stack.Screen name=\"Contact\" component={Contact} /> // Placeholder\r\n             for Contact screen\r\n             {/* <Stack.Screen name=\"Footer\" component={Footer} /> */}\r\n"
                },
                {
                    "date": 1752756056047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+import { NavigationContainer } from \"@react-navigation/native\";\r\n+import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n+import { StripeProvider } from \"@stripe/stripe-react-native\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { supabase } from \"./integrations/supabase/client.js\";\r\n+import { CartProvider } from \"./src/components/cart/CartContext.js\";\r\n+\r\n+// Import screens\r\n+import Contact from \"./src/screens/Contact.js\";\r\n+import Dashboard from \"./src/screens/Dashboard.js\";\r\n+import Domiciliation from \"./src/screens/Domiciliation.js\";\r\n+import Index from \"./src/screens/Index.js\";\r\n+import Login from \"./src/screens/Login.js\";\r\n+import Register from \"./src/screens/Register.js\";\r\n+\r\n+const Stack = createNativeStackNavigator();\r\n+\r\n+// Get proper session type dynamically from supabase client\r\n+type SessionType = Awaited<\r\n+  ReturnType<typeof supabase.auth.getSession>\r\n+>[\"data\"][\"session\"];\r\n+\r\n+type AuthChangeEventType = Parameters<\r\n+  Parameters<typeof supabase.auth.onAuthStateChange>[0]\r\n+>[0];\r\n+\r\n+export default function App() {\r\n+  const [session, setSession] = useState<SessionType | null>(null);\r\n+\r\n+  useEffect(() => {\r\n+    const {\r\n+      data: { subscription },\r\n+    } = supabase.auth.onAuthStateChange(\r\n+      (event: AuthChangeEventType, sessionData: SessionType | null) => {\r\n+        setSession(sessionData);\r\n+      }\r\n+    );\r\n+\r\n+    supabase.auth\r\n+      .getSession()\r\n+      .then(({ data }: { data: { session: SessionType | null } }) => {\r\n+        setSession(data.session);\r\n+      });\r\n+\r\n+    return () => {\r\n+      subscription.unsubscribe();\r\n+    };\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <StripeProvider\r\n+      publishableKey={process.env.EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY || \"\"}\r\n+    >\r\n+      <CartProvider>\r\n+        <NavigationContainer>\r\n+          <Stack.Navigator>\r\n+            <Stack.Screen name=\"Home\" component={Index} />\r\n+            <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n+            <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n+            <Stack.Screen name=\"Register\" component={Register} />\r\n+            <Stack.Screen name=\"Login\" component={Login} />\r\n+            <Stack.Screen name=\"Contact\" component={Contact} /> // Placeholder\r\n+            for Contact screen\r\n+            {/* <Stack.Screen name=\"Footer\" component={Footer} /> */}\r\n+          </Stack.Navigator>\r\n+        </NavigationContainer>\r\n+      </CartProvider>\r\n+    </StripeProvider>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1752757338068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,14 +5,13 @@\n import { supabase } from \"./integrations/supabase/client.js\";\r\n import { CartProvider } from \"./src/components/cart/CartContext.js\";\r\n \r\n // Import screens\r\n-import Contact from \"./src/screens/Contact.js\";\r\n-import Dashboard from \"./src/screens/Dashboard.js\";\r\n-import Domiciliation from \"./src/screens/Domiciliation.js\";\r\n-import Index from \"./src/screens/Index.js\";\r\n-import Login from \"./src/screens/Login.js\";\r\n-import Register from \"./src/screens/Register.js\";\r\n+import Contact from \"./app/(tabs)/Contact.js\";\r\n+import Dashboard from \"./app/(tabs)/Dashboard.js\";\r\n+import Domiciliation from \"./app/(tabs)/Domiciliation.js\";\r\n+import Login from \"./app/(tabs)/Login.js\";\r\n+import Register from \"./app/(tabs)/Register.js\";\r\n \r\n const Stack = createNativeStackNavigator();\r\n \r\n // Get proper session type dynamically from supabase client\r\n@@ -53,9 +52,8 @@\n     >\r\n       <CartProvider>\r\n         <NavigationContainer>\r\n           <Stack.Navigator>\r\n-            <Stack.Screen name=\"Home\" component={Index} />\r\n             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n             <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n             <Stack.Screen name=\"Register\" component={Register} />\r\n             <Stack.Screen name=\"Login\" component={Login} />\r\n@@ -67,77 +65,4 @@\n       </CartProvider>\r\n     </StripeProvider>\r\n   );\r\n }\r\n-import { NavigationContainer } from \"@react-navigation/native\";\r\n-import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n-import { StripeProvider } from \"@stripe/stripe-react-native\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { supabase } from \"./integrations/supabase/client.js\";\r\n-import { CartProvider } from \"./src/components/cart/CartContext.js\";\r\n-\r\n-// Import screens\r\n-import Contact from \"./src/screens/Contact.js\";\r\n-import Dashboard from \"./src/screens/Dashboard.js\";\r\n-import Domiciliation from \"./src/screens/Domiciliation.js\";\r\n-import Index from \"./src/screens/Index.js\";\r\n-import Login from \"./src/screens/Login.js\";\r\n-import Register from \"./src/screens/Register.js\";\r\n-\r\n-const Stack = createNativeStackNavigator();\r\n-\r\n-// Get proper session type dynamically from supabase client\r\n-type SessionType = Awaited<\r\n-  ReturnType<typeof supabase.auth.getSession>\r\n->[\"data\"][\"session\"];\r\n-\r\n-type AuthChangeEventType = Parameters<\r\n-  Parameters<typeof supabase.auth.onAuthStateChange>[0]\r\n->[0];\r\n-\r\n-export default function App() {\r\n-  const [session, setSession] = useState<SessionType | null>(null);\r\n-\r\n-  useEffect(() => {\r\n-    const {\r\n-      data: { subscription },\r\n-    } = supabase.auth.onAuthStateChange(\r\n-      (event: AuthChangeEventType, sessionData: SessionType | null) => {\r\n-        setSession(sessionData);\r\n-      }\r\n-    );\r\n-\r\n-    supabase.auth\r\n-      .getSession()\r\n-      .then(({ data }: { data: { session: SessionType | null } }) => {\r\n-        setSession(data.session);\r\n-      });\r\n-\r\n-    return () => {\r\n-      subscription.unsubscribe();\r\n-    };\r\n-  }, []);\r\n-\r\n-  return (\r\n-    <StripeProvider\r\n-      publishableKey={process.env.EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY || \"\"}\r\n-    >\r\n-      <CartProvider>\r\n-        <NavigationContainer>\r\n-          <Stack.Navigator>\r\n-            console.log(\"Session at App level:\", session);\r\n-            <Stack.Screen name=\"Home\" component={Index} />\r\n-            console.log(\"Loading screen: Home\");\r\n-            <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n-            <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n-            <Stack.Screen name=\"Register\" component={Register} />\r\n-            console.log(\"Loading screen: Register\");\r\n-            <Stack.Screen name=\"Login\" component={Login} />\r\n-            <Stack.Screen name=\"Contact\" component={Contact} /> // Placeholder\r\n-            for Contact screen\r\n-            {/* <Stack.Screen name=\"Footer\" component={Footer} /> */}\r\n-          </Stack.Navigator>\r\n-        </NavigationContainer>\r\n-      </CartProvider>\r\n-    </StripeProvider>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1752866008629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+// import { NavigationContainer } from \"@react-navigation/native\";\r\n+// import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n+// import { StripeProvider } from \"@stripe/stripe-react-native\";\r\n+// import { useEffect, useState } from \"react\";\r\n+// import { supabase } from \"./integrations/supabase/client.js\";\r\n+// import { CartProvider } from \"./src/components/cart/CartContext.js\";\r\n+\r\n+// // Import screens\r\n+// import Contact from \"./app/(tabs)/Contact.js\";\r\n+// import Dashboard from \"./app/(tabs)/Dashboard.js\";\r\n+// import Domiciliation from \"./app/(tabs)/Domiciliation.js\";\r\n+// import Login from \"./app/(tabs)/Login.js\";\r\n+// import Register from \"./app/(tabs)/Register.js\";\r\n+\r\n+// const Stack = createNativeStackNavigator();\r\n+\r\n+// // Get proper session type dynamically from supabase client\r\n+// type SessionType = Awaited<\r\n+//   ReturnType<typeof supabase.auth.getSession>\r\n+// >[\"data\"][\"session\"];\r\n+\r\n+// type AuthChangeEventType = Parameters<\r\n+//   Parameters<typeof supabase.auth.onAuthStateChange>[0]\r\n+// >[0];\r\n+\r\n+// export default function App() {\r\n+//   const [session, setSession] = useState<SessionType | null>(null);\r\n+\r\n+//   useEffect(() => {\r\n+//     const {\r\n+//       data: { subscription },\r\n+//     } = supabase.auth.onAuthStateChange(\r\n+//       (event: AuthChangeEventType, sessionData: SessionType | null) => {\r\n+//         setSession(sessionData);\r\n+//       }\r\n+//     );\r\n+\r\n+//     supabase.auth\r\n+//       .getSession()\r\n+//       .then(({ data }: { data: { session: SessionType | null } }) => {\r\n+//         setSession(data.session);\r\n+//       });\r\n+\r\n+//     return () => {\r\n+//       subscription.unsubscribe();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   return (\r\n+//     <StripeProvider\r\n+//       publishableKey={process.env.EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY || \"\"}\r\n+//     >\r\n+//       <CartProvider>\r\n+//         <NavigationContainer>\r\n+//           <Stack.Navigator>\r\n+//             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n+//             <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n+//             <Stack.Screen name=\"Register\" component={Register} />\r\n+//             <Stack.Screen name=\"Login\" component={Login} />\r\n+//             <Stack.Screen name=\"Contact\" component={Contact} /> // Placeholder\r\n+//             for Contact screen\r\n+//             {/* <Stack.Screen name=\"Footer\" component={Footer} /> */}\r\n+//           </Stack.Navigator>\r\n+//         </NavigationContainer>\r\n+//       </CartProvider>\r\n+//     </StripeProvider>\r\n+//   );\r\n+// }\r\n"
                },
                {
                    "date": 1752866113283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,72 +1,4 @@\n-// import { NavigationContainer } from \"@react-navigation/native\";\r\n-// import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n-// import { StripeProvider } from \"@stripe/stripe-react-native\";\r\n-// import { useEffect, useState } from \"react\";\r\n-// import { supabase } from \"./integrations/supabase/client.js\";\r\n-// import { CartProvider } from \"./src/components/cart/CartContext.js\";\r\n-\r\n-// // Import screens\r\n-// import Contact from \"./app/(tabs)/Contact.js\";\r\n-// import Dashboard from \"./app/(tabs)/Dashboard.js\";\r\n-// import Domiciliation from \"./app/(tabs)/Domiciliation.js\";\r\n-// import Login from \"./app/(tabs)/Login.js\";\r\n-// import Register from \"./app/(tabs)/Register.js\";\r\n-\r\n-// const Stack = createNativeStackNavigator();\r\n-\r\n-// // Get proper session type dynamically from supabase client\r\n-// type SessionType = Awaited<\r\n-//   ReturnType<typeof supabase.auth.getSession>\r\n-// >[\"data\"][\"session\"];\r\n-\r\n-// type AuthChangeEventType = Parameters<\r\n-//   Parameters<typeof supabase.auth.onAuthStateChange>[0]\r\n-// >[0];\r\n-\r\n-// export default function App() {\r\n-//   const [session, setSession] = useState<SessionType | null>(null);\r\n-\r\n-//   useEffect(() => {\r\n-//     const {\r\n-//       data: { subscription },\r\n-//     } = supabase.auth.onAuthStateChange(\r\n-//       (event: AuthChangeEventType, sessionData: SessionType | null) => {\r\n-//         setSession(sessionData);\r\n-//       }\r\n-//     );\r\n-\r\n-//     supabase.auth\r\n-//       .getSession()\r\n-//       .then(({ data }: { data: { session: SessionType | null } }) => {\r\n-//         setSession(data.session);\r\n-//       });\r\n-\r\n-//     return () => {\r\n-//       subscription.unsubscribe();\r\n-//     };\r\n-//   }, []);\r\n-\r\n-//   return (\r\n-//     <StripeProvider\r\n-//       publishableKey={process.env.EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY || \"\"}\r\n-//     >\r\n-//       <CartProvider>\r\n-//         <NavigationContainer>\r\n-//           <Stack.Navigator>\r\n-//             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n-//             <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n-//             <Stack.Screen name=\"Register\" component={Register} />\r\n-//             <Stack.Screen name=\"Login\" component={Login} />\r\n-//             <Stack.Screen name=\"Contact\" component={Contact} /> // Placeholder\r\n-//             for Contact screen\r\n-//             {/* <Stack.Screen name=\"Footer\" component={Footer} /> */}\r\n-//           </Stack.Navigator>\r\n-//         </NavigationContainer>\r\n-//       </CartProvider>\r\n-//     </StripeProvider>\r\n-//   );\r\n-// }\r\n import { NavigationContainer } from \"@react-navigation/native\";\r\n import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n import { StripeProvider } from \"@stripe/stripe-react-native\";\r\n import { useEffect, useState } from \"react\";\r\n"
                },
                {
                    "date": 1752866272365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+// import { NavigationContainer } from \"@react-navigation/native\";\r\n+// import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n+// import { StripeProvider } from \"@stripe/stripe-react-native\";\r\n+// import { useEffect, useState } from \"react\";\r\n+// import { supabase } from \"./integrations/supabase/client.js\";\r\n+// import { CartProvider } from \"./src/components/cart/CartContext.js\";\r\n+\r\n+// // Import screens\r\n+// import Contact from \"./app/(tabs)/Contact.js\";\r\n+// import Dashboard from \"./app/(tabs)/Dashboard.js\";\r\n+// import Domiciliation from \"./app/(tabs)/Domiciliation.js\";\r\n+// import Login from \"./app/(tabs)/Login.js\";\r\n+// import Register from \"./app/(tabs)/Register.js\";\r\n+\r\n+// const Stack = createNativeStackNavigator();\r\n+\r\n+// // Get proper session type dynamically from supabase client\r\n+// type SessionType = Awaited<\r\n+//   ReturnType<typeof supabase.auth.getSession>\r\n+// >[\"data\"][\"session\"];\r\n+\r\n+// type AuthChangeEventType = Parameters<\r\n+//   Parameters<typeof supabase.auth.onAuthStateChange>[0]\r\n+// >[0];\r\n+\r\n+// export default function App() {\r\n+//   const [session, setSession] = useState<SessionType | null>(null);\r\n+\r\n+//   useEffect(() => {\r\n+//     const {\r\n+//       data: { subscription },\r\n+//     } = supabase.auth.onAuthStateChange(\r\n+//       (event: AuthChangeEventType, sessionData: SessionType | null) => {\r\n+//         setSession(sessionData);\r\n+//       }\r\n+//     );\r\n+\r\n+//     supabase.auth\r\n+//       .getSession()\r\n+//       .then(({ data }: { data: { session: SessionType | null } }) => {\r\n+//         setSession(data.session);\r\n+//       });\r\n+\r\n+//     return () => {\r\n+//       subscription.unsubscribe();\r\n+//     };\r\n+//   }, []);\r\n+\r\n+//   return (\r\n+//     <StripeProvider\r\n+//       publishableKey={process.env.EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY || \"\"}\r\n+//     >\r\n+//       <CartProvider>\r\n+//         <NavigationContainer>\r\n+//           <Stack.Navigator>\r\n+//             <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n+//             <Stack.Screen name=\"Dashboard\" component={Dashboard} />\r\n+//             <Stack.Screen name=\"Register\" component={Register} />\r\n+//             <Stack.Screen name=\"Login\" component={Login} />\r\n+//             <Stack.Screen name=\"Contact\" component={Contact} /> // Placeholder\r\n+//             for Contact screen\r\n+//             {/* <Stack.Screen name=\"Footer\" component={Footer} /> */}\r\n+//           </Stack.Navigator>\r\n+//         </NavigationContainer>\r\n+//       </CartProvider>\r\n+//     </StripeProvider>\r\n+//   );\r\n+// }\r\n"
                }
            ],
            "date": 1752699058569,
            "name": "Commit-0",
            "content": "// App.tsx (React Native)\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { StripeProvider } from \"@stripe/stripe-react-native\";\r\nimport { Session } from \"@supabase/supabase-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport FloatingCartButton from \"./components/cart/FloatingCartButton\";\r\nimport { supabase } from \"./integrations/supabase/client\";\r\n\r\n// Import screens (anciennement pages)\r\nimport Domiciliation from \"./screens/Domiciliation\";\r\nimport Index from \"./screens/Index\";\r\nimport ServicesAdmin from \"./screens/ServicesAdmin\";\r\n// ... (importe les autres comme tu faisais)\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  const [session, setSession] = useState<Session | null>(null);\r\n\r\n  useEffect(() => {\r\n    const {\r\n      data: { subscription },\r\n    } = supabase.auth.onAuthStateChange((_event, session) =>\r\n      setSession(session)\r\n    );\r\n\r\n    supabase.auth.getSession().then(({ data: { session } }) => {\r\n      setSession(session);\r\n    });\r\n\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <StripeProvider\r\n      publishableKey={process.env.EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY}\r\n    >\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          <Stack.Screen name=\"Home\" component={Index} />\r\n          <Stack.Screen name=\"Domiciliation\" component={Domiciliation} />\r\n          <Stack.Screen name=\"ServicesAdmin\" component={ServicesAdmin} />\r\n          {/* ➤ Ajoute ici tous les autres écrans, exemple :\r\n          <Stack.Screen name=\"Checkout\" component={Checkout} />\r\n          <Stack.Screen name=\"Contact\" component={Contact} />\r\n          */}\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n      {session && <FloatingCartButton />}\r\n    </StripeProvider>\r\n  );\r\n}\r\n"
        }
    ]
}