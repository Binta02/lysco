{
    "sourceFile": "app/(app)/Login.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1754416335412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754419197486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,9 +120,9 @@\n \r\n     try {\r\n       setIsLoading(true);\r\n       const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n-        redirectTo: `${process.env.EXPO_PUBLIC_APP_URL}/reset-password`,\r\n+        redirectTo: `${process.env.EXPO_PUBLIC_APP_URL}/ResetPassword`,\r\n       });\r\n \r\n       if (error) {\r\n         Alert.alert(\"Erreur\", error.message);\r\n"
                },
                {
                    "date": 1754419372045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,9 +120,9 @@\n \r\n     try {\r\n       setIsLoading(true);\r\n       const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n-        redirectTo: `${process.env.EXPO_PUBLIC_APP_URL}/ResetPassword`,\r\n+        redirectTo: `lysco://(app)/ResetPassword`,\r\n       });\r\n \r\n       if (error) {\r\n         Alert.alert(\"Erreur\", error.message);\r\n"
                },
                {
                    "date": 1754420336701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,9 +120,9 @@\n \r\n     try {\r\n       setIsLoading(true);\r\n       const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n-        redirectTo: `lysco://(app)/ResetPassword`,\r\n+        redirectTo: `lysco://ResetPassword`,\r\n       });\r\n \r\n       if (error) {\r\n         Alert.alert(\"Erreur\", error.message);\r\n"
                },
                {
                    "date": 1754899589759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,40 +108,74 @@\n       setIsLoading(false);\r\n     }\r\n   };\r\n \r\n+  // const handleResetPassword = async () => {\r\n+  //   if (!email) {\r\n+  //     Alert.alert(\r\n+  //       \"Email requis\",\r\n+  //       \"Veuillez entrer votre email pour réinitialiser votre mot de passe.\"\r\n+  //     );\r\n+  //     return;\r\n+  //   }\r\n+\r\n+  //   try {\r\n+  //     setIsLoading(true);\r\n+  //     const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n+  //       redirectTo: `lysco://ResetPassword`,\r\n+  //     });\r\n+\r\n+  //     if (error) {\r\n+  //       Alert.alert(\"Erreur\", error.message);\r\n+  //       return;\r\n+  //     }\r\n+\r\n+  //     Alert.alert(\r\n+  //       \"Email envoyé\",\r\n+  //       \"Veuillez vérifier votre boîte mail pour réinitialiser votre mot de passe.\"\r\n+  //     );\r\n+  //   } catch (err) {\r\n+  //     console.error(\"Reset password error:\", err);\r\n+  //     Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue.\");\r\n+  //   } finally {\r\n+  //     setIsLoading(false);\r\n+  //   }\r\n+  // };\r\n+\r\n   const handleResetPassword = async () => {\r\n-    if (!email) {\r\n-      Alert.alert(\r\n-        \"Email requis\",\r\n-        \"Veuillez entrer votre email pour réinitialiser votre mot de passe.\"\r\n-      );\r\n-      return;\r\n-    }\r\n+  if (!email) {\r\n+    Alert.alert(\r\n+      \"Email requis\",\r\n+      \"Veuillez entrer votre email pour réinitialiser votre mot de passe.\"\r\n+    );\r\n+    return;\r\n+  }\r\n \r\n-    try {\r\n-      setIsLoading(true);\r\n-      const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n-        redirectTo: `lysco://ResetPassword`,\r\n-      });\r\n+  try {\r\n+    setIsLoading(true);\r\n+    const redirectUrl = `lysco://ResetPassword?email=${encodeURIComponent(email)}`;\r\n \r\n-      if (error) {\r\n-        Alert.alert(\"Erreur\", error.message);\r\n-        return;\r\n-      }\r\n+    const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n+      redirectTo: redirectUrl,\r\n+    });\r\n \r\n-      Alert.alert(\r\n-        \"Email envoyé\",\r\n-        \"Veuillez vérifier votre boîte mail pour réinitialiser votre mot de passe.\"\r\n-      );\r\n-    } catch (err) {\r\n-      console.error(\"Reset password error:\", err);\r\n-      Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue.\");\r\n-    } finally {\r\n-      setIsLoading(false);\r\n+    if (error) {\r\n+      Alert.alert(\"Erreur\", error.message);\r\n+      return;\r\n     }\r\n-  };\r\n \r\n+    Alert.alert(\r\n+      \"Email envoyé\",\r\n+      \"Veuillez vérifier votre boîte mail pour réinitialiser votre mot de passe.\"\r\n+    );\r\n+  } catch (err) {\r\n+    console.error(\"Reset password error:\", err);\r\n+    Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue.\");\r\n+  } finally {\r\n+    setIsLoading(false);\r\n+  }\r\n+};\r\n+\r\n   return (\r\n     <View style={{ flex: 1, backgroundColor: \"#f9fafb\" }}>\r\n       <ScrollView\r\n         style={styles.container}\r\n"
                },
                {
                    "date": 1754899989473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n     }\r\n \r\n     try {\r\n       setIsLoading(true);\r\n-      const redirectUrl = `lysco://ResetPassword?email=${encodeURIComponent(\r\n+      const redirectUrl = `lysco-dev://ResetPassword?email=${encodeURIComponent(\r\n         email\r\n       )}`;\r\n \r\n       const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n"
                },
                {
                    "date": 1754900060912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n     }\r\n \r\n     try {\r\n       setIsLoading(true);\r\n-      const redirectUrl = `lysco-dev://ResetPassword?email=${encodeURIComponent(\r\n+      const redirectUrl = `lysco://ResetPassword?email=${encodeURIComponent(\r\n         email\r\n       )}`;\r\n \r\n       const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n"
                }
            ],
            "date": 1754416335410,
            "name": "Commit-0",
            "content": "import { Feather } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport type { Session } from \"@supabase/supabase-js\";\r\nimport { useLocalSearchParams, useRouter } from \"expo-router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  ScrollView,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport Footer from \"../../src/components/Footer\";\r\nimport { supabase } from \"../../src/integrations/supabase/client\";\r\nimport type { RootStackParamList } from \"../../src/navigation/types\";\r\n\r\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n\r\nconst Login = () => {\r\n  const navigation = useNavigation<NavigationProp>();\r\n  const { redirect } = useLocalSearchParams();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [accountDisabledMessage, setAccountDisabledMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [session, setSession] = useState<Session | null>(null);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const router = useRouter();\r\n\r\n  // const redirectUrl = route.params?.redirect;\r\n  const redirectUrl = redirect;\r\n\r\n  useEffect(() => {\r\n    const checkSession = async () => {\r\n      const {\r\n        data: { session },\r\n      } = await supabase.auth.getSession();\r\n      if (session) {\r\n        navigation.navigate(\"Dashboard\");\r\n      }\r\n    };\r\n    checkSession();\r\n  }, [navigation, redirectUrl]);\r\n\r\n  const handleLogin = async () => {\r\n    if (!email || !password) {\r\n      Alert.alert(\"Erreur\", \"Veuillez remplir tous les champs.\");\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    setAccountDisabledMessage(\"\");\r\n\r\n    try {\r\n      const { data: signInData, error: signInError } =\r\n        await supabase.auth.signInWithPassword({\r\n          email,\r\n          password,\r\n        });\r\n\r\n      if (signInError) {\r\n        Alert.alert(\"Erreur de connexion\", signInError.message);\r\n        return;\r\n      }\r\n\r\n      const user = signInData?.user;\r\n      if (!user) {\r\n        Alert.alert(\"Erreur\", \"Utilisateur introuvable après connexion.\");\r\n        return;\r\n      }\r\n      if (!user.email_confirmed_at) {\r\n        Alert.alert(\r\n          \"Email non vérifié\",\r\n          \"Veuillez vérifier votre adresse e-mail avant de vous connecter. Un lien vous a été envoyé par email.\"\r\n        );\r\n        await supabase.auth.signOut(); // Déconnecte l'utilisateur\r\n        return;\r\n      }\r\n\r\n      const { data: profileData, error: profileError } = await supabase\r\n        .from(\"profiles\")\r\n        .select(\"deleted_at\")\r\n        .eq(\"id\", user.id)\r\n        .single();\r\n\r\n      if (profileError) {\r\n        Alert.alert(\"Erreur\", \"Impossible de vérifier l'état du compte.\");\r\n        return;\r\n      }\r\n\r\n      if (profileData?.deleted_at) {\r\n        setAccountDisabledMessage(\r\n          \"Votre compte a été désactivé. Contactez le support ou utilisez le lien de réactivation.\"\r\n        );\r\n        await supabase.auth.signOut();\r\n        return;\r\n      }\r\n\r\n      Alert.alert(\"Connexion réussie\", \"Bienvenue sur Lys&Co !\");\r\n      navigation.navigate(\"Dashboard\");\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    if (!email) {\r\n      Alert.alert(\r\n        \"Email requis\",\r\n        \"Veuillez entrer votre email pour réinitialiser votre mot de passe.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n        redirectTo: `${process.env.EXPO_PUBLIC_APP_URL}/reset-password`,\r\n      });\r\n\r\n      if (error) {\r\n        Alert.alert(\"Erreur\", error.message);\r\n        return;\r\n      }\r\n\r\n      Alert.alert(\r\n        \"Email envoyé\",\r\n        \"Veuillez vérifier votre boîte mail pour réinitialiser votre mot de passe.\"\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Reset password error:\", err);\r\n      Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: \"#f9fafb\" }}>\r\n      <ScrollView\r\n        style={styles.container}\r\n        contentContainerStyle={{ flexGrow: 1, justifyContent: \"space-between\" }}\r\n      >\r\n        <View\r\n          style={{\r\n            backgroundColor: \"#fff\",\r\n            padding: 20,\r\n            borderRadius: 16,\r\n            width: \"100%\",\r\n            maxWidth: 400,\r\n            alignSelf: \"center\",\r\n            shadowColor: \"#000\",\r\n            shadowOffset: { width: 0, height: 2 },\r\n            shadowOpacity: 0.1,\r\n            shadowRadius: 4,\r\n            elevation: 5,\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: 24,\r\n              fontWeight: \"bold\",\r\n              textAlign: \"center\",\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            Connexion\r\n          </Text>\r\n          <Text\r\n            style={{ textAlign: \"center\", marginBottom: 20, color: \"#6b7280\" }}\r\n          >\r\n            Entrez vos identifiants pour accéder à votre compte\r\n          </Text>\r\n\r\n          {/* Email */}\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderWidth: 1,\r\n              borderColor: \"#d1d5db\",\r\n              borderRadius: 8,\r\n              backgroundColor: \"#fff\",\r\n              marginBottom: 10,\r\n              paddingHorizontal: 10,\r\n            }}\r\n          >\r\n            <Feather name=\"mail\" size={20} color=\"#9ca3af\" />\r\n            <TextInput\r\n              style={{\r\n                flex: 1,\r\n                paddingVertical: 10,\r\n                paddingHorizontal: 10,\r\n              }}\r\n              placeholder=\"Email\"\r\n              keyboardType=\"email-address\"\r\n              value={email}\r\n              onChangeText={setEmail}\r\n            />\r\n          </View>\r\n\r\n          {/* Mot de passe */}\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderWidth: 1,\r\n              borderColor: \"#d1d5db\",\r\n              borderRadius: 8,\r\n              backgroundColor: \"#fff\",\r\n              marginBottom: 10,\r\n              paddingHorizontal: 10,\r\n            }}\r\n          >\r\n            <Feather name=\"lock\" size={20} color=\"#9ca3af\" />\r\n            <TextInput\r\n              style={{\r\n                flex: 1,\r\n                paddingVertical: 10,\r\n                paddingHorizontal: 10,\r\n              }}\r\n              placeholder=\"Mot de passe\"\r\n              secureTextEntry={!showPassword}\r\n              value={password}\r\n              onChangeText={setPassword}\r\n            />\r\n            <TouchableOpacity onPress={() => setShowPassword(!showPassword)}>\r\n              <Feather\r\n                name={showPassword ? \"eye-off\" : \"eye\"}\r\n                size={20}\r\n                color=\"#9ca3af\"\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          {/* Message compte désactivé */}\r\n          {accountDisabledMessage ? (\r\n            <Text\r\n              style={{\r\n                color: \"red\",\r\n                fontSize: 12,\r\n                marginBottom: 10,\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              {accountDisabledMessage}\r\n            </Text>\r\n          ) : null}\r\n\r\n          {/* Bouton login */}\r\n          <TouchableOpacity\r\n            onPress={handleLogin}\r\n            style={{\r\n              backgroundColor: \"#5cb9bc\",\r\n              paddingVertical: 12,\r\n              borderRadius: 8,\r\n              alignItems: \"center\",\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            <Text style={{ color: \"#fff\", fontWeight: \"bold\" }}>\r\n              {isLoading ? \"Connexion en cours...\" : \"Se connecter\"}\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Mot de passe oublié */}\r\n          <TouchableOpacity\r\n            onPress={handleResetPassword}\r\n            style={{ marginBottom: 20 }}\r\n          >\r\n            <Text\r\n              style={{ color: \"#5cb9bc\", textAlign: \"center\", fontSize: 12 }}\r\n            >\r\n              Mot de passe oublié ?\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Pas encore de compte */}\r\n          <View style={{ alignItems: \"center\" }}>\r\n            <Text>\r\n              Pas encore de compte ?{\" \"}\r\n              <Text\r\n                style={{ color: \"#ec407a\", textDecorationLine: \"underline\" }}\r\n                onPress={() => navigation.navigate(\"Register\")}\r\n              >\r\n                Créer un compte\r\n              </Text>\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <Footer />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#f9fafb\",\r\n  },\r\n};\r\nexport default Login;\r\n"
        }
    ]
}