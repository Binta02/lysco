{
    "sourceFile": "app/(tabs)/Login.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1752757543642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752758034670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-import type { RouteProp } from \"@react-navigation/native\";\r\n-import { useNavigation, useRoute } from \"@react-navigation/native\";\r\n+import { useNavigation } from \"@react-navigation/native\";\r\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\n+import { useLocalSearchParams } from \"expo-router\";\r\n import React, { useEffect, useState } from \"react\";\r\n import {\r\n   Alert,\r\n   ScrollView,\r\n@@ -15,20 +15,23 @@\n import { supabase } from \"../../src/integrations/supabase/client\";\r\n import type { RootStackParamList } from \"../../src/navigation/types\";\r\n \r\n type NavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n-type LoginRouteProp = RouteProp<RootStackParamList, \"Login\">;\r\n+// type LoginRouteProp = RouteProp<RootStackParamList, \"Login\">;\r\n \r\n const Login = () => {\r\n   const navigation = useNavigation<NavigationProp>();\r\n-  const route = useRoute<LoginRouteProp>();\r\n+  // const route = useRoute<LoginRouteProp>();\r\n+  const { redirect } = useLocalSearchParams();\r\n+\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [showPassword, setShowPassword] = useState(false);\r\n   const [accountDisabledMessage, setAccountDisabledMessage] = useState(\"\");\r\n   const [isLoading, setIsLoading] = useState(false);\r\n \r\n-  const redirectUrl = route.params?.redirect;\r\n+  // const redirectUrl = route.params?.redirect;\r\n+  const redirectUrl = redirect;\r\n \r\n   useEffect(() => {\r\n     const checkSession = async () => {\r\n       const {\r\n"
                },
                {
                    "date": 1752758051773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,9 @@\n   };\r\n \r\n   return (\r\n     <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n-      <Navbar />\r\n+      <Navbar session={session} />\r\n \r\n       <ScrollView\r\n         contentContainerStyle={{\r\n           flexGrow: 1,\r\n"
                },
                {
                    "date": 1752758153978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import { useNavigation } from \"@react-navigation/native\";\r\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\n+import type { Session } from \"@supabase/supabase-js\";\r\n import { useLocalSearchParams } from \"expo-router\";\r\n import React, { useEffect, useState } from \"react\";\r\n import {\r\n   Alert,\r\n@@ -27,8 +28,9 @@\n   const [password, setPassword] = useState(\"\");\r\n   const [showPassword, setShowPassword] = useState(false);\r\n   const [accountDisabledMessage, setAccountDisabledMessage] = useState(\"\");\r\n   const [isLoading, setIsLoading] = useState(false);\r\n+  const [session, setSession] = useState<Session | null>(null);\r\n \r\n   // const redirectUrl = route.params?.redirect;\r\n   const redirectUrl = redirect;\r\n \r\n"
                },
                {
                    "date": 1752823505684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,9 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n+    <View style={{ flex: 1, backgroundColor: \"#f9fafb\" }}>\r\n       <Navbar session={session} />\r\n \r\n       <ScrollView\r\n         contentContainerStyle={{\r\n@@ -143,9 +143,23 @@\n           justifyContent: \"center\",\r\n           padding: 20,\r\n         }}\r\n       >\r\n-        <View style={{ backgroundColor: \"#fff\", padding: 20, borderRadius: 8 }}>\r\n+        <View\r\n+          style={{\r\n+            backgroundColor: \"#fff\",\r\n+            padding: 20,\r\n+            borderRadius: 16, // arrondi plus doux\r\n+            width: \"100%\",\r\n+            maxWidth: 400,\r\n+            alignSelf: \"center\",\r\n+            shadowColor: \"#000\",\r\n+            shadowOffset: { width: 0, height: 2 },\r\n+            shadowOpacity: 0.1,\r\n+            shadowRadius: 4,\r\n+            elevation: 5, // pour Android\r\n+          }}\r\n+        >\r\n           <Text\r\n             style={{\r\n               fontSize: 24,\r\n               fontWeight: \"bold\",\r\n@@ -154,52 +168,87 @@\n             }}\r\n           >\r\n             Connexion\r\n           </Text>\r\n-          <Text style={{ textAlign: \"center\", marginBottom: 20 }}>\r\n+          <Text\r\n+            style={{ textAlign: \"center\", marginBottom: 20, color: \"#6b7280\" }}\r\n+          >\r\n             Entrez vos identifiants pour accéder à votre compte\r\n           </Text>\r\n \r\n           {/* Email */}\r\n-          <TextInput\r\n-            style={{\r\n-              borderWidth: 1,\r\n-              padding: 10,\r\n-              borderRadius: 6,\r\n-              marginBottom: 10,\r\n-            }}\r\n-            placeholder=\"Email\"\r\n-            keyboardType=\"email-address\"\r\n-            value={email}\r\n-            onChangeText={setEmail}\r\n-          />\r\n+          <View style={{ position: \"relative\", marginBottom: 10 }}>\r\n+            {/* Ici tu peux utiliser une icône Mail à gauche */}\r\n+            <TextInput\r\n+              style={{\r\n+                borderWidth: 1,\r\n+                borderColor: \"#d1d5db\",\r\n+                paddingLeft: 40,\r\n+                paddingVertical: 10,\r\n+                borderRadius: 8,\r\n+                backgroundColor: \"#fff\",\r\n+              }}\r\n+              placeholder=\"Email\"\r\n+              keyboardType=\"email-address\"\r\n+              value={email}\r\n+              onChangeText={setEmail}\r\n+            />\r\n+            <Mail\r\n+              style={{\r\n+                position: \"absolute\",\r\n+                left: 10,\r\n+                top: \"50%\",\r\n+                transform: [{ translateY: -10 }],\r\n+                color: \"#9ca3af\",\r\n+              }}\r\n+              size={20}\r\n+            />\r\n+          </View>\r\n \r\n           {/* Mot de passe */}\r\n-          <TextInput\r\n-            style={{\r\n-              borderWidth: 1,\r\n-              padding: 10,\r\n-              borderRadius: 6,\r\n-              marginBottom: 10,\r\n-            }}\r\n-            placeholder=\"Mot de passe\"\r\n-            secureTextEntry={!showPassword}\r\n-            value={password}\r\n-            onChangeText={setPassword}\r\n-          />\r\n+          <View style={{ position: \"relative\", marginBottom: 10 }}>\r\n+            <TextInput\r\n+              style={{\r\n+                borderWidth: 1,\r\n+                borderColor: \"#d1d5db\",\r\n+                paddingLeft: 40,\r\n+                paddingRight: 40,\r\n+                paddingVertical: 10,\r\n+                borderRadius: 8,\r\n+                backgroundColor: \"#fff\",\r\n+              }}\r\n+              placeholder=\"Mot de passe\"\r\n+              secureTextEntry={!showPassword}\r\n+              value={password}\r\n+              onChangeText={setPassword}\r\n+            />\r\n+            <Lock\r\n+              style={{\r\n+                position: \"absolute\",\r\n+                left: 10,\r\n+                top: \"50%\",\r\n+                transform: [{ translateY: -10 }],\r\n+                color: \"#9ca3af\",\r\n+              }}\r\n+              size={20}\r\n+            />\r\n+            <TouchableOpacity\r\n+              onPress={() => setShowPassword(!showPassword)}\r\n+              style={{\r\n+                position: \"absolute\",\r\n+                right: 10,\r\n+                top: \"50%\",\r\n+                transform: [{ translateY: -10 }],\r\n+              }}\r\n+            >\r\n+              {showPassword ? (\r\n+                <EyeOff size={20} color=\"#9ca3af\" />\r\n+              ) : (\r\n+                <Eye size={20} color=\"#9ca3af\" />\r\n+              )}\r\n+            </TouchableOpacity>\r\n+          </View>\r\n \r\n-          {/* Afficher/Masquer mot de passe */}\r\n-          <TouchableOpacity\r\n-            onPress={() => setShowPassword(!showPassword)}\r\n-            style={{ alignSelf: \"flex-end\", marginBottom: 10 }}\r\n-          >\r\n-            <Text style={{ color: \"#007aff\" }}>\r\n-              {showPassword\r\n-                ? \"Masquer le mot de passe\"\r\n-                : \"Afficher le mot de passe\"}\r\n-            </Text>\r\n-          </TouchableOpacity>\r\n-\r\n           {/* Message compte désactivé */}\r\n           {accountDisabledMessage ? (\r\n             <Text\r\n               style={{\r\n@@ -216,11 +265,11 @@\n           {/* Bouton login */}\r\n           <TouchableOpacity\r\n             onPress={handleLogin}\r\n             style={{\r\n-              backgroundColor: \"#00bcd4\",\r\n-              padding: 12,\r\n-              borderRadius: 6,\r\n+              backgroundColor: \"#00bcd4\", // lysco-turquoise\r\n+              paddingVertical: 12,\r\n+              borderRadius: 8,\r\n               alignItems: \"center\",\r\n               marginBottom: 10,\r\n             }}\r\n           >\r\n@@ -233,9 +282,11 @@\n           <TouchableOpacity\r\n             onPress={handleResetPassword}\r\n             style={{ marginBottom: 20 }}\r\n           >\r\n-            <Text style={{ color: \"#00bcd4\", textAlign: \"center\" }}>\r\n+            <Text\r\n+              style={{ color: \"#00bcd4\", textAlign: \"center\", fontSize: 12 }}\r\n+            >\r\n               Mot de passe oublié ?\r\n             </Text>\r\n           </TouchableOpacity>\r\n \r\n@@ -243,9 +294,9 @@\n           <View style={{ alignItems: \"center\" }}>\r\n             <Text>\r\n               Pas encore de compte ?{\" \"}\r\n               <Text\r\n-                style={{ color: \"#ec407a\", textDecorationLine: \"underline\" }}\r\n+                style={{ color: \"#ec407a\", textDecorationLine: \"underline\" }} // lysco-pink\r\n                 onPress={() => navigation.navigate(\"Register\")}\r\n               >\r\n                 Créer un compte\r\n               </Text>\r\n"
                },
                {
                    "date": 1752824035318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { useNavigation } from \"@react-navigation/native\";\r\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\n import type { Session } from \"@supabase/supabase-js\";\r\n import { useLocalSearchParams } from \"expo-router\";\r\n+import { Eye, EyeOff, Lock, Mail } from \"lucide-react-native\";\r\n import React, { useEffect, useState } from \"react\";\r\n import {\r\n   Alert,\r\n   ScrollView,\r\n"
                },
                {
                    "date": 1752824149647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,11 +198,11 @@\n                 position: \"absolute\",\r\n                 left: 10,\r\n                 top: \"50%\",\r\n                 transform: [{ translateY: -10 }],\r\n-                color: \"#9ca3af\",\r\n               }}\r\n               size={20}\r\n+              color=\"#9ca3af\"\r\n             />\r\n           </View>\r\n \r\n           {/* Mot de passe */}\r\n"
                },
                {
                    "date": 1752824204191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,11 +227,11 @@\n                 position: \"absolute\",\r\n                 left: 10,\r\n                 top: \"50%\",\r\n                 transform: [{ translateY: -10 }],\r\n-                color: \"#9ca3af\",\r\n               }}\r\n               size={20}\r\n+              color=\"#9ca3af\"\r\n             />\r\n             <TouchableOpacity\r\n               onPress={() => setShowPassword(!showPassword)}\r\n               style={{\r\n"
                },
                {
                    "date": 1752824410560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n+import { Feather } from \"@expo/vector-icons\";\r\n import { useNavigation } from \"@react-navigation/native\";\r\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\n import type { Session } from \"@supabase/supabase-js\";\r\n import { useLocalSearchParams } from \"expo-router\";\r\n-import { Eye, EyeOff, Lock, Mail } from \"lucide-react-native\";\r\n import React, { useEffect, useState } from \"react\";\r\n import {\r\n   Alert,\r\n   ScrollView,\r\n@@ -148,17 +148,17 @@\n         <View\r\n           style={{\r\n             backgroundColor: \"#fff\",\r\n             padding: 20,\r\n-            borderRadius: 16, // arrondi plus doux\r\n+            borderRadius: 16,\r\n             width: \"100%\",\r\n             maxWidth: 400,\r\n             alignSelf: \"center\",\r\n             shadowColor: \"#000\",\r\n             shadowOffset: { width: 0, height: 2 },\r\n             shadowOpacity: 0.1,\r\n             shadowRadius: 4,\r\n-            elevation: 5, // pour Android\r\n+            elevation: 5,\r\n           }}\r\n         >\r\n           <Text\r\n             style={{\r\n@@ -177,9 +177,8 @@\n           </Text>\r\n \r\n           {/* Email */}\r\n           <View style={{ position: \"relative\", marginBottom: 10 }}>\r\n-            {/* Ici tu peux utiliser une icône Mail à gauche */}\r\n             <TextInput\r\n               style={{\r\n                 borderWidth: 1,\r\n                 borderColor: \"#d1d5db\",\r\n@@ -192,17 +191,18 @@\n               keyboardType=\"email-address\"\r\n               value={email}\r\n               onChangeText={setEmail}\r\n             />\r\n-            <Mail\r\n+            <Feather\r\n+              name=\"mail\"\r\n+              size={20}\r\n+              color=\"#9ca3af\"\r\n               style={{\r\n                 position: \"absolute\",\r\n                 left: 10,\r\n                 top: \"50%\",\r\n                 transform: [{ translateY: -10 }],\r\n               }}\r\n-              size={20}\r\n-              color=\"#9ca3af\"\r\n             />\r\n           </View>\r\n \r\n           {/* Mot de passe */}\r\n@@ -221,17 +221,18 @@\n               secureTextEntry={!showPassword}\r\n               value={password}\r\n               onChangeText={setPassword}\r\n             />\r\n-            <Lock\r\n+            <Feather\r\n+              name=\"lock\"\r\n+              size={20}\r\n+              color=\"#9ca3af\"\r\n               style={{\r\n                 position: \"absolute\",\r\n                 left: 10,\r\n                 top: \"50%\",\r\n                 transform: [{ translateY: -10 }],\r\n               }}\r\n-              size={20}\r\n-              color=\"#9ca3af\"\r\n             />\r\n             <TouchableOpacity\r\n               onPress={() => setShowPassword(!showPassword)}\r\n               style={{\r\n@@ -240,13 +241,13 @@\n                 top: \"50%\",\r\n                 transform: [{ translateY: -10 }],\r\n               }}\r\n             >\r\n-              {showPassword ? (\r\n-                <EyeOff size={20} color=\"#9ca3af\" />\r\n-              ) : (\r\n-                <Eye size={20} color=\"#9ca3af\" />\r\n-              )}\r\n+              <Feather\r\n+                name={showPassword ? \"eye-off\" : \"eye\"}\r\n+                size={20}\r\n+                color=\"#9ca3af\"\r\n+              />\r\n             </TouchableOpacity>\r\n           </View>\r\n \r\n           {/* Message compte désactivé */}\r\n@@ -266,9 +267,9 @@\n           {/* Bouton login */}\r\n           <TouchableOpacity\r\n             onPress={handleLogin}\r\n             style={{\r\n-              backgroundColor: \"#00bcd4\", // lysco-turquoise\r\n+              backgroundColor: \"#00bcd4\",\r\n               paddingVertical: 12,\r\n               borderRadius: 8,\r\n               alignItems: \"center\",\r\n               marginBottom: 10,\r\n@@ -295,9 +296,9 @@\n           <View style={{ alignItems: \"center\" }}>\r\n             <Text>\r\n               Pas encore de compte ?{\" \"}\r\n               <Text\r\n-                style={{ color: \"#ec407a\", textDecorationLine: \"underline\" }} // lysco-pink\r\n+                style={{ color: \"#ec407a\", textDecorationLine: \"underline\" }}\r\n                 onPress={() => navigation.navigate(\"Register\")}\r\n               >\r\n                 Créer un compte\r\n               </Text>\r\n"
                },
                {
                    "date": 1752824996186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,34 +176,32 @@\n             Entrez vos identifiants pour accéder à votre compte\r\n           </Text>\r\n \r\n           {/* Email */}\r\n-          <View style={{ position: \"relative\", marginBottom: 10 }}>\r\n+          <View\r\n+            style={{\r\n+              flexDirection: \"row\",\r\n+              alignItems: \"center\",\r\n+              borderWidth: 1,\r\n+              borderColor: \"#d1d5db\",\r\n+              borderRadius: 8,\r\n+              backgroundColor: \"#fff\",\r\n+              marginBottom: 10,\r\n+              paddingHorizontal: 10,\r\n+            }}\r\n+          >\r\n+            <Feather name=\"mail\" size={20} color=\"#9ca3af\" />\r\n             <TextInput\r\n               style={{\r\n-                borderWidth: 1,\r\n-                borderColor: \"#d1d5db\",\r\n-                paddingLeft: 40,\r\n+                flex: 1,\r\n                 paddingVertical: 10,\r\n-                borderRadius: 8,\r\n-                backgroundColor: \"#fff\",\r\n+                paddingHorizontal: 10,\r\n               }}\r\n               placeholder=\"Email\"\r\n               keyboardType=\"email-address\"\r\n               value={email}\r\n               onChangeText={setEmail}\r\n             />\r\n-            <Feather\r\n-              name=\"mail\"\r\n-              size={20}\r\n-              color=\"#9ca3af\"\r\n-              style={{\r\n-                position: \"absolute\",\r\n-                left: 10,\r\n-                top: \"50%\",\r\n-                transform: [{ translateY: -10 }],\r\n-              }}\r\n-            />\r\n           </View>\r\n \r\n           {/* Mot de passe */}\r\n           <View style={{ position: \"relative\", marginBottom: 10 }}>\r\n"
                },
                {
                    "date": 1752825011412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,44 +203,33 @@\n             />\r\n           </View>\r\n \r\n           {/* Mot de passe */}\r\n-          <View style={{ position: \"relative\", marginBottom: 10 }}>\r\n+          <View\r\n+            style={{\r\n+              flexDirection: \"row\",\r\n+              alignItems: \"center\",\r\n+              borderWidth: 1,\r\n+              borderColor: \"#d1d5db\",\r\n+              borderRadius: 8,\r\n+              backgroundColor: \"#fff\",\r\n+              marginBottom: 10,\r\n+              paddingHorizontal: 10,\r\n+            }}\r\n+          >\r\n+            <Feather name=\"lock\" size={20} color=\"#9ca3af\" />\r\n             <TextInput\r\n               style={{\r\n-                borderWidth: 1,\r\n-                borderColor: \"#d1d5db\",\r\n-                paddingLeft: 40,\r\n-                paddingRight: 40,\r\n+                flex: 1,\r\n                 paddingVertical: 10,\r\n-                borderRadius: 8,\r\n-                backgroundColor: \"#fff\",\r\n+                paddingHorizontal: 10,\r\n               }}\r\n               placeholder=\"Mot de passe\"\r\n               secureTextEntry={!showPassword}\r\n               value={password}\r\n               onChangeText={setPassword}\r\n             />\r\n-            <Feather\r\n-              name=\"lock\"\r\n-              size={20}\r\n-              color=\"#9ca3af\"\r\n-              style={{\r\n-                position: \"absolute\",\r\n-                left: 10,\r\n-                top: \"50%\",\r\n-                transform: [{ translateY: -10 }],\r\n-              }}\r\n-            />\r\n-            <TouchableOpacity\r\n-              onPress={() => setShowPassword(!showPassword)}\r\n-              style={{\r\n-                position: \"absolute\",\r\n-                right: 10,\r\n-                top: \"50%\",\r\n-                transform: [{ translateY: -10 }],\r\n-              }}\r\n-            >\r\n+            <TouchableOpacity onPress={() => setShowPassword(!showPassword)}>\r\n               <Feather\r\n                 name={showPassword ? \"eye-off\" : \"eye\"}\r\n                 size={20}\r\n                 color=\"#9ca3af\"\r\n"
                },
                {
                    "date": 1752827085751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n   const [showPassword, setShowPassword] = useState(false);\r\n   const [accountDisabledMessage, setAccountDisabledMessage] = useState(\"\");\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [session, setSession] = useState<Session | null>(null);\r\n+  const [menuOpen, setMenuOpen] = useState(false);\r\n \r\n   // const redirectUrl = route.params?.redirect;\r\n   const redirectUrl = redirect;\r\n \r\n@@ -135,9 +136,9 @@\n   };\r\n \r\n   return (\r\n     <View style={{ flex: 1, backgroundColor: \"#f9fafb\" }}>\r\n-      <Navbar session={session} />\r\n+      <Navbar session={session} onToggleMenu={() => setMenuOpen(!menuOpen)} />\r\n \r\n       <ScrollView\r\n         contentContainerStyle={{\r\n           flexGrow: 1,\r\n"
                },
                {
                    "date": 1752827309748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { Feather } from \"@expo/vector-icons\";\r\n import { useNavigation } from \"@react-navigation/native\";\r\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\n import type { Session } from \"@supabase/supabase-js\";\r\n-import { useLocalSearchParams } from \"expo-router\";\r\n+import { useLocalSearchParams, useRouter } from \"expo-router\";\r\n import React, { useEffect, useState } from \"react\";\r\n import {\r\n   Alert,\r\n   ScrollView,\r\n@@ -31,8 +31,9 @@\n   const [accountDisabledMessage, setAccountDisabledMessage] = useState(\"\");\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [session, setSession] = useState<Session | null>(null);\r\n   const [menuOpen, setMenuOpen] = useState(false);\r\n+  const router = useRouter();\r\n \r\n   // const redirectUrl = route.params?.redirect;\r\n   const redirectUrl = redirect;\r\n \r\n"
                },
                {
                    "date": 1752827343057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,8 @@\n \r\n   return (\r\n     <View style={{ flex: 1, backgroundColor: \"#f9fafb\" }}>\r\n       <Navbar session={session} onToggleMenu={() => setMenuOpen(!menuOpen)} />\r\n-\r\n       <ScrollView\r\n         contentContainerStyle={{\r\n           flexGrow: 1,\r\n           justifyContent: \"center\",\r\n@@ -294,10 +293,131 @@\n             </Text>\r\n           </View>\r\n         </View>\r\n       </ScrollView>\r\n+      <Footer />\r\n+      {/* GLOBAL OVERLAY */}\r\n+      {menuOpen && (\r\n+        <View\r\n+          style={{\r\n+            position: \"absolute\",\r\n+            top: 0,\r\n+            bottom: 0,\r\n+            left: 0,\r\n+            right: 0,\r\n+            backgroundColor: \"#fff\",\r\n+            zIndex: 9999,\r\n+            elevation: 9999,\r\n+          }}\r\n+        >\r\n+          <ScrollView\r\n+            contentContainerStyle={{ paddingTop: 60, paddingHorizontal: 20 }}\r\n+          >\r\n+            <TouchableOpacity\r\n+              style={{\r\n+                position: \"absolute\",\r\n+                top: 20,\r\n+                right: 20,\r\n+                padding: 10,\r\n+              }}\r\n+              onPress={() => setMenuOpen(false)}\r\n+            >\r\n+              <Text style={{ fontSize: 28, color: \"#333\" }}>✕</Text>\r\n+            </TouchableOpacity>\r\n \r\n-      <Footer />\r\n+            {[\r\n+              { label: \"Accueil\", path: \"/(tabs)\" },\r\n+              { label: \"Domiciliation\", path: \"/(tabs)/Domiciliation\" },\r\n+              { label: \"Services Admin\", path: \"/(tabs)/ServicesAdmin\" },\r\n+              { label: \"Communication\", path: \"/(tabs)/Communication\" },\r\n+              { label: \"Contact\", path: \"/(tabs)/Contact\" },\r\n+            ].map((item, idx) => (\r\n+              <TouchableOpacity\r\n+                key={idx}\r\n+                style={{\r\n+                  paddingVertical: 12,\r\n+                  borderBottomWidth: 1,\r\n+                  borderColor: \"#eee\",\r\n+                }}\r\n+                onPress={() => {\r\n+                  router.push(item.path as any);\r\n+                  setMenuOpen(false);\r\n+                }}\r\n+              >\r\n+                <Text style={{ fontSize: 18, color: \"#333\" }}>\r\n+                  {item.label}\r\n+                </Text>\r\n+              </TouchableOpacity>\r\n+            ))}\r\n+\r\n+            <View style={{ marginTop: 30 }}>\r\n+              {session ? (\r\n+                <>\r\n+                  <TouchableOpacity\r\n+                    style={{\r\n+                      paddingVertical: 12,\r\n+                      alignItems: \"center\",\r\n+                      borderRadius: 6,\r\n+                      backgroundColor: \"#06b6d4\",\r\n+                      marginBottom: 12,\r\n+                    }}\r\n+                    onPress={() => {\r\n+                      router.push(\"/(tabs)/Dashboard\" as any);\r\n+                      setMenuOpen(false);\r\n+                    }}\r\n+                  >\r\n+                    <Text style={{ color: \"#fff\", fontWeight: \"bold\" }}>\r\n+                      Dashboard\r\n+                    </Text>\r\n+                  </TouchableOpacity>\r\n+\r\n+                  <TouchableOpacity\r\n+                    style={{\r\n+                      paddingVertical: 12,\r\n+                      alignItems: \"center\",\r\n+                      borderRadius: 6,\r\n+                      backgroundColor: \"#06b6d4\",\r\n+                    }}\r\n+                    onPress={async () => {\r\n+                      const { error } = await supabase.auth.signOut();\r\n+                      if (error) {\r\n+                        Alert.alert(\"Erreur\", error.message);\r\n+                        return;\r\n+                      }\r\n+                      Alert.alert(\"Déconnexion réussie\");\r\n+                      router.push(\"/(tabs)/Login\" as any);\r\n+                      setMenuOpen(false);\r\n+                    }}\r\n+                  >\r\n+                    <Text style={{ color: \"#fff\", fontWeight: \"bold\" }}>\r\n+                      Déconnexion\r\n+                    </Text>\r\n+                  </TouchableOpacity>\r\n+                </>\r\n+              ) : (\r\n+                <TouchableOpacity\r\n+                  style={{\r\n+                    paddingVertical: 12,\r\n+                    alignItems: \"center\",\r\n+                    borderRadius: 6,\r\n+                    backgroundColor: \"#fff\",\r\n+                    borderWidth: 1,\r\n+                    borderColor: \"#06b6d4\",\r\n+                  }}\r\n+                  onPress={() => {\r\n+                    router.push(\"/(tabs)/Login\" as any);\r\n+                    setMenuOpen(false);\r\n+                  }}\r\n+                >\r\n+                  <Text style={{ color: \"#06b6d4\", fontWeight: \"bold\" }}>\r\n+                    Connexion\r\n+                  </Text>\r\n+                </TouchableOpacity>\r\n+              )}\r\n+            </View>\r\n+          </ScrollView>\r\n+        </View>\r\n+      )}\r\n     </View>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1752868568261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -413,8 +413,9 @@\n                   </Text>\r\n                 </TouchableOpacity>\r\n               )}\r\n             </View>\r\n+            <Footer />\r\n           </ScrollView>\r\n         </View>\r\n       )}\r\n     </View>\r\n"
                },
                {
                    "date": 1752868633879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,13 +139,10 @@\n   return (\r\n     <View style={{ flex: 1, backgroundColor: \"#f9fafb\" }}>\r\n       <Navbar session={session} onToggleMenu={() => setMenuOpen(!menuOpen)} />\r\n       <ScrollView\r\n-        contentContainerStyle={{\r\n-          flexGrow: 1,\r\n-          justifyContent: \"center\",\r\n-          padding: 20,\r\n-        }}\r\n+        style={styles.container}\r\n+        contentContainerStyle={{ flexGrow: 1, justifyContent: \"space-between\" }}\r\n       >\r\n         <View\r\n           style={{\r\n             backgroundColor: \"#fff\",\r\n"
                },
                {
                    "date": 1752868648433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -418,5 +418,12 @@\n     </View>\r\n   );\r\n };\r\n \r\n+const styles = {\r\n+  container: {\r\n+    flex: 1,\r\n+    padding: 20,\r\n+    backgroundColor: \"#f9fafb\",\r\n+  },\r\n+};\r\n export default Login;\r\n"
                },
                {
                    "date": 1752869341898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,10 +289,10 @@\n               </Text>\r\n             </Text>\r\n           </View>\r\n         </View>\r\n+        <Footer />\r\n       </ScrollView>\r\n-      <Footer />\r\n       {/* GLOBAL OVERLAY */}\r\n       {menuOpen && (\r\n         <View\r\n           style={{\r\n"
                },
                {
                    "date": 1753018041476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -421,9 +421,8 @@\n \r\n const styles = {\r\n   container: {\r\n     flex: 1,\r\n-    padding: 20,\r\n     backgroundColor: \"#f9fafb\",\r\n   },\r\n };\r\n export default Login;\r\n"
                },
                {
                    "date": 1753018618354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -291,131 +291,10 @@\n           </View>\r\n         </View>\r\n         <Footer />\r\n       </ScrollView>\r\n-      {/* GLOBAL OVERLAY */}\r\n-      {menuOpen && (\r\n-        <View\r\n-          style={{\r\n-            position: \"absolute\",\r\n-            top: 0,\r\n-            bottom: 0,\r\n-            left: 0,\r\n-            right: 0,\r\n-            backgroundColor: \"#fff\",\r\n-            zIndex: 9999,\r\n-            elevation: 9999,\r\n-          }}\r\n-        >\r\n-          <ScrollView\r\n-            contentContainerStyle={{ paddingTop: 60, paddingHorizontal: 20 }}\r\n-          >\r\n-            <TouchableOpacity\r\n-              style={{\r\n-                position: \"absolute\",\r\n-                top: 20,\r\n-                right: 20,\r\n-                padding: 10,\r\n-              }}\r\n-              onPress={() => setMenuOpen(false)}\r\n-            >\r\n-              <Text style={{ fontSize: 28, color: \"#333\" }}>✕</Text>\r\n-            </TouchableOpacity>\r\n-\r\n-            {[\r\n-              { label: \"Accueil\", path: \"/(tabs)\" },\r\n-              { label: \"Domiciliation\", path: \"/(tabs)/Domiciliation\" },\r\n-              { label: \"Services Admin\", path: \"/(tabs)/ServicesAdmin\" },\r\n-              { label: \"Communication\", path: \"/(tabs)/Communication\" },\r\n-              { label: \"Contact\", path: \"/(tabs)/Contact\" },\r\n-            ].map((item, idx) => (\r\n-              <TouchableOpacity\r\n-                key={idx}\r\n-                style={{\r\n-                  paddingVertical: 12,\r\n-                  borderBottomWidth: 1,\r\n-                  borderColor: \"#eee\",\r\n-                }}\r\n-                onPress={() => {\r\n-                  router.push(item.path as any);\r\n-                  setMenuOpen(false);\r\n-                }}\r\n-              >\r\n-                <Text style={{ fontSize: 18, color: \"#333\" }}>\r\n-                  {item.label}\r\n-                </Text>\r\n-              </TouchableOpacity>\r\n-            ))}\r\n-\r\n-            <View style={{ marginTop: 30 }}>\r\n-              {session ? (\r\n-                <>\r\n-                  <TouchableOpacity\r\n-                    style={{\r\n-                      paddingVertical: 12,\r\n-                      alignItems: \"center\",\r\n-                      borderRadius: 6,\r\n-                      backgroundColor: \"#06b6d4\",\r\n-                      marginBottom: 12,\r\n-                    }}\r\n-                    onPress={() => {\r\n-                      router.push(\"/(tabs)/Dashboard\" as any);\r\n-                      setMenuOpen(false);\r\n-                    }}\r\n-                  >\r\n-                    <Text style={{ color: \"#fff\", fontWeight: \"bold\" }}>\r\n-                      Dashboard\r\n-                    </Text>\r\n-                  </TouchableOpacity>\r\n-\r\n-                  <TouchableOpacity\r\n-                    style={{\r\n-                      paddingVertical: 12,\r\n-                      alignItems: \"center\",\r\n-                      borderRadius: 6,\r\n-                      backgroundColor: \"#06b6d4\",\r\n-                    }}\r\n-                    onPress={async () => {\r\n-                      const { error } = await supabase.auth.signOut();\r\n-                      if (error) {\r\n-                        Alert.alert(\"Erreur\", error.message);\r\n-                        return;\r\n-                      }\r\n-                      Alert.alert(\"Déconnexion réussie\");\r\n-                      router.push(\"/(tabs)/Login\" as any);\r\n-                      setMenuOpen(false);\r\n-                    }}\r\n-                  >\r\n-                    <Text style={{ color: \"#fff\", fontWeight: \"bold\" }}>\r\n-                      Déconnexion\r\n-                    </Text>\r\n-                  </TouchableOpacity>\r\n-                </>\r\n-              ) : (\r\n-                <TouchableOpacity\r\n-                  style={{\r\n-                    paddingVertical: 12,\r\n-                    alignItems: \"center\",\r\n-                    borderRadius: 6,\r\n-                    backgroundColor: \"#fff\",\r\n-                    borderWidth: 1,\r\n-                    borderColor: \"#06b6d4\",\r\n-                  }}\r\n-                  onPress={() => {\r\n-                    router.push(\"/(tabs)/Login\" as any);\r\n-                    setMenuOpen(false);\r\n-                  }}\r\n-                >\r\n-                  <Text style={{ color: \"#06b6d4\", fontWeight: \"bold\" }}>\r\n-                    Connexion\r\n-                  </Text>\r\n-                </TouchableOpacity>\r\n-              )}\r\n-            </View>\r\n-            <Footer />\r\n-          </ScrollView>\r\n-        </View>\r\n-      )}\r\n+     \r\n+     \r\n     </View>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1753019732689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n   TouchableOpacity,\r\n   View,\r\n } from \"react-native\";\r\n import Footer from \"../../src/components/Footer\";\r\n-import Navbar from \"../../src/components/Navbar\";\r\n import { supabase } from \"../../src/integrations/supabase/client\";\r\n import type { RootStackParamList } from \"../../src/navigation/types\";\r\n \r\n type NavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n@@ -137,9 +136,8 @@\n   };\r\n \r\n   return (\r\n     <View style={{ flex: 1, backgroundColor: \"#f9fafb\" }}>\r\n-      <Navbar />\r\n       <ScrollView\r\n         style={styles.container}\r\n         contentContainerStyle={{ flexGrow: 1, justifyContent: \"space-between\" }}\r\n       >\r\n"
                }
            ],
            "date": 1752757543642,
            "name": "Commit-0",
            "content": "import type { RouteProp } from \"@react-navigation/native\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  ScrollView,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport Footer from \"../../src/components/Footer\";\r\nimport Navbar from \"../../src/components/Navbar\";\r\nimport { supabase } from \"../../src/integrations/supabase/client\";\r\nimport type { RootStackParamList } from \"../../src/navigation/types\";\r\n\r\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\ntype LoginRouteProp = RouteProp<RootStackParamList, \"Login\">;\r\n\r\nconst Login = () => {\r\n  const navigation = useNavigation<NavigationProp>();\r\n  const route = useRoute<LoginRouteProp>();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [accountDisabledMessage, setAccountDisabledMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const redirectUrl = route.params?.redirect;\r\n\r\n  useEffect(() => {\r\n    const checkSession = async () => {\r\n      const {\r\n        data: { session },\r\n      } = await supabase.auth.getSession();\r\n      if (session) {\r\n        navigation.navigate(\"Dashboard\");\r\n      }\r\n    };\r\n    checkSession();\r\n  }, [navigation, redirectUrl]);\r\n\r\n  const handleLogin = async () => {\r\n    if (!email || !password) {\r\n      Alert.alert(\"Erreur\", \"Veuillez remplir tous les champs.\");\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    setAccountDisabledMessage(\"\");\r\n\r\n    try {\r\n      const { data: signInData, error: signInError } =\r\n        await supabase.auth.signInWithPassword({\r\n          email,\r\n          password,\r\n        });\r\n\r\n      if (signInError) {\r\n        Alert.alert(\"Erreur de connexion\", signInError.message);\r\n        return;\r\n      }\r\n\r\n      const user = signInData?.user;\r\n      if (!user) {\r\n        Alert.alert(\"Erreur\", \"Utilisateur introuvable après connexion.\");\r\n        return;\r\n      }\r\n\r\n      const { data: profileData, error: profileError } = await supabase\r\n        .from(\"profiles\")\r\n        .select(\"deleted_at\")\r\n        .eq(\"id\", user.id)\r\n        .single();\r\n\r\n      if (profileError) {\r\n        Alert.alert(\"Erreur\", \"Impossible de vérifier l'état du compte.\");\r\n        return;\r\n      }\r\n\r\n      if (profileData?.deleted_at) {\r\n        setAccountDisabledMessage(\r\n          \"Votre compte a été désactivé. Contactez le support ou utilisez le lien de réactivation.\"\r\n        );\r\n        await supabase.auth.signOut();\r\n        return;\r\n      }\r\n\r\n      Alert.alert(\"Connexion réussie\", \"Bienvenue sur Lys&Co !\");\r\n      navigation.navigate(\"Dashboard\");\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    if (!email) {\r\n      Alert.alert(\r\n        \"Email requis\",\r\n        \"Veuillez entrer votre email pour réinitialiser votre mot de passe.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n        redirectTo: `${process.env.EXPO_PUBLIC_APP_URL}/reset-password`,\r\n      });\r\n\r\n      if (error) {\r\n        Alert.alert(\"Erreur\", error.message);\r\n        return;\r\n      }\r\n\r\n      Alert.alert(\r\n        \"Email envoyé\",\r\n        \"Veuillez vérifier votre boîte mail pour réinitialiser votre mot de passe.\"\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Reset password error:\", err);\r\n      Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n      <Navbar />\r\n\r\n      <ScrollView\r\n        contentContainerStyle={{\r\n          flexGrow: 1,\r\n          justifyContent: \"center\",\r\n          padding: 20,\r\n        }}\r\n      >\r\n        <View style={{ backgroundColor: \"#fff\", padding: 20, borderRadius: 8 }}>\r\n          <Text\r\n            style={{\r\n              fontSize: 24,\r\n              fontWeight: \"bold\",\r\n              textAlign: \"center\",\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            Connexion\r\n          </Text>\r\n          <Text style={{ textAlign: \"center\", marginBottom: 20 }}>\r\n            Entrez vos identifiants pour accéder à votre compte\r\n          </Text>\r\n\r\n          {/* Email */}\r\n          <TextInput\r\n            style={{\r\n              borderWidth: 1,\r\n              padding: 10,\r\n              borderRadius: 6,\r\n              marginBottom: 10,\r\n            }}\r\n            placeholder=\"Email\"\r\n            keyboardType=\"email-address\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n          />\r\n\r\n          {/* Mot de passe */}\r\n          <TextInput\r\n            style={{\r\n              borderWidth: 1,\r\n              padding: 10,\r\n              borderRadius: 6,\r\n              marginBottom: 10,\r\n            }}\r\n            placeholder=\"Mot de passe\"\r\n            secureTextEntry={!showPassword}\r\n            value={password}\r\n            onChangeText={setPassword}\r\n          />\r\n\r\n          {/* Afficher/Masquer mot de passe */}\r\n          <TouchableOpacity\r\n            onPress={() => setShowPassword(!showPassword)}\r\n            style={{ alignSelf: \"flex-end\", marginBottom: 10 }}\r\n          >\r\n            <Text style={{ color: \"#007aff\" }}>\r\n              {showPassword\r\n                ? \"Masquer le mot de passe\"\r\n                : \"Afficher le mot de passe\"}\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Message compte désactivé */}\r\n          {accountDisabledMessage ? (\r\n            <Text\r\n              style={{\r\n                color: \"red\",\r\n                fontSize: 12,\r\n                marginBottom: 10,\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              {accountDisabledMessage}\r\n            </Text>\r\n          ) : null}\r\n\r\n          {/* Bouton login */}\r\n          <TouchableOpacity\r\n            onPress={handleLogin}\r\n            style={{\r\n              backgroundColor: \"#00bcd4\",\r\n              padding: 12,\r\n              borderRadius: 6,\r\n              alignItems: \"center\",\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            <Text style={{ color: \"#fff\", fontWeight: \"bold\" }}>\r\n              {isLoading ? \"Connexion en cours...\" : \"Se connecter\"}\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Mot de passe oublié */}\r\n          <TouchableOpacity\r\n            onPress={handleResetPassword}\r\n            style={{ marginBottom: 20 }}\r\n          >\r\n            <Text style={{ color: \"#00bcd4\", textAlign: \"center\" }}>\r\n              Mot de passe oublié ?\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Pas encore de compte */}\r\n          <View style={{ alignItems: \"center\" }}>\r\n            <Text>\r\n              Pas encore de compte ?{\" \"}\r\n              <Text\r\n                style={{ color: \"#ec407a\", textDecorationLine: \"underline\" }}\r\n                onPress={() => navigation.navigate(\"Register\")}\r\n              >\r\n                Créer un compte\r\n              </Text>\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      <Footer />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"
        }
    ]
}