{
    "sourceFile": "app/(tabs)/Register.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1752756771796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752825795050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,17 @@\n import { supabase } from \"@/integrations/supabase/client\";\r\n import Footer from \"@/src/components/Footer\";\r\n import Navbar from \"@/src/components/Navbar\";\r\n import type { RootStackParamList } from \"@/src/navigation/types\";\r\n+import { Feather } from \"@expo/vector-icons\";\r\n import { useNavigation } from \"@react-navigation/native\";\r\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\n+import type { Session } from \"@supabase/supabase-js\";\r\n import React, { useState } from \"react\";\r\n import {\r\n   Alert,\r\n   ScrollView,\r\n+  StyleSheet,\r\n   Text,\r\n   TextInput,\r\n   TouchableOpacity,\r\n   View,\r\n@@ -23,8 +26,9 @@\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [showPassword, setShowPassword] = useState(false);\r\n   const [passwordError, setPasswordError] = useState(false);\r\n+  const [session, setSession] = useState<Session | null>(null);\r\n \r\n   const isPasswordValid = (pwd: string) => {\r\n     const regex =\r\n       /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|<>?,./`~]).{8,}$/;\r\n@@ -82,120 +86,102 @@\n   };\r\n \r\n   return (\r\n     <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n-      <Navbar />\r\n+      <Navbar session={session} />\r\n \r\n       <ScrollView\r\n         contentContainerStyle={{\r\n           flexGrow: 1,\r\n           justifyContent: \"center\",\r\n           padding: 20,\r\n         }}\r\n       >\r\n-        <View style={{ backgroundColor: \"#fff\", padding: 20, borderRadius: 8 }}>\r\n-          <Text\r\n-            style={{\r\n-              fontSize: 24,\r\n-              fontWeight: \"bold\",\r\n-              textAlign: \"center\",\r\n-              marginBottom: 10,\r\n-            }}\r\n-          >\r\n-            Créer un compte\r\n-          </Text>\r\n-          <Text style={{ textAlign: \"center\", marginBottom: 20 }}>\r\n+        <View style={styles.card}>\r\n+          <Text style={styles.title}>Créer un compte</Text>\r\n+          <Text style={styles.subtitle}>\r\n             Inscrivez-vous pour accéder à nos services\r\n           </Text>\r\n \r\n-          {/* Prénom & Nom */}\r\n-          <View style={{ flexDirection: \"row\", gap: 10, marginBottom: 10 }}>\r\n+          {/* Prénom */}\r\n+          <View style={styles.inputRow}>\r\n+            <Feather name=\"user\" size={20} color=\"#9ca3af\" />\r\n             <TextInput\r\n-              style={{ flex: 1, borderWidth: 1, padding: 10, borderRadius: 6 }}\r\n+              style={styles.input}\r\n               placeholder=\"Prénom\"\r\n               value={firstName}\r\n               onChangeText={setFirstName}\r\n             />\r\n+          </View>\r\n+\r\n+          {/* Nom */}\r\n+          <View style={styles.inputRow}>\r\n+            <Feather name=\"user\" size={20} color=\"#9ca3af\" />\r\n             <TextInput\r\n-              style={{ flex: 1, borderWidth: 1, padding: 10, borderRadius: 6 }}\r\n+              style={styles.input}\r\n               placeholder=\"Nom\"\r\n               value={lastName}\r\n               onChangeText={setLastName}\r\n             />\r\n           </View>\r\n \r\n           {/* Email */}\r\n-          <TextInput\r\n-            style={{\r\n-              borderWidth: 1,\r\n-              padding: 10,\r\n-              borderRadius: 6,\r\n-              marginBottom: 10,\r\n-            }}\r\n-            placeholder=\"Email\"\r\n-            keyboardType=\"email-address\"\r\n-            value={email}\r\n-            onChangeText={setEmail}\r\n-          />\r\n+          <View style={styles.inputRow}>\r\n+            <Feather name=\"mail\" size={20} color=\"#9ca3af\" />\r\n+            <TextInput\r\n+              style={styles.input}\r\n+              placeholder=\"Email\"\r\n+              keyboardType=\"email-address\"\r\n+              value={email}\r\n+              onChangeText={setEmail}\r\n+            />\r\n+          </View>\r\n \r\n           {/* Mot de passe */}\r\n-          <TextInput\r\n-            style={{\r\n-              borderWidth: 1,\r\n-              padding: 10,\r\n-              borderRadius: 6,\r\n-              marginBottom: passwordError ? 5 : 10,\r\n-              borderColor: passwordError ? \"red\" : \"#ccc\",\r\n-            }}\r\n-            placeholder=\"Mot de passe\"\r\n-            secureTextEntry={!showPassword}\r\n-            value={password}\r\n-            onChangeText={(val) => {\r\n-              setPassword(val);\r\n-              setPasswordError(!isPasswordValid(val));\r\n-            }}\r\n-          />\r\n+          <View\r\n+            style={[\r\n+              styles.inputRow,\r\n+              { borderColor: passwordError ? \"red\" : \"#d1d5db\" },\r\n+            ]}\r\n+          >\r\n+            <Feather name=\"lock\" size={20} color=\"#9ca3af\" />\r\n+            <TextInput\r\n+              style={styles.input}\r\n+              placeholder=\"Mot de passe\"\r\n+              secureTextEntry={!showPassword}\r\n+              value={password}\r\n+              onChangeText={(val) => {\r\n+                setPassword(val);\r\n+                setPasswordError(!isPasswordValid(val));\r\n+              }}\r\n+            />\r\n+            <TouchableOpacity onPress={() => setShowPassword(!showPassword)}>\r\n+              <Feather\r\n+                name={showPassword ? \"eye-off\" : \"eye\"}\r\n+                size={20}\r\n+                color=\"#9ca3af\"\r\n+              />\r\n+            </TouchableOpacity>\r\n+          </View>\r\n+\r\n           {passwordError && (\r\n-            <Text style={{ color: \"red\", fontSize: 12, marginBottom: 10 }}>\r\n+            <Text style={styles.errorText}>\r\n               Le mot de passe doit contenir : 1 minuscule, 1 majuscule, 1\r\n               chiffre et 1 caractère spécial.\r\n             </Text>\r\n           )}\r\n \r\n-          {/* Afficher/Masquer mot de passe */}\r\n-          <TouchableOpacity\r\n-            onPress={() => setShowPassword(!showPassword)}\r\n-            style={{ alignSelf: \"flex-end\", marginBottom: 20 }}\r\n-          >\r\n-            <Text style={{ color: \"#007aff\" }}>\r\n-              {showPassword\r\n-                ? \"Masquer le mot de passe\"\r\n-                : \"Afficher le mot de passe\"}\r\n-            </Text>\r\n-          </TouchableOpacity>\r\n-\r\n           {/* Bouton inscription */}\r\n-          <TouchableOpacity\r\n-            onPress={handleRegister}\r\n-            style={{\r\n-              backgroundColor: \"#ec407a\",\r\n-              padding: 12,\r\n-              borderRadius: 6,\r\n-              alignItems: \"center\",\r\n-              marginBottom: 20,\r\n-            }}\r\n-          >\r\n-            <Text style={{ color: \"#fff\", fontWeight: \"bold\" }}>\r\n-              S'inscrire\r\n-            </Text>\r\n+          <TouchableOpacity style={styles.button} onPress={handleRegister}>\r\n+            <Text style={styles.buttonText}>S'inscrire</Text>\r\n           </TouchableOpacity>\r\n \r\n           {/* Lien vers login */}\r\n           <View style={{ alignItems: \"center\" }}>\r\n             <Text>\r\n               Déjà un compte ?{\" \"}\r\n               <Text\r\n-                style={{ color: \"#00bcd4\", textDecorationLine: \"underline\" }}\r\n+                style={styles.link}\r\n                 onPress={() => navigation.navigate(\"Login\")}\r\n               >\r\n                 Se connecter\r\n               </Text>\r\n@@ -208,5 +194,67 @@\n     </View>\r\n   );\r\n };\r\n \r\n+const styles = StyleSheet.create({\r\n+  card: {\r\n+    backgroundColor: \"#fff\",\r\n+    padding: 20,\r\n+    borderRadius: 16,\r\n+    shadowColor: \"#000\",\r\n+    shadowOffset: { width: 0, height: 2 },\r\n+    shadowOpacity: 0.1,\r\n+    shadowRadius: 4,\r\n+    elevation: 5,\r\n+    maxWidth: 400,\r\n+    alignSelf: \"center\",\r\n+  },\r\n+  title: {\r\n+    fontSize: 24,\r\n+    fontWeight: \"bold\",\r\n+    textAlign: \"center\",\r\n+    marginBottom: 10,\r\n+  },\r\n+  subtitle: {\r\n+    textAlign: \"center\",\r\n+    marginBottom: 20,\r\n+    color: \"#6b7280\",\r\n+  },\r\n+  inputRow: {\r\n+    flexDirection: \"row\",\r\n+    alignItems: \"center\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"#d1d5db\",\r\n+    borderRadius: 8,\r\n+    backgroundColor: \"#fff\",\r\n+    marginBottom: 10,\r\n+    paddingHorizontal: 10,\r\n+  },\r\n+  input: {\r\n+    flex: 1,\r\n+    paddingVertical: 10,\r\n+    paddingHorizontal: 10,\r\n+  },\r\n+  errorText: {\r\n+    color: \"red\",\r\n+    fontSize: 12,\r\n+    marginBottom: 10,\r\n+    textAlign: \"center\",\r\n+  },\r\n+  button: {\r\n+    backgroundColor: \"#ec407a\",\r\n+    paddingVertical: 12,\r\n+    borderRadius: 8,\r\n+    alignItems: \"center\",\r\n+    marginBottom: 20,\r\n+  },\r\n+  buttonText: {\r\n+    color: \"#fff\",\r\n+    fontWeight: \"bold\",\r\n+  },\r\n+  link: {\r\n+    color: \"#00bcd4\",\r\n+    textDecorationLine: \"underline\",\r\n+  },\r\n+});\r\n+\r\n export default Register;\r\n"
                },
                {
                    "date": 1752825850878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,9 +204,9 @@\n     shadowOffset: { width: 0, height: 2 },\r\n     shadowOpacity: 0.1,\r\n     shadowRadius: 4,\r\n     elevation: 5,\r\n-    maxWidth: 400,\r\n+    maxWidth: 500,\r\n     alignSelf: \"center\",\r\n   },\r\n   title: {\r\n     fontSize: 24,\r\n"
                },
                {
                    "date": 1752867489635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n   const [password, setPassword] = useState(\"\");\r\n   const [showPassword, setShowPassword] = useState(false);\r\n   const [passwordError, setPasswordError] = useState(false);\r\n   const [session, setSession] = useState<Session | null>(null);\r\n+  const [menuOpen, setMenuOpen] = useState(false);\r\n \r\n   const isPasswordValid = (pwd: string) => {\r\n     const regex =\r\n       /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|<>?,./`~]).{8,}$/;\r\n@@ -86,9 +87,9 @@\n   };\r\n \r\n   return (\r\n     <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n-      <Navbar session={session} />\r\n+      <Navbar session={session} onToggleMenu={() => setMenuOpen(!menuOpen)} />\r\n \r\n       <ScrollView\r\n         contentContainerStyle={{\r\n           flexGrow: 1,\r\n"
                },
                {
                    "date": 1752868748237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,13 +90,10 @@\n     <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n       <Navbar session={session} onToggleMenu={() => setMenuOpen(!menuOpen)} />\r\n \r\n       <ScrollView\r\n-        contentContainerStyle={{\r\n-          flexGrow: 1,\r\n-          justifyContent: \"center\",\r\n-          padding: 20,\r\n-        }}\r\n+        style={styles.container}\r\n+        contentContainerStyle={{ flexGrow: 1, justifyContent: \"space-between\" }}\r\n       >\r\n         <View style={styles.card}>\r\n           <Text style={styles.title}>Créer un compte</Text>\r\n           <Text style={styles.subtitle}>\r\n@@ -196,8 +193,13 @@\n   );\r\n };\r\n \r\n const styles = StyleSheet.create({\r\n+  container: {\r\n+    flex: 1,\r\n+    padding: 20,\r\n+    backgroundColor: \"#f5f5f5\",\r\n+  },\r\n   card: {\r\n     backgroundColor: \"#fff\",\r\n     padding: 20,\r\n     borderRadius: 16,\r\n"
                },
                {
                    "date": 1752868785669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,11 +185,10 @@\n               </Text>\r\n             </Text>\r\n           </View>\r\n         </View>\r\n+        <Footer />\r\n       </ScrollView>\r\n-\r\n-      <Footer />\r\n     </View>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1752869291301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,8 @@\n \r\n const styles = StyleSheet.create({\r\n   container: {\r\n     flex: 1,\r\n-    padding: 20,\r\n     backgroundColor: \"#f5f5f5\",\r\n   },\r\n   card: {\r\n     backgroundColor: \"#fff\",\r\n"
                },
                {
                    "date": 1752947855862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import { Feather } from \"@expo/vector-icons\";\r\n import { useNavigation } from \"@react-navigation/native\";\r\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\n import type { Session } from \"@supabase/supabase-js\";\r\n+import { router } from \"expo-router\";\r\n import React, { useState } from \"react\";\r\n import {\r\n   Alert,\r\n   ScrollView,\r\n@@ -88,9 +89,8 @@\n \r\n   return (\r\n     <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n       <Navbar session={session} onToggleMenu={() => setMenuOpen(!menuOpen)} />\r\n-\r\n       <ScrollView\r\n         style={styles.container}\r\n         contentContainerStyle={{ flexGrow: 1, justifyContent: \"space-between\" }}\r\n       >\r\n@@ -187,8 +187,125 @@\n           </View>\r\n         </View>\r\n         <Footer />\r\n       </ScrollView>\r\n+      {/* GLOBAL OVERLAY */}\r\n+      {menuOpen && (\r\n+        <View\r\n+          style={{\r\n+            position: \"absolute\",\r\n+            top: 0,\r\n+            bottom: 0,\r\n+            left: 0,\r\n+            right: 0,\r\n+            backgroundColor: \"#fff\",\r\n+            zIndex: 9999,\r\n+            elevation: 9999,\r\n+          }}\r\n+        >\r\n+          <ScrollView\r\n+            contentContainerStyle={{ paddingTop: 90, paddingHorizontal: 20 }}\r\n+          >\r\n+            <TouchableOpacity\r\n+              style={{ position: \"absolute\", top: 50, right: 20, padding: 10 }}\r\n+              onPress={() => setMenuOpen(false)}\r\n+            >\r\n+              <Text style={{ fontSize: 28, color: \"#333\" }}>✕</Text>\r\n+            </TouchableOpacity>\r\n+\r\n+            {[\r\n+              { label: \"Accueil\", path: \"/(tabs)\" },\r\n+              { label: \"Domiciliation\", path: \"/(tabs)/Domiciliation\" },\r\n+              { label: \"Services Admin\", path: \"/(tabs)/ServicesAdmin\" },\r\n+              { label: \"Communication\", path: \"/(tabs)/Communication\" },\r\n+              { label: \"Contact\", path: \"/(tabs)/Contact\" },\r\n+            ].map((item, idx) => (\r\n+              <TouchableOpacity\r\n+                key={idx}\r\n+                style={{\r\n+                  paddingVertical: 12,\r\n+                  borderBottomWidth: 1,\r\n+                  borderColor: \"#eee\",\r\n+                }}\r\n+                onPress={() => {\r\n+                  router.push(item.path as any);\r\n+                  setMenuOpen(false);\r\n+                }}\r\n+              >\r\n+                <Text style={{ fontSize: 18, color: \"#333\" }}>\r\n+                  {item.label}\r\n+                </Text>\r\n+              </TouchableOpacity>\r\n+            ))}\r\n+\r\n+            <View style={{ marginTop: 30 }}>\r\n+              {session ? (\r\n+                <>\r\n+                  <TouchableOpacity\r\n+                    style={{\r\n+                      paddingVertical: 12,\r\n+                      alignItems: \"center\",\r\n+                      borderRadius: 6,\r\n+                      backgroundColor: \"#5cb9bc\",\r\n+                      marginBottom: 12,\r\n+                    }}\r\n+                    onPress={() => {\r\n+                      router.push(\"/(tabs)/Dashboard\" as any);\r\n+                      setMenuOpen(false);\r\n+                    }}\r\n+                  >\r\n+                    <Text style={{ color: \"#fff\", fontWeight: \"bold\" }}>\r\n+                      Dashboard\r\n+                    </Text>\r\n+                  </TouchableOpacity>\r\n+\r\n+                  <TouchableOpacity\r\n+                    style={{\r\n+                      paddingVertical: 12,\r\n+                      alignItems: \"center\",\r\n+                      borderRadius: 6,\r\n+                      backgroundColor: \"#5cb9bc\",\r\n+                    }}\r\n+                    onPress={async () => {\r\n+                      const { error } = await supabase.auth.signOut();\r\n+                      if (error) {\r\n+                        Alert.alert(\"Erreur\", error.message);\r\n+                        return;\r\n+                      }\r\n+                      Alert.alert(\"Déconnexion réussie\");\r\n+                      router.push(\"/(tabs)/Login\" as any);\r\n+                      setMenuOpen(false);\r\n+                    }}\r\n+                  >\r\n+                    <Text style={{ color: \"#fff\", fontWeight: \"bold\" }}>\r\n+                      Déconnexion\r\n+                    </Text>\r\n+                  </TouchableOpacity>\r\n+                </>\r\n+              ) : (\r\n+                <TouchableOpacity\r\n+                  style={{\r\n+                    paddingVertical: 12,\r\n+                    alignItems: \"center\",\r\n+                    borderRadius: 6,\r\n+                    backgroundColor: \"#fff\",\r\n+                    borderWidth: 1,\r\n+                    borderColor: \"#5cb9bc\",\r\n+                  }}\r\n+                  onPress={() => {\r\n+                    router.push(\"/(tabs)/Login\" as any);\r\n+                    setMenuOpen(false);\r\n+                  }}\r\n+                >\r\n+                  <Text style={{ color: \"#5cb9bc\", fontWeight: \"bold\" }}>\r\n+                    Connexion\r\n+                  </Text>\r\n+                </TouchableOpacity>\r\n+              )}\r\n+            </View>\r\n+          </ScrollView>\r\n+        </View>\r\n+      )}\r\n     </View>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1753019748039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n import { supabase } from \"@/integrations/supabase/client\";\r\n import Footer from \"@/src/components/Footer\";\r\n-import Navbar from \"@/src/components/Navbar\";\r\n import type { RootStackParamList } from \"@/src/navigation/types\";\r\n import { Feather } from \"@expo/vector-icons\";\r\n import { useNavigation } from \"@react-navigation/native\";\r\n import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\n@@ -88,9 +87,8 @@\n   };\r\n \r\n   return (\r\n     <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n-      <Navbar session={session} onToggleMenu={() => setMenuOpen(!menuOpen)} />\r\n       <ScrollView\r\n         style={styles.container}\r\n         contentContainerStyle={{ flexGrow: 1, justifyContent: \"space-between\" }}\r\n       >\r\n"
                }
            ],
            "date": 1752756771791,
            "name": "Commit-0",
            "content": "import { supabase } from \"@/integrations/supabase/client\";\r\nimport Footer from \"@/src/components/Footer\";\r\nimport Navbar from \"@/src/components/Navbar\";\r\nimport type { RootStackParamList } from \"@/src/navigation/types\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  ScrollView,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\n\r\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n\r\nconst Register = () => {\r\n  const navigation = useNavigation<NavigationProp>();\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n\r\n  const isPasswordValid = (pwd: string) => {\r\n    const regex =\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|<>?,./`~]).{8,}$/;\r\n    return regex.test(pwd);\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    if (!isPasswordValid(password)) {\r\n      setPasswordError(true);\r\n      Alert.alert(\r\n        \"Mot de passe invalide\",\r\n        \"Le mot de passe doit contenir : 1 minuscule, 1 majuscule, 1 chiffre et 1 caractère spécial.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data, error } = await supabase.auth.signUp({\r\n        email,\r\n        password,\r\n        options: {\r\n          data: {\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n          },\r\n        },\r\n      });\r\n\r\n      if (error) {\r\n        if (\r\n          error.message.includes(\"already registered\") ||\r\n          error.message.includes(\"Email already in use\")\r\n        ) {\r\n          Alert.alert(\r\n            \"Cet email est déjà associé à un compte\",\r\n            \"Essayez de vous connecter ou de réinitialiser votre mot de passe.\"\r\n          );\r\n        } else {\r\n          Alert.alert(\"Erreur\", error.message);\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (data.user) {\r\n        Alert.alert(\r\n          \"Inscription réussie\",\r\n          \"Vous êtes maintenant inscrit. Bienvenue chez Lys&Co!\",\r\n          [{ text: \"OK\", onPress: () => navigation.navigate(\"Dashboard\") }]\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Registration error:\", err);\r\n      Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n      <Navbar />\r\n\r\n      <ScrollView\r\n        contentContainerStyle={{\r\n          flexGrow: 1,\r\n          justifyContent: \"center\",\r\n          padding: 20,\r\n        }}\r\n      >\r\n        <View style={{ backgroundColor: \"#fff\", padding: 20, borderRadius: 8 }}>\r\n          <Text\r\n            style={{\r\n              fontSize: 24,\r\n              fontWeight: \"bold\",\r\n              textAlign: \"center\",\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            Créer un compte\r\n          </Text>\r\n          <Text style={{ textAlign: \"center\", marginBottom: 20 }}>\r\n            Inscrivez-vous pour accéder à nos services\r\n          </Text>\r\n\r\n          {/* Prénom & Nom */}\r\n          <View style={{ flexDirection: \"row\", gap: 10, marginBottom: 10 }}>\r\n            <TextInput\r\n              style={{ flex: 1, borderWidth: 1, padding: 10, borderRadius: 6 }}\r\n              placeholder=\"Prénom\"\r\n              value={firstName}\r\n              onChangeText={setFirstName}\r\n            />\r\n            <TextInput\r\n              style={{ flex: 1, borderWidth: 1, padding: 10, borderRadius: 6 }}\r\n              placeholder=\"Nom\"\r\n              value={lastName}\r\n              onChangeText={setLastName}\r\n            />\r\n          </View>\r\n\r\n          {/* Email */}\r\n          <TextInput\r\n            style={{\r\n              borderWidth: 1,\r\n              padding: 10,\r\n              borderRadius: 6,\r\n              marginBottom: 10,\r\n            }}\r\n            placeholder=\"Email\"\r\n            keyboardType=\"email-address\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n          />\r\n\r\n          {/* Mot de passe */}\r\n          <TextInput\r\n            style={{\r\n              borderWidth: 1,\r\n              padding: 10,\r\n              borderRadius: 6,\r\n              marginBottom: passwordError ? 5 : 10,\r\n              borderColor: passwordError ? \"red\" : \"#ccc\",\r\n            }}\r\n            placeholder=\"Mot de passe\"\r\n            secureTextEntry={!showPassword}\r\n            value={password}\r\n            onChangeText={(val) => {\r\n              setPassword(val);\r\n              setPasswordError(!isPasswordValid(val));\r\n            }}\r\n          />\r\n          {passwordError && (\r\n            <Text style={{ color: \"red\", fontSize: 12, marginBottom: 10 }}>\r\n              Le mot de passe doit contenir : 1 minuscule, 1 majuscule, 1\r\n              chiffre et 1 caractère spécial.\r\n            </Text>\r\n          )}\r\n\r\n          {/* Afficher/Masquer mot de passe */}\r\n          <TouchableOpacity\r\n            onPress={() => setShowPassword(!showPassword)}\r\n            style={{ alignSelf: \"flex-end\", marginBottom: 20 }}\r\n          >\r\n            <Text style={{ color: \"#007aff\" }}>\r\n              {showPassword\r\n                ? \"Masquer le mot de passe\"\r\n                : \"Afficher le mot de passe\"}\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Bouton inscription */}\r\n          <TouchableOpacity\r\n            onPress={handleRegister}\r\n            style={{\r\n              backgroundColor: \"#ec407a\",\r\n              padding: 12,\r\n              borderRadius: 6,\r\n              alignItems: \"center\",\r\n              marginBottom: 20,\r\n            }}\r\n          >\r\n            <Text style={{ color: \"#fff\", fontWeight: \"bold\" }}>\r\n              S'inscrire\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Lien vers login */}\r\n          <View style={{ alignItems: \"center\" }}>\r\n            <Text>\r\n              Déjà un compte ?{\" \"}\r\n              <Text\r\n                style={{ color: \"#00bcd4\", textDecorationLine: \"underline\" }}\r\n                onPress={() => navigation.navigate(\"Login\")}\r\n              >\r\n                Se connecter\r\n              </Text>\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      <Footer />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"
        }
    ]
}