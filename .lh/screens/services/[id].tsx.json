{
    "sourceFile": "screens/services/[id].tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1754298356458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1754298356458,
            "name": "Commit-0",
            "content": "import { supabase } from \"@/integrations/supabase/client\";\r\nimport { useCart } from \"@/src/components/cart/CartContext\";\r\nimport Footer from \"@/src/components/Footer\";\r\nimport ReservationForm from \"@/src/components/reservations/ReservationForm\";\r\nimport { useToast } from \"@/src/hooks/useToast\";\r\nimport { Session } from \"@supabase/supabase-js\";\r\nimport { useLocalSearchParams, useRouter } from \"expo-router\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport ProductDescription from \"../../src/components/services/ProductDescription\";\r\nimport serviceData from \"../../src/data/data\";\r\n\r\nexport default function ServiceDetailPage() {\r\n  const { id } = useLocalSearchParams();\r\n  const key = id as keyof typeof serviceData;\r\n  const service = serviceData[key];\r\n  const [session, setSession] = useState<Session | null>(null);\r\n\r\n  const [menuOpen, setMenuOpen] = React.useState(false);\r\n  const router = useRouter();\r\n  const { addItem } = useCart();\r\n  const { toast } = useToast();\r\n\r\n  useEffect(() => {\r\n    const {\r\n      data: { subscription },\r\n    } = supabase.auth.onAuthStateChange((_event, session) =>\r\n      setSession(session)\r\n    );\r\n\r\n    supabase.auth\r\n      .getSession()\r\n      .then(({ data: { session } }) => setSession(session));\r\n\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n  const handleAddToCart = () => {\r\n    if (!session) {\r\n      router.push(\"/(tabs)/Login\");\r\n      return;\r\n    }\r\n\r\n    if (!service) return;\r\n\r\n    addItem({\r\n      id: key,\r\n      title: service.title,\r\n      price: parseFloat(service.price.replace(\",\", \".\")),\r\n      quantity: 1,\r\n    });\r\n\r\n    toast({\r\n      title: \"Ajouté au panier\",\r\n      description: `${service.title} a été ajouté à votre panier.`,\r\n    });\r\n  };\r\n  // console.log(\"Clé reçue depuis l'URL :\", key);\r\n  // console.log(\r\n  //   \"Est-ce un service réservable ? :\",\r\n  //   [\"coworking-space\", \"location-bureau\", \"formation-room\"].includes(key)\r\n  // );\r\n\r\n  if (!service) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <Text>Service introuvable</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <ScrollView\r\n        style={styles.container}\r\n        contentContainerStyle={{ flexGrow: 1, justifyContent: \"space-between\" }}\r\n      >\r\n        <View style={{ padding: 20 }}>\r\n          <TouchableOpacity\r\n            style={{\r\n              marginBottom: 16,\r\n              alignSelf: \"flex-start\",\r\n              paddingHorizontal: 12,\r\n              paddingVertical: 8,\r\n              backgroundColor: \"#5cb9bc\",\r\n              borderRadius: 8,\r\n            }}\r\n            onPress={() => router.back()}\r\n          >\r\n            <Text style={{ color: \"#fff\", fontWeight: \"600\" }}>← Retour</Text>\r\n          </TouchableOpacity>\r\n\r\n          <View style={styles.card}>\r\n            <Text style={styles.title}>{service.title}</Text>\r\n\r\n            {service.originalPrice ? (\r\n              <View style={styles.priceContainer}>\r\n                <Text style={styles.oldPrice}>{service.originalPrice} €</Text>\r\n                <Text style={styles.price}>\r\n                  {service.price} €\r\n                  {service.priceUnit ? (\r\n                    <Text style={{ fontSize: 14, color: \"#6b7280\" }}>\r\n                      {\" \"}\r\n                      {service.priceUnit}\r\n                    </Text>\r\n                  ) : null}\r\n                </Text>\r\n              </View>\r\n            ) : (\r\n              <Text style={styles.price}>\r\n                {service.price} €\r\n                {service.priceUnit ? (\r\n                  <Text style={{ fontSize: 14, color: \"#6b7280\" }}>\r\n                    {\" \"}\r\n                    {service.priceUnit}\r\n                  </Text>\r\n                ) : null}\r\n              </Text>\r\n            )}\r\n\r\n            {service.note && <Text style={styles.note}>{service.note}</Text>}\r\n            <Text style={styles.description}>{service.description}</Text>\r\n            {[\"coworking-space\", \"location-bureau\", \"formation-room\"].includes(\r\n              key\r\n            ) ? null : (\r\n              <TouchableOpacity\r\n                style={{\r\n                  backgroundColor: session ? \"#5cb9bc\" : \"#aaa\",\r\n                  paddingVertical: 12,\r\n                  borderRadius: 30,\r\n                  alignItems: \"center\",\r\n                  marginTop: 16,\r\n                }}\r\n                onPress={handleAddToCart}\r\n              >\r\n                <Text style={{ color: \"#fff\", fontWeight: \"600\" }}>\r\n                  {session ? \"Ajouter au panier\" : \"Connectez-vous\"}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            )}\r\n\r\n            {[\"coworking-space\", \"location-bureau\", \"formation-room\"].includes(\r\n              key\r\n            ) && <ReservationForm serviceType={key} />}\r\n            <View style={styles.separator} />\r\n\r\n            <ProductDescription />\r\n          </View>\r\n        </View>\r\n        <Footer />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  priceContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginBottom: 4,\r\n  },\r\n  oldPrice: {\r\n    fontSize: 16,\r\n    color: \"#9ca3af\", // gris clair\r\n    textDecorationLine: \"line-through\",\r\n    marginRight: 8,\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#f9fafb\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"#fff\",\r\n    padding: 20,\r\n    borderRadius: 16,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.08,\r\n    shadowRadius: 6,\r\n    elevation: 3,\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n    color: \"#0f172a\",\r\n    marginBottom: 12,\r\n    textAlign: \"center\",\r\n  },\r\n  price: {\r\n    fontSize: 20,\r\n    fontWeight: \"600\",\r\n    color: \"#5cb9bc\",\r\n    textAlign: \"center\",\r\n    marginBottom: 4,\r\n  },\r\n  note: {\r\n    fontSize: 12,\r\n    color: \"#f9429e\",\r\n    textAlign: \"center\",\r\n    marginBottom: 12,\r\n  },\r\n  description: {\r\n    fontSize: 14,\r\n    color: \"#475569\",\r\n    lineHeight: 20,\r\n    marginBottom: 16,\r\n  },\r\n  separator: {\r\n    height: 1,\r\n    backgroundColor: \"#e5e7eb\",\r\n    marginVertical: 16,\r\n  },\r\n});\r\n"
        }
    ]
}