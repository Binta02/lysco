{
    "sourceFile": "src/components/Navbar.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 23,
            "patches": [
                {
                    "date": 1752746169379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752750636670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { supabase } from \"@/integrations/supabase/client\";\r\n import { useNavigation } from \"@react-navigation/native\";\r\n-import React from \"react\";\r\n+import React, { useState } from \"react\";\r\n import {\r\n   Alert,\r\n   ScrollView,\r\n   StyleSheet,\r\n@@ -10,14 +10,14 @@\n   View,\r\n } from \"react-native\";\r\n \r\n interface NavbarProps {\r\n-  onClose: () => void;\r\n-  session: any; // à remplacer par le type exact si dispo\r\n+  session: any; // Typage à améliorer selon ton projet\r\n }\r\n \r\n-const Navbar: React.FC<NavbarProps> = ({ onClose, session }) => {\r\n+const Navbar: React.FC<NavbarProps> = ({ session }) => {\r\n   const navigation = useNavigation();\r\n+  const [menuOpen, setMenuOpen] = useState(false);\r\n \r\n   const handleLogout = async () => {\r\n     try {\r\n       const { error } = await supabase.auth.signOut();\r\n@@ -26,113 +26,133 @@\n         return;\r\n       }\r\n       Alert.alert(\"Déconnexion réussie\");\r\n       navigation.navigate(\"Login\" as never);\r\n-      onClose();\r\n+      setMenuOpen(false);\r\n     } catch (error) {\r\n       console.error(\"Logout error:\", error);\r\n       Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue\");\r\n     }\r\n   };\r\n \r\n+  const menuItems = [\r\n+    { label: \"Accueil\", screen: \"Home\" },\r\n+    { label: \"Domiciliation\", screen: \"Domiciliation\" },\r\n+    { label: \"Services Admin\", screen: \"ServicesAdmin\" },\r\n+    { label: \"Communication\", screen: \"Communication\" },\r\n+    { label: \"Contact\", screen: \"Contact\" },\r\n+  ];\r\n+\r\n   return (\r\n-    <View style={styles.overlay}>\r\n-      <ScrollView contentContainerStyle={styles.container}>\r\n-        {/* Bouton de fermeture */}\r\n-        <TouchableOpacity style={styles.closeButton} onPress={onClose}>\r\n-          <Text style={styles.closeButtonText}>✕</Text>\r\n+    <View>\r\n+      {/* Top bar */}\r\n+      <View style={styles.navbar}>\r\n+        <TouchableOpacity onPress={() => navigation.navigate(\"Home\" as never)}>\r\n+          <Text style={styles.brand}>Lys&Co</Text>\r\n         </TouchableOpacity>\r\n \r\n-        <MenuItem label=\"Accueil\" screen=\"Home\" onPress={onClose} />\r\n-        <MenuItem\r\n-          label=\"Domiciliation\"\r\n-          screen=\"Domiciliation\"\r\n-          onPress={onClose}\r\n-        />\r\n-        <MenuItem\r\n-          label=\"Services Admin\"\r\n-          screen=\"ServicesAdmin\"\r\n-          onPress={onClose}\r\n-        />\r\n-        <MenuItem\r\n-          label=\"Communication\"\r\n-          screen=\"Communication\"\r\n-          onPress={onClose}\r\n-        />\r\n-        <MenuItem label=\"Contact\" screen=\"Contact\" onPress={onClose} />\r\n+        <TouchableOpacity onPress={() => setMenuOpen(true)}>\r\n+          <Text style={styles.hamburger}>☰</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n \r\n-        <View style={styles.actions}>\r\n-          {session ? (\r\n-            <>\r\n+      {/* Overlay menu */}\r\n+      {menuOpen && (\r\n+        <View style={styles.overlay}>\r\n+          <ScrollView contentContainerStyle={styles.menuContainer}>\r\n+            <TouchableOpacity\r\n+              style={styles.closeButton}\r\n+              onPress={() => setMenuOpen(false)}\r\n+            >\r\n+              <Text style={styles.closeButtonText}>✕</Text>\r\n+            </TouchableOpacity>\r\n+\r\n+            {menuItems.map((item, index) => (\r\n               <TouchableOpacity\r\n-                style={[styles.button, styles.outlineButton]}\r\n+                key={index}\r\n+                style={styles.menuItem}\r\n                 onPress={() => {\r\n-                  navigation.navigate(\"Dashboard\" as never);\r\n-                  onClose();\r\n+                  navigation.navigate(item.screen as never);\r\n+                  setMenuOpen(false);\r\n                 }}\r\n               >\r\n-                <Text style={[styles.buttonText, styles.outlineButtonText]}>\r\n-                  Dashboard\r\n-                </Text>\r\n+                <Text style={styles.menuItemText}>{item.label}</Text>\r\n               </TouchableOpacity>\r\n+            ))}\r\n \r\n-              <TouchableOpacity style={styles.button} onPress={handleLogout}>\r\n-                <Text style={styles.buttonText}>Déconnexion</Text>\r\n-              </TouchableOpacity>\r\n-            </>\r\n-          ) : (\r\n-            <TouchableOpacity\r\n-              style={[styles.button, styles.outlineButton]}\r\n-              onPress={() => {\r\n-                navigation.navigate(\"Login\" as never);\r\n-                onClose();\r\n-              }}\r\n-            >\r\n-              <Text style={[styles.buttonText, styles.outlineButtonText]}>\r\n-                Connexion\r\n-              </Text>\r\n-            </TouchableOpacity>\r\n-          )}\r\n+            <View style={styles.actions}>\r\n+              {session ? (\r\n+                <>\r\n+                  <TouchableOpacity\r\n+                    style={[styles.button, styles.outlineButton]}\r\n+                    onPress={() => {\r\n+                      navigation.navigate(\"Dashboard\" as never);\r\n+                      setMenuOpen(false);\r\n+                    }}\r\n+                  >\r\n+                    <Text style={[styles.buttonText, styles.outlineButtonText]}>\r\n+                      Dashboard\r\n+                    </Text>\r\n+                  </TouchableOpacity>\r\n+\r\n+                  <TouchableOpacity\r\n+                    style={styles.button}\r\n+                    onPress={handleLogout}\r\n+                  >\r\n+                    <Text style={styles.buttonText}>Déconnexion</Text>\r\n+                  </TouchableOpacity>\r\n+                </>\r\n+              ) : (\r\n+                <TouchableOpacity\r\n+                  style={[styles.button, styles.outlineButton]}\r\n+                  onPress={() => {\r\n+                    navigation.navigate(\"Login\" as never);\r\n+                    setMenuOpen(false);\r\n+                  }}\r\n+                >\r\n+                  <Text style={[styles.buttonText, styles.outlineButtonText]}>\r\n+                    Connexion\r\n+                  </Text>\r\n+                </TouchableOpacity>\r\n+              )}\r\n+            </View>\r\n+          </ScrollView>\r\n         </View>\r\n-      </ScrollView>\r\n+      )}\r\n     </View>\r\n   );\r\n };\r\n \r\n-const MenuItem = ({\r\n-  label,\r\n-  screen,\r\n-  onPress,\r\n-}: {\r\n-  label: string;\r\n-  screen: string;\r\n-  onPress: () => void;\r\n-}) => {\r\n-  const navigation = useNavigation();\r\n-  return (\r\n-    <TouchableOpacity\r\n-      style={styles.menuItem}\r\n-      onPress={() => {\r\n-        navigation.navigate(screen as never);\r\n-        onPress();\r\n-      }}\r\n-    >\r\n-      <Text style={styles.menuItemText}>{label}</Text>\r\n-    </TouchableOpacity>\r\n-  );\r\n-};\r\n-\r\n const styles = StyleSheet.create({\r\n+  navbar: {\r\n+    flexDirection: \"row\",\r\n+    justifyContent: \"space-between\",\r\n+    alignItems: \"center\",\r\n+    paddingHorizontal: 16,\r\n+    paddingVertical: 12,\r\n+    backgroundColor: \"#fff\",\r\n+    borderBottomWidth: 1,\r\n+    borderColor: \"#eee\",\r\n+  },\r\n+  brand: {\r\n+    fontSize: 20,\r\n+    fontWeight: \"bold\",\r\n+    color: \"#06b6d4\",\r\n+  },\r\n+  hamburger: {\r\n+    fontSize: 28,\r\n+    color: \"#06b6d4\",\r\n+  },\r\n   overlay: {\r\n     position: \"absolute\",\r\n     top: 0,\r\n     bottom: 0,\r\n     left: 0,\r\n     right: 0,\r\n     backgroundColor: \"#fff\",\r\n-    zIndex: 50,\r\n+    zIndex: 100,\r\n   },\r\n-  container: {\r\n+  menuContainer: {\r\n     paddingTop: 60,\r\n     paddingHorizontal: 20,\r\n   },\r\n   closeButton: {\r\n@@ -160,9 +180,9 @@\n   button: {\r\n     paddingVertical: 12,\r\n     alignItems: \"center\",\r\n     borderRadius: 6,\r\n-    backgroundColor: \"#16a34a\", // vert Lys&Co (ex: turquoise)\r\n+    backgroundColor: \"#06b6d4\",\r\n     marginBottom: 12,\r\n   },\r\n   buttonText: {\r\n     color: \"#fff\",\r\n@@ -170,12 +190,12 @@\n   },\r\n   outlineButton: {\r\n     backgroundColor: \"#fff\",\r\n     borderWidth: 1,\r\n-    borderColor: \"#16a34a\",\r\n+    borderColor: \"#06b6d4\",\r\n   },\r\n   outlineButtonText: {\r\n-    color: \"#16a34a\",\r\n+    color: \"#06b6d4\",\r\n   },\r\n });\r\n \r\n export default Navbar;\r\n"
                },
                {
                    "date": 1752759622059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { supabase } from \"@/integrations/supabase/client\";\r\n+import { supabase } from \"@/src/integrations/supabase/client\";\r\n import { useNavigation } from \"@react-navigation/native\";\r\n import React, { useState } from \"react\";\r\n import {\r\n   Alert,\r\n"
                },
                {
                    "date": 1752760392450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,15 @@\n import { supabase } from \"@/src/integrations/supabase/client\";\r\n-import { useNavigation } from \"@react-navigation/native\";\r\n+import { useRouter } from \"expo-router\";\r\n import React, { useState } from \"react\";\r\n-import {\r\n-  Alert,\r\n-  ScrollView,\r\n-  StyleSheet,\r\n-  Text,\r\n-  TouchableOpacity,\r\n-  View,\r\n-} from \"react-native\";\r\n+import { Alert, ScrollView, Text, TouchableOpacity, View } from \"react-native\";\r\n \r\n interface NavbarProps {\r\n-  session: any; // Typage à améliorer selon ton projet\r\n+  session: any;\r\n }\r\n \r\n const Navbar: React.FC<NavbarProps> = ({ session }) => {\r\n-  const navigation = useNavigation();\r\n+  const router = useRouter();\r\n   const [menuOpen, setMenuOpen] = useState(false);\r\n \r\n   const handleLogout = async () => {\r\n     try {\r\n@@ -25,38 +18,36 @@\n         Alert.alert(\"Erreur\", error.message);\r\n         return;\r\n       }\r\n       Alert.alert(\"Déconnexion réussie\");\r\n-      navigation.navigate(\"Login\" as never);\r\n+      router.push(\"/(tabs)/Login\");\r\n       setMenuOpen(false);\r\n     } catch (error) {\r\n       console.error(\"Logout error:\", error);\r\n       Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue\");\r\n     }\r\n   };\r\n \r\n   const menuItems = [\r\n-    { label: \"Accueil\", screen: \"Home\" },\r\n-    { label: \"Domiciliation\", screen: \"Domiciliation\" },\r\n-    { label: \"Services Admin\", screen: \"ServicesAdmin\" },\r\n-    { label: \"Communication\", screen: \"Communication\" },\r\n-    { label: \"Contact\", screen: \"Contact\" },\r\n+    { label: \"Accueil\", path: \"/(tabs)\" },\r\n+    { label: \"Domiciliation\", path: \"/(tabs)/Domiciliation\" },\r\n+    { label: \"Services Admin\", path: \"/(tabs)/ServicesAdmin\" },\r\n+    { label: \"Communication\", path: \"/(tabs)/Communication\" },\r\n+    { label: \"Contact\", path: \"/(tabs)/Contact\" },\r\n   ];\r\n \r\n   return (\r\n     <View>\r\n-      {/* Top bar */}\r\n       <View style={styles.navbar}>\r\n-        <TouchableOpacity onPress={() => navigation.navigate(\"Home\" as never)}>\r\n+        <TouchableOpacity onPress={() => router.push(\"/(tabs)\")}>\r\n           <Text style={styles.brand}>Lys&Co</Text>\r\n         </TouchableOpacity>\r\n \r\n         <TouchableOpacity onPress={() => setMenuOpen(true)}>\r\n           <Text style={styles.hamburger}>☰</Text>\r\n         </TouchableOpacity>\r\n       </View>\r\n \r\n-      {/* Overlay menu */}\r\n       {menuOpen && (\r\n         <View style={styles.overlay}>\r\n           <ScrollView contentContainerStyle={styles.menuContainer}>\r\n             <TouchableOpacity\r\n@@ -70,9 +61,9 @@\n               <TouchableOpacity\r\n                 key={index}\r\n                 style={styles.menuItem}\r\n                 onPress={() => {\r\n-                  navigation.navigate(item.screen as never);\r\n+                  router.push(item.path);\r\n                   setMenuOpen(false);\r\n                 }}\r\n               >\r\n                 <Text style={styles.menuItemText}>{item.label}</Text>\r\n@@ -84,9 +75,9 @@\n                 <>\r\n                   <TouchableOpacity\r\n                     style={[styles.button, styles.outlineButton]}\r\n                     onPress={() => {\r\n-                      navigation.navigate(\"Dashboard\" as never);\r\n+                      router.push(\"/(tabs)/Dashboard\");\r\n                       setMenuOpen(false);\r\n                     }}\r\n                   >\r\n                     <Text style={[styles.buttonText, styles.outlineButtonText]}>\r\n@@ -104,9 +95,9 @@\n               ) : (\r\n                 <TouchableOpacity\r\n                   style={[styles.button, styles.outlineButton]}\r\n                   onPress={() => {\r\n-                    navigation.navigate(\"Login\" as never);\r\n+                    router.push(\"/(tabs)/Login\");\r\n                     setMenuOpen(false);\r\n                   }}\r\n                 >\r\n                   <Text style={[styles.buttonText, styles.outlineButtonText]}>\r\n@@ -120,82 +111,4 @@\n       )}\r\n     </View>\r\n   );\r\n };\r\n-\r\n-const styles = StyleSheet.create({\r\n-  navbar: {\r\n-    flexDirection: \"row\",\r\n-    justifyContent: \"space-between\",\r\n-    alignItems: \"center\",\r\n-    paddingHorizontal: 16,\r\n-    paddingVertical: 12,\r\n-    backgroundColor: \"#fff\",\r\n-    borderBottomWidth: 1,\r\n-    borderColor: \"#eee\",\r\n-  },\r\n-  brand: {\r\n-    fontSize: 20,\r\n-    fontWeight: \"bold\",\r\n-    color: \"#06b6d4\",\r\n-  },\r\n-  hamburger: {\r\n-    fontSize: 28,\r\n-    color: \"#06b6d4\",\r\n-  },\r\n-  overlay: {\r\n-    position: \"absolute\",\r\n-    top: 0,\r\n-    bottom: 0,\r\n-    left: 0,\r\n-    right: 0,\r\n-    backgroundColor: \"#fff\",\r\n-    zIndex: 100,\r\n-  },\r\n-  menuContainer: {\r\n-    paddingTop: 60,\r\n-    paddingHorizontal: 20,\r\n-  },\r\n-  closeButton: {\r\n-    position: \"absolute\",\r\n-    top: 20,\r\n-    right: 20,\r\n-    padding: 10,\r\n-  },\r\n-  closeButtonText: {\r\n-    fontSize: 28,\r\n-    color: \"#333\",\r\n-  },\r\n-  menuItem: {\r\n-    paddingVertical: 12,\r\n-    borderBottomWidth: 1,\r\n-    borderColor: \"#eee\",\r\n-  },\r\n-  menuItemText: {\r\n-    fontSize: 18,\r\n-    color: \"#333\",\r\n-  },\r\n-  actions: {\r\n-    marginTop: 30,\r\n-  },\r\n-  button: {\r\n-    paddingVertical: 12,\r\n-    alignItems: \"center\",\r\n-    borderRadius: 6,\r\n-    backgroundColor: \"#06b6d4\",\r\n-    marginBottom: 12,\r\n-  },\r\n-  buttonText: {\r\n-    color: \"#fff\",\r\n-    fontWeight: \"bold\",\r\n-  },\r\n-  outlineButton: {\r\n-    backgroundColor: \"#fff\",\r\n-    borderWidth: 1,\r\n-    borderColor: \"#06b6d4\",\r\n-  },\r\n-  outlineButtonText: {\r\n-    color: \"#06b6d4\",\r\n-  },\r\n-});\r\n-\r\n-export default Navbar;\r\n"
                },
                {
                    "date": 1752760460105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,15 @@\n import { supabase } from \"@/src/integrations/supabase/client\";\r\n import { useRouter } from \"expo-router\";\r\n import React, { useState } from \"react\";\r\n-import { Alert, ScrollView, Text, TouchableOpacity, View } from \"react-native\";\r\n+import {\r\n+  Alert,\r\n+  ScrollView,\r\n+  StyleSheet,\r\n+  Text,\r\n+  TouchableOpacity,\r\n+  View,\r\n+} from \"react-native\";\r\n \r\n interface NavbarProps {\r\n   session: any;\r\n }\r\n@@ -27,13 +34,13 @@\n     }\r\n   };\r\n \r\n   const menuItems = [\r\n-    { label: \"Accueil\", path: \"/(tabs)\" },\r\n-    { label: \"Domiciliation\", path: \"/(tabs)/Domiciliation\" },\r\n-    { label: \"Services Admin\", path: \"/(tabs)/ServicesAdmin\" },\r\n-    { label: \"Communication\", path: \"/(tabs)/Communication\" },\r\n-    { label: \"Contact\", path: \"/(tabs)/Contact\" },\r\n+    { label: \"Accueil\", path: \"/(tabs)\" as const },\r\n+    { label: \"Domiciliation\", path: \"/(tabs)/Domiciliation\" as const },\r\n+    { label: \"Services Admin\", path: \"/(tabs)/ServicesAdmin\" as const },\r\n+    { label: \"Communication\", path: \"/(tabs)/Communication\" as const },\r\n+    { label: \"Contact\", path: \"/(tabs)/Contact\" as const },\r\n   ];\r\n \r\n   return (\r\n     <View>\r\n@@ -111,4 +118,82 @@\n       )}\r\n     </View>\r\n   );\r\n };\r\n+\r\n+const styles = StyleSheet.create({\r\n+  navbar: {\r\n+    flexDirection: \"row\",\r\n+    justifyContent: \"space-between\",\r\n+    alignItems: \"center\",\r\n+    paddingHorizontal: 16,\r\n+    paddingVertical: 12,\r\n+    backgroundColor: \"#fff\",\r\n+    borderBottomWidth: 1,\r\n+    borderColor: \"#eee\",\r\n+  },\r\n+  brand: {\r\n+    fontSize: 20,\r\n+    fontWeight: \"bold\",\r\n+    color: \"#06b6d4\",\r\n+  },\r\n+  hamburger: {\r\n+    fontSize: 28,\r\n+    color: \"#06b6d4\",\r\n+  },\r\n+  overlay: {\r\n+    position: \"absolute\",\r\n+    top: 0,\r\n+    bottom: 0,\r\n+    left: 0,\r\n+    right: 0,\r\n+    backgroundColor: \"#fff\",\r\n+    zIndex: 100,\r\n+  },\r\n+  menuContainer: {\r\n+    paddingTop: 60,\r\n+    paddingHorizontal: 20,\r\n+  },\r\n+  closeButton: {\r\n+    position: \"absolute\",\r\n+    top: 20,\r\n+    right: 20,\r\n+    padding: 10,\r\n+  },\r\n+  closeButtonText: {\r\n+    fontSize: 28,\r\n+    color: \"#333\",\r\n+  },\r\n+  menuItem: {\r\n+    paddingVertical: 12,\r\n+    borderBottomWidth: 1,\r\n+    borderColor: \"#eee\",\r\n+  },\r\n+  menuItemText: {\r\n+    fontSize: 18,\r\n+    color: \"#333\",\r\n+  },\r\n+  actions: {\r\n+    marginTop: 30,\r\n+  },\r\n+  button: {\r\n+    paddingVertical: 12,\r\n+    alignItems: \"center\",\r\n+    borderRadius: 6,\r\n+    backgroundColor: \"#06b6d4\",\r\n+    marginBottom: 12,\r\n+  },\r\n+  buttonText: {\r\n+    color: \"#fff\",\r\n+    fontWeight: \"bold\",\r\n+  },\r\n+  outlineButton: {\r\n+    backgroundColor: \"#fff\",\r\n+    borderWidth: 1,\r\n+    borderColor: \"#06b6d4\",\r\n+  },\r\n+  outlineButtonText: {\r\n+    color: \"#06b6d4\",\r\n+  },\r\n+});\r\n+\r\n+export default Navbar;\r\n"
                },
                {
                    "date": 1752760474975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n               <TouchableOpacity\r\n                 key={index}\r\n                 style={styles.menuItem}\r\n                 onPress={() => {\r\n-                  router.push(item.path);\r\n+                  router.push(item.path as any);\r\n                   setMenuOpen(false);\r\n                 }}\r\n               >\r\n                 <Text style={styles.menuItemText}>{item.label}</Text>\r\n"
                },
                {
                    "date": 1752826055234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n   Text,\r\n   TouchableOpacity,\r\n   View,\r\n } from \"react-native\";\r\n+import { SafeAreaView } from \"react-native-safe-area-context\";\r\n \r\n interface NavbarProps {\r\n   session: any;\r\n }\r\n@@ -42,9 +43,9 @@\n     { label: \"Contact\", path: \"/(tabs)/Contact\" as const },\r\n   ];\r\n \r\n   return (\r\n-    <View>\r\n+    <SafeAreaView style={styles.safeArea}>\r\n       <View style={styles.navbar}>\r\n         <TouchableOpacity onPress={() => router.push(\"/(tabs)\")}>\r\n           <Text style={styles.brand}>Lys&Co</Text>\r\n         </TouchableOpacity>\r\n@@ -115,20 +116,22 @@\n             </View>\r\n           </ScrollView>\r\n         </View>\r\n       )}\r\n-    </View>\r\n+    </SafeAreaView>\r\n   );\r\n };\r\n \r\n const styles = StyleSheet.create({\r\n+  safeArea: {\r\n+    backgroundColor: \"#fff\",\r\n+  },\r\n   navbar: {\r\n     flexDirection: \"row\",\r\n     justifyContent: \"space-between\",\r\n     alignItems: \"center\",\r\n     paddingHorizontal: 16,\r\n     paddingVertical: 12,\r\n-    backgroundColor: \"#fff\",\r\n     borderBottomWidth: 1,\r\n     borderColor: \"#eee\",\r\n   },\r\n   brand: {\r\n"
                },
                {
                    "date": 1752826202753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,8 +123,10 @@\n \r\n const styles = StyleSheet.create({\r\n   safeArea: {\r\n     backgroundColor: \"#fff\",\r\n+    position: \"relative\", // assure que le Navbar est bien positionné par rapport à l’écran\r\n+    zIndex: 10, // donne une couche au navbar\r\n   },\r\n   navbar: {\r\n     flexDirection: \"row\",\r\n     justifyContent: \"space-between\",\r\n@@ -132,8 +134,9 @@\n     paddingHorizontal: 16,\r\n     paddingVertical: 12,\r\n     borderBottomWidth: 1,\r\n     borderColor: \"#eee\",\r\n+    backgroundColor: \"#fff\",\r\n   },\r\n   brand: {\r\n     fontSize: 20,\r\n     fontWeight: \"bold\",\r\n@@ -149,9 +152,10 @@\n     bottom: 0,\r\n     left: 0,\r\n     right: 0,\r\n     backgroundColor: \"#fff\",\r\n-    zIndex: 100,\r\n+    zIndex: 999, // très haut pour passer devant tout\r\n+    elevation: 999, // pour Android\r\n   },\r\n   menuContainer: {\r\n     paddingTop: 60,\r\n     paddingHorizontal: 20,\r\n"
                },
                {
                    "date": 1752826855754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,132 +1,42 @@\n-import { supabase } from \"@/src/integrations/supabase/client\";\r\n import { useRouter } from \"expo-router\";\r\n-import React, { useState } from \"react\";\r\n+import React from \"react\";\r\n import {\r\n-  Alert,\r\n-  ScrollView,\r\n+  SafeAreaView,\r\n   StyleSheet,\r\n   Text,\r\n   TouchableOpacity,\r\n   View,\r\n } from \"react-native\";\r\n-import { SafeAreaView } from \"react-native-safe-area-context\";\r\n \r\n interface NavbarProps {\r\n   session: any;\r\n+  onToggleMenu: () => void; // ✅ ajouté\r\n }\r\n \r\n-const Navbar: React.FC<NavbarProps> = ({ session }) => {\r\n+const Navbar: React.FC<NavbarProps> = ({ session, onToggleMenu }) => {\r\n   const router = useRouter();\r\n-  const [menuOpen, setMenuOpen] = useState(false);\r\n \r\n-  const handleLogout = async () => {\r\n-    try {\r\n-      const { error } = await supabase.auth.signOut();\r\n-      if (error) {\r\n-        Alert.alert(\"Erreur\", error.message);\r\n-        return;\r\n-      }\r\n-      Alert.alert(\"Déconnexion réussie\");\r\n-      router.push(\"/(tabs)/Login\");\r\n-      setMenuOpen(false);\r\n-    } catch (error) {\r\n-      console.error(\"Logout error:\", error);\r\n-      Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue\");\r\n-    }\r\n-  };\r\n-\r\n-  const menuItems = [\r\n-    { label: \"Accueil\", path: \"/(tabs)\" as const },\r\n-    { label: \"Domiciliation\", path: \"/(tabs)/Domiciliation\" as const },\r\n-    { label: \"Services Admin\", path: \"/(tabs)/ServicesAdmin\" as const },\r\n-    { label: \"Communication\", path: \"/(tabs)/Communication\" as const },\r\n-    { label: \"Contact\", path: \"/(tabs)/Contact\" as const },\r\n-  ];\r\n-\r\n   return (\r\n     <SafeAreaView style={styles.safeArea}>\r\n       <View style={styles.navbar}>\r\n-        <TouchableOpacity onPress={() => router.push(\"/(tabs)\")}>\r\n+        <TouchableOpacity onPress={() => router.push(\"/(tabs)\" as any)}>\r\n           <Text style={styles.brand}>Lys&Co</Text>\r\n         </TouchableOpacity>\r\n \r\n-        <TouchableOpacity onPress={() => setMenuOpen(true)}>\r\n+        <TouchableOpacity onPress={onToggleMenu}>\r\n           <Text style={styles.hamburger}>☰</Text>\r\n         </TouchableOpacity>\r\n       </View>\r\n-\r\n-      {menuOpen && (\r\n-        <View style={styles.overlay}>\r\n-          <ScrollView contentContainerStyle={styles.menuContainer}>\r\n-            <TouchableOpacity\r\n-              style={styles.closeButton}\r\n-              onPress={() => setMenuOpen(false)}\r\n-            >\r\n-              <Text style={styles.closeButtonText}>✕</Text>\r\n-            </TouchableOpacity>\r\n-\r\n-            {menuItems.map((item, index) => (\r\n-              <TouchableOpacity\r\n-                key={index}\r\n-                style={styles.menuItem}\r\n-                onPress={() => {\r\n-                  router.push(item.path as any);\r\n-                  setMenuOpen(false);\r\n-                }}\r\n-              >\r\n-                <Text style={styles.menuItemText}>{item.label}</Text>\r\n-              </TouchableOpacity>\r\n-            ))}\r\n-\r\n-            <View style={styles.actions}>\r\n-              {session ? (\r\n-                <>\r\n-                  <TouchableOpacity\r\n-                    style={[styles.button, styles.outlineButton]}\r\n-                    onPress={() => {\r\n-                      router.push(\"/(tabs)/Dashboard\");\r\n-                      setMenuOpen(false);\r\n-                    }}\r\n-                  >\r\n-                    <Text style={[styles.buttonText, styles.outlineButtonText]}>\r\n-                      Dashboard\r\n-                    </Text>\r\n-                  </TouchableOpacity>\r\n-\r\n-                  <TouchableOpacity\r\n-                    style={styles.button}\r\n-                    onPress={handleLogout}\r\n-                  >\r\n-                    <Text style={styles.buttonText}>Déconnexion</Text>\r\n-                  </TouchableOpacity>\r\n-                </>\r\n-              ) : (\r\n-                <TouchableOpacity\r\n-                  style={[styles.button, styles.outlineButton]}\r\n-                  onPress={() => {\r\n-                    router.push(\"/(tabs)/Login\");\r\n-                    setMenuOpen(false);\r\n-                  }}\r\n-                >\r\n-                  <Text style={[styles.buttonText, styles.outlineButtonText]}>\r\n-                    Connexion\r\n-                  </Text>\r\n-                </TouchableOpacity>\r\n-              )}\r\n-            </View>\r\n-          </ScrollView>\r\n-        </View>\r\n-      )}\r\n     </SafeAreaView>\r\n   );\r\n };\r\n \r\n const styles = StyleSheet.create({\r\n   safeArea: {\r\n     backgroundColor: \"#fff\",\r\n-    position: \"relative\", // assure que le Navbar est bien positionné par rapport à l’écran\r\n-    zIndex: 10, // donne une couche au navbar\r\n+    position: \"relative\",\r\n+    zIndex: 10,\r\n   },\r\n   navbar: {\r\n     flexDirection: \"row\",\r\n     justifyContent: \"space-between\",\r\n@@ -145,62 +55,7 @@\n   hamburger: {\r\n     fontSize: 28,\r\n     color: \"#06b6d4\",\r\n   },\r\n-  overlay: {\r\n-    position: \"absolute\",\r\n-    top: 0,\r\n-    bottom: 0,\r\n-    left: 0,\r\n-    right: 0,\r\n-    backgroundColor: \"#fff\",\r\n-    zIndex: 999, // très haut pour passer devant tout\r\n-    elevation: 999, // pour Android\r\n-  },\r\n-  menuContainer: {\r\n-    paddingTop: 60,\r\n-    paddingHorizontal: 20,\r\n-  },\r\n-  closeButton: {\r\n-    position: \"absolute\",\r\n-    top: 20,\r\n-    right: 20,\r\n-    padding: 10,\r\n-  },\r\n-  closeButtonText: {\r\n-    fontSize: 28,\r\n-    color: \"#333\",\r\n-  },\r\n-  menuItem: {\r\n-    paddingVertical: 12,\r\n-    borderBottomWidth: 1,\r\n-    borderColor: \"#eee\",\r\n-  },\r\n-  menuItemText: {\r\n-    fontSize: 18,\r\n-    color: \"#333\",\r\n-  },\r\n-  actions: {\r\n-    marginTop: 30,\r\n-  },\r\n-  button: {\r\n-    paddingVertical: 12,\r\n-    alignItems: \"center\",\r\n-    borderRadius: 6,\r\n-    backgroundColor: \"#06b6d4\",\r\n-    marginBottom: 12,\r\n-  },\r\n-  buttonText: {\r\n-    color: \"#fff\",\r\n-    fontWeight: \"bold\",\r\n-  },\r\n-  outlineButton: {\r\n-    backgroundColor: \"#fff\",\r\n-    borderWidth: 1,\r\n-    borderColor: \"#06b6d4\",\r\n-  },\r\n-  outlineButtonText: {\r\n-    color: \"#06b6d4\",\r\n-  },\r\n });\r\n \r\n export default Navbar;\r\n"
                },
                {
                    "date": 1752827538701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import { LinearGradient } from \"expo-linear-gradient\";\r\n import { useRouter } from \"expo-router\";\r\n import React from \"react\";\r\n import {\r\n   SafeAreaView,\r\n@@ -19,9 +20,16 @@\n   return (\r\n     <SafeAreaView style={styles.safeArea}>\r\n       <View style={styles.navbar}>\r\n         <TouchableOpacity onPress={() => router.push(\"/(tabs)\" as any)}>\r\n-          <Text style={styles.brand}>Lys&Co</Text>\r\n+          <LinearGradient\r\n+            colors={[\"rgba(92,185,188,0.9)\", \"rgba(249,66,158,0.9)\"]}\r\n+            start={{ x: 0, y: 0 }}\r\n+            end={{ x: 1, y: 0 }}\r\n+            style={styles.brandGradient}\r\n+          >\r\n+            <Text style={styles.brand}>Lys&Co</Text>\r\n+          </LinearGradient>\r\n         </TouchableOpacity>\r\n \r\n         <TouchableOpacity onPress={onToggleMenu}>\r\n           <Text style={styles.hamburger}>☰</Text>\r\n@@ -55,7 +63,14 @@\n   hamburger: {\r\n     fontSize: 28,\r\n     color: \"#06b6d4\",\r\n   },\r\n+  brandGradient: {\r\n+    borderRadius: 8,\r\n+    paddingHorizontal: 14,\r\n+    paddingVertical: 6,\r\n+    alignItems: \"center\",\r\n+    justifyContent: \"center\",\r\n+  },\r\n });\r\n \r\n export default Navbar;\r\n"
                },
                {
                    "date": 1752827584026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,11 +64,8 @@\n     fontSize: 28,\r\n     color: \"#06b6d4\",\r\n   },\r\n   brandGradient: {\r\n-    borderRadius: 8,\r\n-    paddingHorizontal: 14,\r\n-    paddingVertical: 6,\r\n     alignItems: \"center\",\r\n     justifyContent: \"center\",\r\n   },\r\n });\r\n"
                },
                {
                    "date": 1752827644706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+import { LinearGradient } from \"expo-linear-gradient\";\r\n+import { useRouter } from \"expo-router\";\r\n+import React from \"react\";\r\n+import {\r\n+  SafeAreaView,\r\n+  StyleSheet,\r\n+  Text,\r\n+  TouchableOpacity,\r\n+  View,\r\n+} from \"react-native\";\r\n+\r\n+interface NavbarProps {\r\n+  session: any;\r\n+  onToggleMenu: () => void; // ✅ ajouté\r\n+}\r\n+\r\n+const Navbar: React.FC<NavbarProps> = ({ session, onToggleMenu }) => {\r\n+  const router = useRouter();\r\n+\r\n+  return (\r\n+    <SafeAreaView style={styles.safeArea}>\r\n+      <View style={styles.navbar}>\r\n+        <TouchableOpacity onPress={() => router.push(\"/(tabs)\" as any)}>\r\n+          <LinearGradient\r\n+            colors={[\"rgba(92,185,188,0.9)\", \"rgba(249,66,158,0.9)\"]}\r\n+            start={{ x: 0, y: 0 }}\r\n+            end={{ x: 1, y: 0 }}\r\n+          >\r\n+            <Text style={styles.brand}>Lys&Co</Text>\r\n+          </LinearGradient>\r\n+        </TouchableOpacity>\r\n+\r\n+        <TouchableOpacity onPress={onToggleMenu}>\r\n+          <Text style={styles.hamburger}>☰</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n+    </SafeAreaView>\r\n+  );\r\n+};\r\n+\r\n+const styles = StyleSheet.create({\r\n+  safeArea: {\r\n+    backgroundColor: \"#fff\",\r\n+    position: \"relative\",\r\n+    zIndex: 10,\r\n+  },\r\n+  navbar: {\r\n+    flexDirection: \"row\",\r\n+    justifyContent: \"space-between\",\r\n+    alignItems: \"center\",\r\n+    paddingHorizontal: 16,\r\n+    paddingVertical: 12,\r\n+    borderBottomWidth: 1,\r\n+    borderColor: \"#eee\",\r\n+    backgroundColor: \"#fff\",\r\n+  },\r\n+  brand: {\r\n+    fontSize: 20,\r\n+    fontWeight: \"bold\",\r\n+    color: \"#06b6d4\",\r\n+  },\r\n+  hamburger: {\r\n+    fontSize: 28,\r\n+    color: \"#06b6d4\",\r\n+  },\r\n+});\r\n+\r\n+export default Navbar;\r\n"
                },
                {
                    "date": 1752827760238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import MaskedView from \"@react-native-masked-view/masked-view\";\r\n import { LinearGradient } from \"expo-linear-gradient\";\r\n import { useRouter } from \"expo-router\";\r\n import React from \"react\";\r\n import {\r\n@@ -10,9 +11,9 @@\n } from \"react-native\";\r\n \r\n interface NavbarProps {\r\n   session: any;\r\n-  onToggleMenu: () => void; // ✅ ajouté\r\n+  onToggleMenu: () => void;\r\n }\r\n \r\n const Navbar: React.FC<NavbarProps> = ({ session, onToggleMenu }) => {\r\n   const router = useRouter();\r\n@@ -20,15 +21,17 @@\n   return (\r\n     <SafeAreaView style={styles.safeArea}>\r\n       <View style={styles.navbar}>\r\n         <TouchableOpacity onPress={() => router.push(\"/(tabs)\" as any)}>\r\n-          <LinearGradient\r\n-            colors={[\"rgba(92,185,188,0.9)\", \"rgba(249,66,158,0.9)\"]}\r\n-            start={{ x: 0, y: 0 }}\r\n-            end={{ x: 1, y: 0 }}\r\n-          >\r\n-            <Text style={styles.brand}>Lys&Co</Text>\r\n-          </LinearGradient>\r\n+          <MaskedView maskElement={<Text style={styles.brand}>Lys&Co</Text>}>\r\n+            <LinearGradient\r\n+              colors={[\"#06b6d4\", \"#ec4899\"]} // turquoise → pink\r\n+              start={{ x: 0, y: 0 }}\r\n+              end={{ x: 1, y: 0 }}\r\n+            >\r\n+              <Text style={[styles.brand, { opacity: 0 }]}>Lys&Co</Text>\r\n+            </LinearGradient>\r\n+          </MaskedView>\r\n         </TouchableOpacity>\r\n \r\n         <TouchableOpacity onPress={onToggleMenu}>\r\n           <Text style={styles.hamburger}>☰</Text>\r\n@@ -56,86 +59,13 @@\n   },\r\n   brand: {\r\n     fontSize: 20,\r\n     fontWeight: \"bold\",\r\n-    color: \"#06b6d4\",\r\n+    color: \"#000\", // important : ne sera pas visible, sert de masque\r\n   },\r\n   hamburger: {\r\n     fontSize: 28,\r\n     color: \"#06b6d4\",\r\n   },\r\n });\r\n \r\n export default Navbar;\r\n-import { LinearGradient } from \"expo-linear-gradient\";\r\n-import { useRouter } from \"expo-router\";\r\n-import React from \"react\";\r\n-import {\r\n-  SafeAreaView,\r\n-  StyleSheet,\r\n-  Text,\r\n-  TouchableOpacity,\r\n-  View,\r\n-} from \"react-native\";\r\n-\r\n-interface NavbarProps {\r\n-  session: any;\r\n-  onToggleMenu: () => void; // ✅ ajouté\r\n-}\r\n-\r\n-const Navbar: React.FC<NavbarProps> = ({ session, onToggleMenu }) => {\r\n-  const router = useRouter();\r\n-\r\n-  return (\r\n-    <SafeAreaView style={styles.safeArea}>\r\n-      <View style={styles.navbar}>\r\n-        <TouchableOpacity onPress={() => router.push(\"/(tabs)\" as any)}>\r\n-          <LinearGradient\r\n-            colors={[\"rgba(92,185,188,0.9)\", \"rgba(249,66,158,0.9)\"]}\r\n-            start={{ x: 0, y: 0 }}\r\n-            end={{ x: 1, y: 0 }}\r\n-            style={styles.brandGradient}\r\n-          >\r\n-            <Text style={styles.brand}>Lys&Co</Text>\r\n-          </LinearGradient>\r\n-        </TouchableOpacity>\r\n-\r\n-        <TouchableOpacity onPress={onToggleMenu}>\r\n-          <Text style={styles.hamburger}>☰</Text>\r\n-        </TouchableOpacity>\r\n-      </View>\r\n-    </SafeAreaView>\r\n-  );\r\n-};\r\n-\r\n-const styles = StyleSheet.create({\r\n-  safeArea: {\r\n-    backgroundColor: \"#fff\",\r\n-    position: \"relative\",\r\n-    zIndex: 10,\r\n-  },\r\n-  navbar: {\r\n-    flexDirection: \"row\",\r\n-    justifyContent: \"space-between\",\r\n-    alignItems: \"center\",\r\n-    paddingHorizontal: 16,\r\n-    paddingVertical: 12,\r\n-    borderBottomWidth: 1,\r\n-    borderColor: \"#eee\",\r\n-    backgroundColor: \"#fff\",\r\n-  },\r\n-  brand: {\r\n-    fontSize: 20,\r\n-    fontWeight: \"bold\",\r\n-    color: \"#06b6d4\",\r\n-  },\r\n-  hamburger: {\r\n-    fontSize: 28,\r\n-    color: \"#06b6d4\",\r\n-  },\r\n-  brandGradient: {\r\n-    alignItems: \"center\",\r\n-    justifyContent: \"center\",\r\n-  },\r\n-});\r\n-\r\n-export default Navbar;\r\n"
                },
                {
                    "date": 1752827873565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,74 @@\n+import MaskedView from \"@react-native-masked-view/masked-view\";\r\n+import { LinearGradient } from \"expo-linear-gradient\";\r\n+import { useRouter } from \"expo-router\";\r\n+import React from \"react\";\r\n+import {\r\n+  SafeAreaView,\r\n+  StyleSheet,\r\n+  Text,\r\n+  TouchableOpacity,\r\n+  View,\r\n+} from \"react-native\";\r\n+\r\n+interface NavbarProps {\r\n+  session: any;\r\n+  onToggleMenu: () => void;\r\n+}\r\n+\r\n+const Navbar: React.FC<NavbarProps> = ({ session, onToggleMenu }) => {\r\n+  const router = useRouter();\r\n+\r\n+  return (\r\n+    <SafeAreaView style={styles.safeArea}>\r\n+      <View style={styles.navbar}>\r\n+        <TouchableOpacity onPress={() => router.push(\"/(tabs)\" as any)}>\r\n+          <MaskedView\r\n+            maskElement={\r\n+              <Text style={styles.brand}>Lys&Co</Text> // sert de forme au dégradé\r\n+            }\r\n+          >\r\n+            <LinearGradient\r\n+              colors={[\"#06b6d4\", \"#ec4899\"]} // turquoise → rose\r\n+              start={{ x: 0, y: 0 }}\r\n+              end={{ x: 1, y: 0 }}\r\n+              style={{ flex: 1 }}\r\n+            />\r\n+          </MaskedView>\r\n+        </TouchableOpacity>\r\n+\r\n+        <TouchableOpacity onPress={onToggleMenu}>\r\n+          <Text style={styles.hamburger}>☰</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n+    </SafeAreaView>\r\n+  );\r\n+};\r\n+\r\n+const styles = StyleSheet.create({\r\n+  safeArea: {\r\n+    backgroundColor: \"#fff\",\r\n+    position: \"relative\",\r\n+    zIndex: 10,\r\n+  },\r\n+  navbar: {\r\n+    flexDirection: \"row\",\r\n+    justifyContent: \"space-between\",\r\n+    alignItems: \"center\",\r\n+    paddingHorizontal: 16,\r\n+    paddingVertical: 12,\r\n+    borderBottomWidth: 1,\r\n+    borderColor: \"#eee\",\r\n+    backgroundColor: \"#fff\",\r\n+  },\r\n+  brand: {\r\n+    fontSize: 20,\r\n+    fontWeight: \"bold\",\r\n+    color: \"black\", // couleur utilisée uniquement pour le masque\r\n+  },\r\n+  hamburger: {\r\n+    fontSize: 28,\r\n+    color: \"#06b6d4\",\r\n+  },\r\n+});\r\n+\r\n+export default Navbar;\r\n"
                },
                {
                    "date": 1752828239936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,75 +71,4 @@\n   },\r\n });\r\n \r\n export default Navbar;\r\n-import MaskedView from \"@react-native-masked-view/masked-view\";\r\n-import { LinearGradient } from \"expo-linear-gradient\";\r\n-import { useRouter } from \"expo-router\";\r\n-import React from \"react\";\r\n-import {\r\n-  SafeAreaView,\r\n-  StyleSheet,\r\n-  Text,\r\n-  TouchableOpacity,\r\n-  View,\r\n-} from \"react-native\";\r\n-\r\n-interface NavbarProps {\r\n-  session: any;\r\n-  onToggleMenu: () => void;\r\n-}\r\n-\r\n-const Navbar: React.FC<NavbarProps> = ({ session, onToggleMenu }) => {\r\n-  const router = useRouter();\r\n-\r\n-  return (\r\n-    <SafeAreaView style={styles.safeArea}>\r\n-      <View style={styles.navbar}>\r\n-        <TouchableOpacity onPress={() => router.push(\"/(tabs)\" as any)}>\r\n-          <MaskedView maskElement={<Text style={styles.brand}>Lys&Co</Text>}>\r\n-            <LinearGradient\r\n-              colors={[\"#06b6d4\", \"#ec4899\"]} // turquoise → pink\r\n-              start={{ x: 0, y: 0 }}\r\n-              end={{ x: 1, y: 0 }}\r\n-            >\r\n-              <Text style={[styles.brand, { opacity: 0 }]}>Lys&Co</Text>\r\n-            </LinearGradient>\r\n-          </MaskedView>\r\n-        </TouchableOpacity>\r\n-\r\n-        <TouchableOpacity onPress={onToggleMenu}>\r\n-          <Text style={styles.hamburger}>☰</Text>\r\n-        </TouchableOpacity>\r\n-      </View>\r\n-    </SafeAreaView>\r\n-  );\r\n-};\r\n-\r\n-const styles = StyleSheet.create({\r\n-  safeArea: {\r\n-    backgroundColor: \"#fff\",\r\n-    position: \"relative\",\r\n-    zIndex: 10,\r\n-  },\r\n-  navbar: {\r\n-    flexDirection: \"row\",\r\n-    justifyContent: \"space-between\",\r\n-    alignItems: \"center\",\r\n-    paddingHorizontal: 16,\r\n-    paddingVertical: 12,\r\n-    borderBottomWidth: 1,\r\n-    borderColor: \"#eee\",\r\n-    backgroundColor: \"#fff\",\r\n-  },\r\n-  brand: {\r\n-    fontSize: 20,\r\n-    fontWeight: \"bold\",\r\n-    color: \"#000\", // important : ne sera pas visible, sert de masque\r\n-  },\r\n-  hamburger: {\r\n-    fontSize: 28,\r\n-    color: \"#06b6d4\",\r\n-  },\r\n-});\r\n-\r\n-export default Navbar;\r\n"
                },
                {
                    "date": 1752828331047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,20 +21,18 @@\n   return (\r\n     <SafeAreaView style={styles.safeArea}>\r\n       <View style={styles.navbar}>\r\n         <TouchableOpacity onPress={() => router.push(\"/(tabs)\" as any)}>\r\n-          <MaskedView\r\n-            maskElement={\r\n-              <Text style={styles.brand}>Lys&Co</Text> // sert de forme au dégradé\r\n-            }\r\n-          >\r\n-            <LinearGradient\r\n-              colors={[\"#06b6d4\", \"#ec4899\"]} // turquoise → rose\r\n-              start={{ x: 0, y: 0 }}\r\n-              end={{ x: 1, y: 0 }}\r\n-              style={{ flex: 1 }}\r\n-            />\r\n-          </MaskedView>\r\n+          <View style={{ alignSelf: \"flex-start\" }}>\r\n+            <MaskedView maskElement={<Text style={styles.brand}>Lys&Co</Text>}>\r\n+              <LinearGradient\r\n+                colors={[\"#06b6d4\", \"#ec4899\"]}\r\n+                start={{ x: 0, y: 0 }}\r\n+                end={{ x: 1, y: 0 }}\r\n+                style={styles.gradientText}\r\n+              />\r\n+            </MaskedView>\r\n+          </View>\r\n         </TouchableOpacity>\r\n \r\n         <TouchableOpacity onPress={onToggleMenu}>\r\n           <Text style={styles.hamburger}>☰</Text>\r\n"
                },
                {
                    "date": 1752828345023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,12 +58,19 @@\n     borderColor: \"#eee\",\r\n     backgroundColor: \"#fff\",\r\n   },\r\n   brand: {\r\n-    fontSize: 20,\r\n+    fontSize: 24,\r\n     fontWeight: \"bold\",\r\n-    color: \"black\", // couleur utilisée uniquement pour le masque\r\n+    color: \"black\",\r\n   },\r\n+  gradientText: {\r\n+    width: undefined, // 🔑 important : laisse le contenu s’ajuster\r\n+    height: undefined, // 🔑 important\r\n+    paddingHorizontal: 0, // pas de padding fantôme\r\n+    paddingVertical: 0,\r\n+  },\r\n+\r\n   hamburger: {\r\n     fontSize: 28,\r\n     color: \"#06b6d4\",\r\n   },\r\n"
                },
                {
                    "date": 1752828389088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,10 +63,10 @@\n     fontWeight: \"bold\",\r\n     color: \"black\",\r\n   },\r\n   gradientText: {\r\n-    width: undefined, // 🔑 important : laisse le contenu s’ajuster\r\n-    height: undefined, // 🔑 important\r\n+    width: \"100%\",\r\n+    height: \"100%\",\r\n     paddingHorizontal: 0, // pas de padding fantôme\r\n     paddingVertical: 0,\r\n   },\r\n \r\n"
                },
                {
                    "date": 1752828599180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,4 @@\n-import MaskedView from \"@react-native-masked-view/masked-view\";\r\n-import { LinearGradient } from \"expo-linear-gradient\";\r\n import { useRouter } from \"expo-router\";\r\n import React from \"react\";\r\n import {\r\n   SafeAreaView,\r\n@@ -11,9 +9,9 @@\n } from \"react-native\";\r\n \r\n interface NavbarProps {\r\n   session: any;\r\n-  onToggleMenu: () => void;\r\n+  onToggleMenu: () => void; // ✅ ajouté\r\n }\r\n \r\n const Navbar: React.FC<NavbarProps> = ({ session, onToggleMenu }) => {\r\n   const router = useRouter();\r\n@@ -21,18 +19,9 @@\n   return (\r\n     <SafeAreaView style={styles.safeArea}>\r\n       <View style={styles.navbar}>\r\n         <TouchableOpacity onPress={() => router.push(\"/(tabs)\" as any)}>\r\n-          <View style={{ alignSelf: \"flex-start\" }}>\r\n-            <MaskedView maskElement={<Text style={styles.brand}>Lys&Co</Text>}>\r\n-              <LinearGradient\r\n-                colors={[\"#06b6d4\", \"#ec4899\"]}\r\n-                start={{ x: 0, y: 0 }}\r\n-                end={{ x: 1, y: 0 }}\r\n-                style={styles.gradientText}\r\n-              />\r\n-            </MaskedView>\r\n-          </View>\r\n+          <Text style={styles.brand}>Lys&Co</Text>\r\n         </TouchableOpacity>\r\n \r\n         <TouchableOpacity onPress={onToggleMenu}>\r\n           <Text style={styles.hamburger}>☰</Text>\r\n@@ -58,19 +47,12 @@\n     borderColor: \"#eee\",\r\n     backgroundColor: \"#fff\",\r\n   },\r\n   brand: {\r\n-    fontSize: 24,\r\n+    fontSize: 20,\r\n     fontWeight: \"bold\",\r\n-    color: \"black\",\r\n+    color: \"#06b6d4\",\r\n   },\r\n-  gradientText: {\r\n-    width: \"100%\",\r\n-    height: \"100%\",\r\n-    paddingHorizontal: 0, // pas de padding fantôme\r\n-    paddingVertical: 0,\r\n-  },\r\n-\r\n   hamburger: {\r\n     fontSize: 28,\r\n     color: \"#06b6d4\",\r\n   },\r\n"
                },
                {
                    "date": 1752828614969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     borderColor: \"#eee\",\r\n     backgroundColor: \"#fff\",\r\n   },\r\n   brand: {\r\n-    fontSize: 20,\r\n+    fontSize: 30,\r\n     fontWeight: \"bold\",\r\n     color: \"#06b6d4\",\r\n   },\r\n   hamburger: {\r\n"
                },
                {
                    "date": 1752946298762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,13 +49,13 @@\n   },\r\n   brand: {\r\n     fontSize: 30,\r\n     fontWeight: \"bold\",\r\n-    color: \"#06b6d4\",\r\n+    color: \"#5cb9bc\",\r\n   },\r\n   hamburger: {\r\n     fontSize: 28,\r\n-    color: \"#06b6d4\",\r\n+    color: \"#5cb9bc\",\r\n   },\r\n });\r\n \r\n export default Navbar;\r\n"
                },
                {
                    "date": 1753017346885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n   TouchableOpacity,\r\n   View,\r\n } from \"react-native\";\r\n \r\n+\r\n interface NavbarProps {\r\n   session: any;\r\n   onToggleMenu: () => void; // ✅ ajouté\r\n }\r\n"
                },
                {
                    "date": 1753017416563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { useRouter } from \"expo-router\";\r\n+import { useSession } from '@supabase/auth-helpers-react'; // ✅ ajoute\r\n import React from \"react\";\r\n import {\r\n   SafeAreaView,\r\n   StyleSheet,\r\n@@ -7,15 +7,11 @@\n   TouchableOpacity,\r\n   View,\r\n } from \"react-native\";\r\n \r\n-interface NavbarProps {\r\n-  session: any;\r\n-  onToggleMenu: () => void; // ✅ ajouté\r\n-}\r\n-\r\n-const Navbar: React.FC<NavbarProps> = ({ session, onToggleMenu }) => {\r\n+const Navbar: React.FC<NavbarProps> = ({ onToggleMenu }) => {  // ✅ retire session des props\r\n   const router = useRouter();\r\n+  const session = useSession();  // ✅ ajoute ici\r\n \r\n   return (\r\n     <SafeAreaView style={styles.safeArea}>\r\n       <View style={styles.navbar}>\r\n@@ -30,8 +26,9 @@\n     </SafeAreaView>\r\n   );\r\n };\r\n \r\n+\r\n const styles = StyleSheet.create({\r\n   safeArea: {\r\n     backgroundColor: \"#fff\",\r\n     position: \"relative\",\r\n"
                },
                {
                    "date": 1753017437964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,14 @@\n   Text,\r\n   TouchableOpacity,\r\n   View,\r\n } from \"react-native\";\r\n+import { useRouter } from \"expo-router\"; // ✅ retire session des props\r\n \r\n+interface NavbarProps {\r\n+  onToggleMenu: () => void;\r\n+}\r\n+\r\n const Navbar: React.FC<NavbarProps> = ({ onToggleMenu }) => {\r\n   // ✅ retire session des props\r\n   const router = useRouter();\r\n   const session = useSession(); // ✅ ajoute ici\r\n"
                }
            ],
            "date": 1752746169379,
            "name": "Commit-0",
            "content": "import { supabase } from \"@/integrations/supabase/client\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport React from \"react\";\r\nimport {\r\n  Alert,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\n\r\ninterface NavbarProps {\r\n  onClose: () => void;\r\n  session: any; // à remplacer par le type exact si dispo\r\n}\r\n\r\nconst Navbar: React.FC<NavbarProps> = ({ onClose, session }) => {\r\n  const navigation = useNavigation();\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const { error } = await supabase.auth.signOut();\r\n      if (error) {\r\n        Alert.alert(\"Erreur\", error.message);\r\n        return;\r\n      }\r\n      Alert.alert(\"Déconnexion réussie\");\r\n      navigation.navigate(\"Login\" as never);\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n      Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.overlay}>\r\n      <ScrollView contentContainerStyle={styles.container}>\r\n        {/* Bouton de fermeture */}\r\n        <TouchableOpacity style={styles.closeButton} onPress={onClose}>\r\n          <Text style={styles.closeButtonText}>✕</Text>\r\n        </TouchableOpacity>\r\n\r\n        <MenuItem label=\"Accueil\" screen=\"Home\" onPress={onClose} />\r\n        <MenuItem\r\n          label=\"Domiciliation\"\r\n          screen=\"Domiciliation\"\r\n          onPress={onClose}\r\n        />\r\n        <MenuItem\r\n          label=\"Services Admin\"\r\n          screen=\"ServicesAdmin\"\r\n          onPress={onClose}\r\n        />\r\n        <MenuItem\r\n          label=\"Communication\"\r\n          screen=\"Communication\"\r\n          onPress={onClose}\r\n        />\r\n        <MenuItem label=\"Contact\" screen=\"Contact\" onPress={onClose} />\r\n\r\n        <View style={styles.actions}>\r\n          {session ? (\r\n            <>\r\n              <TouchableOpacity\r\n                style={[styles.button, styles.outlineButton]}\r\n                onPress={() => {\r\n                  navigation.navigate(\"Dashboard\" as never);\r\n                  onClose();\r\n                }}\r\n              >\r\n                <Text style={[styles.buttonText, styles.outlineButtonText]}>\r\n                  Dashboard\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity style={styles.button} onPress={handleLogout}>\r\n                <Text style={styles.buttonText}>Déconnexion</Text>\r\n              </TouchableOpacity>\r\n            </>\r\n          ) : (\r\n            <TouchableOpacity\r\n              style={[styles.button, styles.outlineButton]}\r\n              onPress={() => {\r\n                navigation.navigate(\"Login\" as never);\r\n                onClose();\r\n              }}\r\n            >\r\n              <Text style={[styles.buttonText, styles.outlineButtonText]}>\r\n                Connexion\r\n              </Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst MenuItem = ({\r\n  label,\r\n  screen,\r\n  onPress,\r\n}: {\r\n  label: string;\r\n  screen: string;\r\n  onPress: () => void;\r\n}) => {\r\n  const navigation = useNavigation();\r\n  return (\r\n    <TouchableOpacity\r\n      style={styles.menuItem}\r\n      onPress={() => {\r\n        navigation.navigate(screen as never);\r\n        onPress();\r\n      }}\r\n    >\r\n      <Text style={styles.menuItemText}>{label}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    backgroundColor: \"#fff\",\r\n    zIndex: 50,\r\n  },\r\n  container: {\r\n    paddingTop: 60,\r\n    paddingHorizontal: 20,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    top: 20,\r\n    right: 20,\r\n    padding: 10,\r\n  },\r\n  closeButtonText: {\r\n    fontSize: 28,\r\n    color: \"#333\",\r\n  },\r\n  menuItem: {\r\n    paddingVertical: 12,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#eee\",\r\n  },\r\n  menuItemText: {\r\n    fontSize: 18,\r\n    color: \"#333\",\r\n  },\r\n  actions: {\r\n    marginTop: 30,\r\n  },\r\n  button: {\r\n    paddingVertical: 12,\r\n    alignItems: \"center\",\r\n    borderRadius: 6,\r\n    backgroundColor: \"#16a34a\", // vert Lys&Co (ex: turquoise)\r\n    marginBottom: 12,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  outlineButton: {\r\n    backgroundColor: \"#fff\",\r\n    borderWidth: 1,\r\n    borderColor: \"#16a34a\",\r\n  },\r\n  outlineButtonText: {\r\n    color: \"#16a34a\",\r\n  },\r\n});\r\n\r\nexport default Navbar;\r\n"
        }
    ]
}