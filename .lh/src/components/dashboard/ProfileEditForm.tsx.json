{
    "sourceFile": "src/components/dashboard/ProfileEditForm.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752758913390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752759479760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,15 @@\n-// src/components/dashboard/ProfileEditForm.tsx\r\n-import { Button } from \"@/src/components/ui/button\";\r\n-import {\r\n-  Card,\r\n-  CardContent,\r\n-  CardHeader,\r\n-  CardTitle,\r\n-} from \"@/src/components/ui/card\";\r\n-import { Input } from \"@/src/components/ui/input\";\r\n-import { UserProfile } from \"@/src/hooks/useUserData\";\r\n import React, { useState } from \"react\";\r\n+import { Button, StyleSheet, Text, TextInput, View } from \"react-native\";\r\n \r\n interface ProfileEditFormProps {\r\n-  profile: UserProfile | null;\r\n-  onUpdate: (updatedProfile: Partial<UserProfile>) => Promise<boolean>;\r\n+  profile: {\r\n+    first_name: string;\r\n+    last_name: string;\r\n+    company_name: string;\r\n+    phone: string;\r\n+  } | null;\r\n+  onUpdate: (updatedProfile: Partial<any>) => Promise<boolean>;\r\n   onCancel: () => void;\r\n }\r\n \r\n const ProfileEditForm = ({\r\n@@ -29,20 +25,17 @@\n   });\r\n \r\n   const [isSubmitting, setIsSubmitting] = useState(false);\r\n \r\n-  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n-    const { name, value } = e.target;\r\n+  const handleChange = (name: string, value: string) => {\r\n     setFormData((prev) => ({\r\n       ...prev,\r\n       [name]: value,\r\n     }));\r\n   };\r\n \r\n-  const handleSubmit = async (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n+  const handleSubmit = async () => {\r\n     setIsSubmitting(true);\r\n-\r\n     try {\r\n       const success = await onUpdate(formData);\r\n       if (success) {\r\n         onCancel();\r\n@@ -52,94 +45,66 @@\n     }\r\n   };\r\n \r\n   return (\r\n-    <Card>\r\n-      <CardHeader>\r\n-        <CardTitle>Modifier votre profil</CardTitle>\r\n-      </CardHeader>\r\n-      <CardContent>\r\n-        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n-          <div>\r\n-            <label\r\n-              htmlFor=\"first_name\"\r\n-              className=\"block text-sm font-medium text-gray-700\"\r\n-            >\r\n-              Prénom\r\n-            </label>\r\n-            <Input\r\n-              id=\"first_name\"\r\n-              name=\"first_name\"\r\n-              value={formData.first_name}\r\n-              onChange={handleChange}\r\n-              className=\"mt-1\"\r\n-            />\r\n-          </div>\r\n+    <View style={styles.card}>\r\n+      <Text style={styles.title}>Modifier votre profil</Text>\r\n \r\n-          <div>\r\n-            <label\r\n-              htmlFor=\"last_name\"\r\n-              className=\"block text-sm font-medium text-gray-700\"\r\n-            >\r\n-              Nom\r\n-            </label>\r\n-            <Input\r\n-              id=\"last_name\"\r\n-              name=\"last_name\"\r\n-              value={formData.last_name}\r\n-              onChange={handleChange}\r\n-              className=\"mt-1\"\r\n-            />\r\n-          </div>\r\n+      <Text style={styles.label}>Prénom</Text>\r\n+      <TextInput\r\n+        style={styles.input}\r\n+        value={formData.first_name}\r\n+        onChangeText={(text) => handleChange(\"first_name\", text)}\r\n+      />\r\n \r\n-          <div>\r\n-            <label\r\n-              htmlFor=\"company_name\"\r\n-              className=\"block text-sm font-medium text-gray-700\"\r\n-            >\r\n-              Nom de l'entreprise\r\n-            </label>\r\n-            <Input\r\n-              id=\"company_name\"\r\n-              name=\"company_name\"\r\n-              value={formData.company_name}\r\n-              onChange={handleChange}\r\n-              className=\"mt-1\"\r\n-            />\r\n-          </div>\r\n+      <Text style={styles.label}>Nom</Text>\r\n+      <TextInput\r\n+        style={styles.input}\r\n+        value={formData.last_name}\r\n+        onChangeText={(text) => handleChange(\"last_name\", text)}\r\n+      />\r\n \r\n-          <div>\r\n-            <label\r\n-              htmlFor=\"phone\"\r\n-              className=\"block text-sm font-medium text-gray-700\"\r\n-            >\r\n-              Téléphone\r\n-            </label>\r\n-            <Input\r\n-              id=\"phone\"\r\n-              name=\"phone\"\r\n-              value={formData.phone}\r\n-              onChange={handleChange}\r\n-              className=\"mt-1\"\r\n-            />\r\n-          </div>\r\n+      <Text style={styles.label}>Nom de l'entreprise</Text>\r\n+      <TextInput\r\n+        style={styles.input}\r\n+        value={formData.company_name}\r\n+        onChangeText={(text) => handleChange(\"company_name\", text)}\r\n+      />\r\n \r\n-          <div className=\"flex justify-end space-x-2\">\r\n-            <Button\r\n-              type=\"button\"\r\n-              variant=\"outline\"\r\n-              onClick={onCancel}\r\n-              disabled={isSubmitting}\r\n-            >\r\n-              Annuler\r\n-            </Button>\r\n-            <Button type=\"submit\" disabled={isSubmitting}>\r\n-              {isSubmitting ? \"Enregistrement...\" : \"Enregistrer\"}\r\n-            </Button>\r\n-          </div>\r\n-        </form>\r\n-      </CardContent>\r\n-    </Card>\r\n+      <Text style={styles.label}>Téléphone</Text>\r\n+      <TextInput\r\n+        style={styles.input}\r\n+        value={formData.phone}\r\n+        onChangeText={(text) => handleChange(\"phone\", text)}\r\n+      />\r\n+\r\n+      <View style={styles.buttonContainer}>\r\n+        <Button title=\"Annuler\" onPress={onCancel} disabled={isSubmitting} />\r\n+        <Button\r\n+          title={isSubmitting ? \"Enregistrement...\" : \"Enregistrer\"}\r\n+          onPress={handleSubmit}\r\n+          disabled={isSubmitting}\r\n+        />\r\n+      </View>\r\n+    </View>\r\n   );\r\n };\r\n \r\n+const styles = StyleSheet.create({\r\n+  card: { padding: 16, backgroundColor: \"#fff\", borderRadius: 8 },\r\n+  title: { fontSize: 20, fontWeight: \"bold\", marginBottom: 16 },\r\n+  label: { marginTop: 12, marginBottom: 4 },\r\n+  input: {\r\n+    borderWidth: 1,\r\n+    borderColor: \"#ddd\",\r\n+    borderRadius: 6,\r\n+    paddingHorizontal: 10,\r\n+    paddingVertical: 8,\r\n+  },\r\n+  buttonContainer: {\r\n+    flexDirection: \"row\",\r\n+    justifyContent: \"space-between\",\r\n+    marginTop: 20,\r\n+  },\r\n+});\r\n+\r\n export default ProfileEditForm;\r\n"
                }
            ],
            "date": 1752758913390,
            "name": "Commit-0",
            "content": "// src/components/dashboard/ProfileEditForm.tsx\r\nimport { Button } from \"@/src/components/ui/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/src/components/ui/card\";\r\nimport { Input } from \"@/src/components/ui/input\";\r\nimport { UserProfile } from \"@/src/hooks/useUserData\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface ProfileEditFormProps {\r\n  profile: UserProfile | null;\r\n  onUpdate: (updatedProfile: Partial<UserProfile>) => Promise<boolean>;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst ProfileEditForm = ({\r\n  profile,\r\n  onUpdate,\r\n  onCancel,\r\n}: ProfileEditFormProps) => {\r\n  const [formData, setFormData] = useState({\r\n    first_name: profile?.first_name || \"\",\r\n    last_name: profile?.last_name || \"\",\r\n    company_name: profile?.company_name || \"\",\r\n    phone: profile?.phone || \"\",\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      const success = await onUpdate(formData);\r\n      if (success) {\r\n        onCancel();\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Modifier votre profil</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label\r\n              htmlFor=\"first_name\"\r\n              className=\"block text-sm font-medium text-gray-700\"\r\n            >\r\n              Prénom\r\n            </label>\r\n            <Input\r\n              id=\"first_name\"\r\n              name=\"first_name\"\r\n              value={formData.first_name}\r\n              onChange={handleChange}\r\n              className=\"mt-1\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label\r\n              htmlFor=\"last_name\"\r\n              className=\"block text-sm font-medium text-gray-700\"\r\n            >\r\n              Nom\r\n            </label>\r\n            <Input\r\n              id=\"last_name\"\r\n              name=\"last_name\"\r\n              value={formData.last_name}\r\n              onChange={handleChange}\r\n              className=\"mt-1\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label\r\n              htmlFor=\"company_name\"\r\n              className=\"block text-sm font-medium text-gray-700\"\r\n            >\r\n              Nom de l'entreprise\r\n            </label>\r\n            <Input\r\n              id=\"company_name\"\r\n              name=\"company_name\"\r\n              value={formData.company_name}\r\n              onChange={handleChange}\r\n              className=\"mt-1\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label\r\n              htmlFor=\"phone\"\r\n              className=\"block text-sm font-medium text-gray-700\"\r\n            >\r\n              Téléphone\r\n            </label>\r\n            <Input\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handleChange}\r\n              className=\"mt-1\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-2\">\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              onClick={onCancel}\r\n              disabled={isSubmitting}\r\n            >\r\n              Annuler\r\n            </Button>\r\n            <Button type=\"submit\" disabled={isSubmitting}>\r\n              {isSubmitting ? \"Enregistrement...\" : \"Enregistrer\"}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfileEditForm;\r\n"
        }
    ]
}