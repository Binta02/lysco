{
    "sourceFile": "src/screens/Register.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1752738983016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752755333933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,10 +82,9 @@\n   };\r\n \r\n   return (\r\n     <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n-      <Navbar />\r\n-\r\n+      <Navbar session={session} />\r\n       <ScrollView\r\n         contentContainerStyle={{\r\n           flexGrow: 1,\r\n           justifyContent: \"center\",\r\n"
                },
                {
                    "date": 1752755373506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,212 @@\n+import { supabase } from \"@/integrations/supabase/client\";\r\n+import Footer from \"@/src/components/Footer\";\r\n+import Navbar from \"@/src/components/Navbar\";\r\n+import type { RootStackParamList } from \"@/src/navigation/types\";\r\n+import { useNavigation } from \"@react-navigation/native\";\r\n+import type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\n+import React, { useState } from \"react\";\r\n+import {\r\n+  Alert,\r\n+  ScrollView,\r\n+  Text,\r\n+  TextInput,\r\n+  TouchableOpacity,\r\n+  View,\r\n+} from \"react-native\";\r\n+\r\n+type NavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n+\r\n+const Register = () => {\r\n+  const navigation = useNavigation<NavigationProp>();\r\n+  const [firstName, setFirstName] = useState(\"\");\r\n+  const [lastName, setLastName] = useState(\"\");\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [passwordError, setPasswordError] = useState(false);\r\n+\r\n+  const isPasswordValid = (pwd: string) => {\r\n+    const regex =\r\n+      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|<>?,./`~]).{8,}$/;\r\n+    return regex.test(pwd);\r\n+  };\r\n+\r\n+  const handleRegister = async () => {\r\n+    if (!isPasswordValid(password)) {\r\n+      setPasswordError(true);\r\n+      Alert.alert(\r\n+        \"Mot de passe invalide\",\r\n+        \"Le mot de passe doit contenir : 1 minuscule, 1 majuscule, 1 chiffre et 1 caractère spécial.\"\r\n+      );\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const { data, error } = await supabase.auth.signUp({\r\n+        email,\r\n+        password,\r\n+        options: {\r\n+          data: {\r\n+            first_name: firstName,\r\n+            last_name: lastName,\r\n+          },\r\n+        },\r\n+      });\r\n+\r\n+      if (error) {\r\n+        if (\r\n+          error.message.includes(\"already registered\") ||\r\n+          error.message.includes(\"Email already in use\")\r\n+        ) {\r\n+          Alert.alert(\r\n+            \"Cet email est déjà associé à un compte\",\r\n+            \"Essayez de vous connecter ou de réinitialiser votre mot de passe.\"\r\n+          );\r\n+        } else {\r\n+          Alert.alert(\"Erreur\", error.message);\r\n+        }\r\n+        return;\r\n+      }\r\n+\r\n+      if (data.user) {\r\n+        Alert.alert(\r\n+          \"Inscription réussie\",\r\n+          \"Vous êtes maintenant inscrit. Bienvenue chez Lys&Co!\",\r\n+          [{ text: \"OK\", onPress: () => navigation.navigate(\"Dashboard\") }]\r\n+        );\r\n+      }\r\n+    } catch (err) {\r\n+      console.error(\"Registration error:\", err);\r\n+      Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue\");\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n+      <Navbar />\r\n+\r\n+      <ScrollView\r\n+        contentContainerStyle={{\r\n+          flexGrow: 1,\r\n+          justifyContent: \"center\",\r\n+          padding: 20,\r\n+        }}\r\n+      >\r\n+        <View style={{ backgroundColor: \"#fff\", padding: 20, borderRadius: 8 }}>\r\n+          <Text\r\n+            style={{\r\n+              fontSize: 24,\r\n+              fontWeight: \"bold\",\r\n+              textAlign: \"center\",\r\n+              marginBottom: 10,\r\n+            }}\r\n+          >\r\n+            Créer un compte\r\n+          </Text>\r\n+          <Text style={{ textAlign: \"center\", marginBottom: 20 }}>\r\n+            Inscrivez-vous pour accéder à nos services\r\n+          </Text>\r\n+\r\n+          {/* Prénom & Nom */}\r\n+          <View style={{ flexDirection: \"row\", gap: 10, marginBottom: 10 }}>\r\n+            <TextInput\r\n+              style={{ flex: 1, borderWidth: 1, padding: 10, borderRadius: 6 }}\r\n+              placeholder=\"Prénom\"\r\n+              value={firstName}\r\n+              onChangeText={setFirstName}\r\n+            />\r\n+            <TextInput\r\n+              style={{ flex: 1, borderWidth: 1, padding: 10, borderRadius: 6 }}\r\n+              placeholder=\"Nom\"\r\n+              value={lastName}\r\n+              onChangeText={setLastName}\r\n+            />\r\n+          </View>\r\n+\r\n+          {/* Email */}\r\n+          <TextInput\r\n+            style={{\r\n+              borderWidth: 1,\r\n+              padding: 10,\r\n+              borderRadius: 6,\r\n+              marginBottom: 10,\r\n+            }}\r\n+            placeholder=\"Email\"\r\n+            keyboardType=\"email-address\"\r\n+            value={email}\r\n+            onChangeText={setEmail}\r\n+          />\r\n+\r\n+          {/* Mot de passe */}\r\n+          <TextInput\r\n+            style={{\r\n+              borderWidth: 1,\r\n+              padding: 10,\r\n+              borderRadius: 6,\r\n+              marginBottom: passwordError ? 5 : 10,\r\n+              borderColor: passwordError ? \"red\" : \"#ccc\",\r\n+            }}\r\n+            placeholder=\"Mot de passe\"\r\n+            secureTextEntry={!showPassword}\r\n+            value={password}\r\n+            onChangeText={(val) => {\r\n+              setPassword(val);\r\n+              setPasswordError(!isPasswordValid(val));\r\n+            }}\r\n+          />\r\n+          {passwordError && (\r\n+            <Text style={{ color: \"red\", fontSize: 12, marginBottom: 10 }}>\r\n+              Le mot de passe doit contenir : 1 minuscule, 1 majuscule, 1\r\n+              chiffre et 1 caractère spécial.\r\n+            </Text>\r\n+          )}\r\n+\r\n+          {/* Afficher/Masquer mot de passe */}\r\n+          <TouchableOpacity\r\n+            onPress={() => setShowPassword(!showPassword)}\r\n+            style={{ alignSelf: \"flex-end\", marginBottom: 20 }}\r\n+          >\r\n+            <Text style={{ color: \"#007aff\" }}>\r\n+              {showPassword\r\n+                ? \"Masquer le mot de passe\"\r\n+                : \"Afficher le mot de passe\"}\r\n+            </Text>\r\n+          </TouchableOpacity>\r\n+\r\n+          {/* Bouton inscription */}\r\n+          <TouchableOpacity\r\n+            onPress={handleRegister}\r\n+            style={{\r\n+              backgroundColor: \"#ec407a\",\r\n+              padding: 12,\r\n+              borderRadius: 6,\r\n+              alignItems: \"center\",\r\n+              marginBottom: 20,\r\n+            }}\r\n+          >\r\n+            <Text style={{ color: \"#fff\", fontWeight: \"bold\" }}>\r\n+              S'inscrire\r\n+            </Text>\r\n+          </TouchableOpacity>\r\n+\r\n+          {/* Lien vers login */}\r\n+          <View style={{ alignItems: \"center\" }}>\r\n+            <Text>\r\n+              Déjà un compte ?{\" \"}\r\n+              <Text\r\n+                style={{ color: \"#00bcd4\", textDecorationLine: \"underline\" }}\r\n+                onPress={() => navigation.navigate(\"Login\")}\r\n+              >\r\n+                Se connecter\r\n+              </Text>\r\n+            </Text>\r\n+          </View>\r\n+        </View>\r\n+      </ScrollView>\r\n+\r\n+      <Footer />\r\n+    </View>\r\n+  );\r\n+};\r\n+\r\n+export default Register;\r\n"
                }
            ],
            "date": 1752738983016,
            "name": "Commit-0",
            "content": "import { supabase } from \"@/integrations/supabase/client\";\r\nimport Footer from \"@/src/components/Footer\";\r\nimport Navbar from \"@/src/components/Navbar\";\r\nimport type { RootStackParamList } from \"@/src/navigation/types\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport type { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  ScrollView,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\n\r\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList>;\r\n\r\nconst Register = () => {\r\n  const navigation = useNavigation<NavigationProp>();\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n\r\n  const isPasswordValid = (pwd: string) => {\r\n    const regex =\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|<>?,./`~]).{8,}$/;\r\n    return regex.test(pwd);\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    if (!isPasswordValid(password)) {\r\n      setPasswordError(true);\r\n      Alert.alert(\r\n        \"Mot de passe invalide\",\r\n        \"Le mot de passe doit contenir : 1 minuscule, 1 majuscule, 1 chiffre et 1 caractère spécial.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data, error } = await supabase.auth.signUp({\r\n        email,\r\n        password,\r\n        options: {\r\n          data: {\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n          },\r\n        },\r\n      });\r\n\r\n      if (error) {\r\n        if (\r\n          error.message.includes(\"already registered\") ||\r\n          error.message.includes(\"Email already in use\")\r\n        ) {\r\n          Alert.alert(\r\n            \"Cet email est déjà associé à un compte\",\r\n            \"Essayez de vous connecter ou de réinitialiser votre mot de passe.\"\r\n          );\r\n        } else {\r\n          Alert.alert(\"Erreur\", error.message);\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (data.user) {\r\n        Alert.alert(\r\n          \"Inscription réussie\",\r\n          \"Vous êtes maintenant inscrit. Bienvenue chez Lys&Co!\",\r\n          [{ text: \"OK\", onPress: () => navigation.navigate(\"Dashboard\") }]\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Registration error:\", err);\r\n      Alert.alert(\"Erreur\", \"Une erreur inattendue est survenue\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n      <Navbar />\r\n\r\n      <ScrollView\r\n        contentContainerStyle={{\r\n          flexGrow: 1,\r\n          justifyContent: \"center\",\r\n          padding: 20,\r\n        }}\r\n      >\r\n        <View style={{ backgroundColor: \"#fff\", padding: 20, borderRadius: 8 }}>\r\n          <Text\r\n            style={{\r\n              fontSize: 24,\r\n              fontWeight: \"bold\",\r\n              textAlign: \"center\",\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            Créer un compte\r\n          </Text>\r\n          <Text style={{ textAlign: \"center\", marginBottom: 20 }}>\r\n            Inscrivez-vous pour accéder à nos services\r\n          </Text>\r\n\r\n          {/* Prénom & Nom */}\r\n          <View style={{ flexDirection: \"row\", gap: 10, marginBottom: 10 }}>\r\n            <TextInput\r\n              style={{ flex: 1, borderWidth: 1, padding: 10, borderRadius: 6 }}\r\n              placeholder=\"Prénom\"\r\n              value={firstName}\r\n              onChangeText={setFirstName}\r\n            />\r\n            <TextInput\r\n              style={{ flex: 1, borderWidth: 1, padding: 10, borderRadius: 6 }}\r\n              placeholder=\"Nom\"\r\n              value={lastName}\r\n              onChangeText={setLastName}\r\n            />\r\n          </View>\r\n\r\n          {/* Email */}\r\n          <TextInput\r\n            style={{\r\n              borderWidth: 1,\r\n              padding: 10,\r\n              borderRadius: 6,\r\n              marginBottom: 10,\r\n            }}\r\n            placeholder=\"Email\"\r\n            keyboardType=\"email-address\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n          />\r\n\r\n          {/* Mot de passe */}\r\n          <TextInput\r\n            style={{\r\n              borderWidth: 1,\r\n              padding: 10,\r\n              borderRadius: 6,\r\n              marginBottom: passwordError ? 5 : 10,\r\n              borderColor: passwordError ? \"red\" : \"#ccc\",\r\n            }}\r\n            placeholder=\"Mot de passe\"\r\n            secureTextEntry={!showPassword}\r\n            value={password}\r\n            onChangeText={(val) => {\r\n              setPassword(val);\r\n              setPasswordError(!isPasswordValid(val));\r\n            }}\r\n          />\r\n          {passwordError && (\r\n            <Text style={{ color: \"red\", fontSize: 12, marginBottom: 10 }}>\r\n              Le mot de passe doit contenir : 1 minuscule, 1 majuscule, 1\r\n              chiffre et 1 caractère spécial.\r\n            </Text>\r\n          )}\r\n\r\n          {/* Afficher/Masquer mot de passe */}\r\n          <TouchableOpacity\r\n            onPress={() => setShowPassword(!showPassword)}\r\n            style={{ alignSelf: \"flex-end\", marginBottom: 20 }}\r\n          >\r\n            <Text style={{ color: \"#007aff\" }}>\r\n              {showPassword\r\n                ? \"Masquer le mot de passe\"\r\n                : \"Afficher le mot de passe\"}\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Bouton inscription */}\r\n          <TouchableOpacity\r\n            onPress={handleRegister}\r\n            style={{\r\n              backgroundColor: \"#ec407a\",\r\n              padding: 12,\r\n              borderRadius: 6,\r\n              alignItems: \"center\",\r\n              marginBottom: 20,\r\n            }}\r\n          >\r\n            <Text style={{ color: \"#fff\", fontWeight: \"bold\" }}>\r\n              S'inscrire\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Lien vers login */}\r\n          <View style={{ alignItems: \"center\" }}>\r\n            <Text>\r\n              Déjà un compte ?{\" \"}\r\n              <Text\r\n                style={{ color: \"#00bcd4\", textDecorationLine: \"underline\" }}\r\n                onPress={() => navigation.navigate(\"Login\")}\r\n              >\r\n                Se connecter\r\n              </Text>\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      <Footer />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"
        }
    ]
}